unsat
(assume a0 (! (= (! (f (! (g (! (f (! (f a) :named @p_1)) :named @p_4)) :named @p_5)) :named @p_6) (! (f (! (g @p_1) :named @p_2)) :named @p_3)) :named @p_7))
(assume a1 (! (= @p_1 b) :named @p_8))
(assume a2 (! (= (! (f b) :named @p_9) a) :named @p_10))
(assume a3 (! (not (! (= a b) :named @p_11)) :named @p_12))
(assume a4 (! (= (! (g a) :named @p_13) @p_1) :named @p_14))
(assume a5 (! (= (! (g b) :named @p_15) @p_9) :named @p_16))
(step t0 (cl (not (! (= (! (or (! (not @p_7) :named @p_33) (! (not (! (= @p_1 @p_13) :named @p_26)) :named @p_35) (! (not (! (= a @p_4) :named @p_17)) :named @p_34) (! (not (! (= @p_4 @p_2) :named @p_27)) :named @p_36) (! (not (! (not (! (= a @p_1) :named @p_23)) :named @p_24)) :named @p_38)) :named @p_39) (! (or @p_33 @p_35 @p_34 @p_36 @p_23) :named @p_37)) :named @p_58)) (not @p_39) @p_37) :rule equiv_pos2)
(step t1 (cl (= @p_33 @p_33)) :rule refl)
(step t2 (cl (= @p_35 @p_35)) :rule refl)
(step t3 (cl (= @p_34 @p_34)) :rule refl)
(step t4 (cl (= @p_36 @p_36)) :rule refl)
(step t5 (cl (= (! (= (! (= @p_38 @p_23) :named @p_59) true) :named @p_60) @p_59)) :rule equiv_simplify)
(step t6 (cl (not @p_60) @p_59) :rule equiv1 :premises (t5))
(step t7 (cl (= @p_59 (! (= @p_23 @p_38) :named @p_61))) :rule rare_rewrite :args ("eq-symm" @p_38 @p_23))
(step t8 (cl (! (= @p_23 @p_23) :named @p_62)) :rule refl)
(step t9 (cl @p_59) :rule rare_rewrite :args ("bool-double-not-elim" @p_23))
(step t10 (cl (= @p_61 @p_62)) :rule cong :premises (t8 t9))
(step t11 (cl (= @p_62 false)) :rule rare_rewrite :args ("eq-refl" @p_23))
(step t12 (cl (= @p_61 true)) :rule trans :premises (t10 t11))
(step t13 (cl @p_60) :rule trans :premises (t7 t12))
(step t14 (cl @p_59) :rule resolution :premises (t6 t13))
(step t15 (cl @p_58) :rule cong :premises (t1 t2 t3 t4 t14))
(step t16 (cl (! (=> (! (and @p_7 @p_26 @p_17 @p_27 @p_24) :named @p_41) (! (and @p_17 (! (= a @p_13) :named @p_43) @p_26 @p_24) :named @p_44)) :named @p_52) @p_41) :rule implies_neg1)
(anchor :step t17)
(assume t17.a0 @p_7)
(assume t17.a1 @p_26)
(assume t17.a2 @p_17)
(assume t17.a3 @p_27)
(assume t17.a4 @p_24)
(step t17.t0 (cl @p_44 @p_34 (! (not @p_43) :named @p_47) @p_35 @p_38) :rule and_neg)
(step t17.t1 (cl (! (not (! (= @p_10 @p_17) :named @p_18)) :named @p_21) (! (not @p_10) :named @p_22) @p_17) :rule equiv_pos2)
(step t17.t2 (cl (= (* 1/1 (- @p_9 a)) (* -1/1 (- a @p_9)))) :rule hole :args ("arith-poly-norm"))
(step t17.t3 (cl (! (= @p_10 (! (= a @p_9) :named @p_19)) :named @p_20)) :rule hole :premises (t17.t2) :args ("ARITH_POLY_NORM_REL" @p_20))
(step t17.t4 (cl (= a a)) :rule refl)
(step t17.t5 (cl (= b @p_1)) :rule symm :premises (a1))
(step t17.t6 (cl (= @p_9 @p_4)) :rule cong :premises (t17.t5))
(step t17.t7 (cl (= @p_19 @p_17)) :rule cong :premises (t17.t4 t17.t6))
(step t17.t8 (cl @p_18) :rule trans :premises (t17.t3 t17.t7))
(step t17.t9 (cl @p_17) :rule resolution :premises (t17.t1 t17.t8 a2))
(step t17.t10 (cl (! (=> (! (and @p_26 (! (= a @p_2) :named @p_53) @p_7 @p_17) :named @p_54) @p_43) :named @p_57) @p_54) :rule implies_neg1)
(anchor :step t17.t11)
(assume t17.t11.a0 @p_26)
(assume t17.t11.a1 @p_53)
(assume t17.t11.a2 @p_7)
(assume t17.t11.a3 @p_17)
(step t17.t11.t0 (cl @p_26) :rule symm :premises (a4))
(step t17.t11.t1 (cl (= @p_13 @p_5)) :rule cong :premises (t17.t9))
(step t17.t11.t2 (cl (= @p_1 @p_5)) :rule trans :premises (t17.t11.t0 t17.t11.t1))
(step t17.t11.t3 (cl (= @p_4 @p_6)) :rule cong :premises (t17.t11.t2))
(step t17.t11.t4 (cl @p_21 @p_22 @p_17) :rule equiv_pos2)
(step t17.t11.t5 (cl @p_17) :rule resolution :premises (t17.t11.t4 t17.t8 a2))
(step t17.t11.t6 (cl (! (not (! (= @p_16 @p_27) :named @p_28)) :named @p_31) (! (not @p_16) :named @p_32) @p_27) :rule equiv_pos2)
(step t17.t11.t7 (cl (= (* 1/1 (- @p_15 @p_9)) (* -1/1 (- @p_9 @p_15)))) :rule hole :args ("arith-poly-norm"))
(step t17.t11.t8 (cl (! (= @p_16 (! (= @p_9 @p_15) :named @p_29)) :named @p_30)) :rule hole :premises (t17.t11.t7) :args ("ARITH_POLY_NORM_REL" @p_30))
(step t17.t11.t9 (cl (= @p_15 @p_2)) :rule cong :premises (t17.t5))
(step t17.t11.t10 (cl (= @p_29 @p_27)) :rule cong :premises (t17.t6 t17.t11.t9))
(step t17.t11.t11 (cl @p_28) :rule trans :premises (t17.t11.t8 t17.t11.t10))
(step t17.t11.t12 (cl @p_27) :rule resolution :premises (t17.t11.t6 t17.t11.t11 a5))
(step t17.t11.t13 (cl @p_53) :rule trans :premises (t17.t11.t5 t17.t11.t12))
(step t17.t11.t14 (cl (= @p_2 a)) :rule symm :premises (t17.t11.t13))
(step t17.t11.t15 (cl (= @p_3 @p_1)) :rule cong :premises (t17.t11.t14))
(step t17.t11.t16 (cl @p_43) :rule trans :premises (t17.t9 t17.t11.t3 t17.t11.a2 t17.t11.t15 t17.t11.t0))
(step t17.t11 (cl @p_35 (! (not @p_53) :named @p_55) @p_33 @p_34 @p_43) :rule subproof :discharge (t17.t11.a0 t17.t11.a1 t17.t11.a2 t17.t11.a3))
(step t17.t12 (cl (! (not @p_54) :named @p_56) @p_26) :rule and_pos :args (0))
(step t17.t13 (cl @p_56 @p_53) :rule and_pos :args (1))
(step t17.t14 (cl @p_56 @p_7) :rule and_pos :args (2))
(step t17.t15 (cl @p_56 @p_17) :rule and_pos :args (3))
(step t17.t16 (cl @p_43 @p_56 @p_56 @p_56 @p_56) :rule resolution :premises (t17.t11 t17.t12 t17.t13 t17.t14 t17.t15))
(step t17.t17 (cl @p_56 @p_56 @p_56 @p_56 @p_43) :rule reordering :premises (t17.t16))
(step t17.t18 (cl @p_56 @p_43) :rule contraction :premises (t17.t17))
(step t17.t19 (cl @p_57 @p_43) :rule resolution :premises (t17.t10 t17.t18))
(step t17.t20 (cl @p_57 @p_47) :rule implies_neg2)
(step t17.t21 (cl @p_57 @p_57) :rule resolution :premises (t17.t19 t17.t20))
(step t17.t22 (cl @p_57) :rule contraction :premises (t17.t21))
(step t17.t23 (cl @p_56 @p_43) :rule implies :premises (t17.t22))
(step t17.t24 (cl @p_54 @p_35 @p_55 @p_33 @p_34) :rule and_neg)
(step t17.t25 (cl @p_26) :rule symm :premises (a4))
(step t17.t26 (cl @p_31 @p_32 @p_27) :rule equiv_pos2)
(step t17.t27 (cl (= (* 1/1 (- @p_15 @p_9)) (* -1/1 (- @p_9 @p_15)))) :rule hole :args ("arith-poly-norm"))
(step t17.t28 (cl @p_30) :rule hole :premises (t17.t27) :args ("ARITH_POLY_NORM_REL" @p_30))
(step t17.t29 (cl (= @p_15 @p_2)) :rule cong :premises (t17.t5))
(step t17.t30 (cl (= @p_29 @p_27)) :rule cong :premises (t17.t6 t17.t29))
(step t17.t31 (cl @p_28) :rule trans :premises (t17.t28 t17.t30))
(step t17.t32 (cl @p_27) :rule resolution :premises (t17.t26 t17.t31 a5))
(step t17.t33 (cl @p_53) :rule trans :premises (t17.t9 t17.t32))
(step t17.t34 (cl @p_54) :rule resolution :premises (t17.t24 t17.t25 t17.t33 t17.a0 t17.t9))
(step t17.t35 (cl @p_43) :rule resolution :premises (t17.t23 t17.t34))
(step t17.t36 (cl (not (! (= @p_12 @p_24) :named @p_25)) (not @p_12) @p_24) :rule equiv_pos2)
(step t17.t37 (cl (= @p_11 @p_23)) :rule cong :premises (t17.t4 t17.t5))
(step t17.t38 (cl @p_25) :rule cong :premises (t17.t37))
(step t17.t39 (cl @p_24) :rule resolution :premises (t17.t36 t17.t38 a3))
(step t17.t40 (cl @p_44) :rule resolution :premises (t17.t0 t17.t9 t17.t35 t17.t25 t17.t39))
(step t17 (cl @p_33 @p_35 @p_34 @p_36 @p_38 @p_44) :rule subproof :discharge (t17.a0 t17.a1 t17.a2 t17.a3 t17.a4))
(step t18 (cl (! (not @p_41) :named @p_42) @p_7) :rule and_pos :args (0))
(step t19 (cl @p_42 @p_26) :rule and_pos :args (1))
(step t20 (cl @p_42 @p_17) :rule and_pos :args (2))
(step t21 (cl @p_42 @p_27) :rule and_pos :args (3))
(step t22 (cl @p_42 @p_24) :rule and_pos :args (4))
(step t23 (cl @p_44 @p_42 @p_42 @p_42 @p_42 @p_42) :rule resolution :premises (t17 t18 t19 t20 t21 t22))
(step t24 (cl @p_42 @p_42 @p_42 @p_42 @p_42 @p_44) :rule reordering :premises (t23))
(step t25 (cl @p_42 @p_44) :rule contraction :premises (t24))
(step t26 (cl @p_52 @p_44) :rule resolution :premises (t16 t25))
(step t27 (cl @p_52 (! (not @p_44) :named @p_45)) :rule implies_neg2)
(step t28 (cl @p_52 @p_52) :rule resolution :premises (t26 t27))
(step t29 (cl @p_52) :rule contraction :premises (t28))
(step t30 (cl @p_42 @p_44) :rule implies :premises (t29))
(step t31 (cl (! (=> @p_44 false) :named @p_46) @p_44) :rule implies_neg1)
(anchor :step t32)
(assume t32.a0 @p_17)
(assume t32.a1 @p_43)
(assume t32.a2 @p_26)
(assume t32.a3 @p_24)
(step t32.t0 (cl (not (! (= (! (= false true) :named @p_48) false) :named @p_51)) (not @p_48) false) :rule equiv_pos2)
(step t32.t1 (cl @p_51) :rule hole :args ("evaluate"))
(step t32.t2 (cl (= (! (= @p_23 false) :named @p_50) @p_24)) :rule equiv_simplify)
(step t32.t3 (cl @p_50 @p_38) :rule equiv2 :premises (t32.t2))
(step t32.t4 (cl (! (not @p_38) :named @p_40) @p_23) :rule not_not)
(step t32.t5 (cl @p_50 @p_23) :rule resolution :premises (t32.t3 t32.t4))
(step t32.t6 (cl (not @p_25) (not @p_12) @p_24) :rule equiv_pos2)
(step t32.t7 (cl (= a a)) :rule refl)
(step t32.t8 (cl (= b @p_1)) :rule symm :premises (a1))
(step t32.t9 (cl (= @p_11 @p_23)) :rule cong :premises (t32.t7 t32.t8))
(step t32.t10 (cl @p_25) :rule cong :premises (t32.t9))
(step t32.t11 (cl @p_24) :rule resolution :premises (t32.t6 t32.t10 a3))
(step t32.t12 (cl @p_50) :rule resolution :premises (t32.t5 t32.t11))
(step t32.t13 (cl (= false @p_23)) :rule symm :premises (t32.t12))
(step t32.t14 (cl (= (! (= @p_23 true) :named @p_49) @p_23)) :rule equiv_simplify)
(step t32.t15 (cl @p_49 @p_24) :rule equiv2 :premises (t32.t14))
(step t32.t16 (cl @p_21 @p_22 @p_17) :rule equiv_pos2)
(step t32.t17 (cl (= (* 1/1 (- @p_9 a)) (* -1/1 (- a @p_9)))) :rule hole :args ("arith-poly-norm"))
(step t32.t18 (cl @p_20) :rule hole :premises (t32.t17) :args ("ARITH_POLY_NORM_REL" @p_20))
(step t32.t19 (cl (= @p_9 @p_4)) :rule cong :premises (t32.t8))
(step t32.t20 (cl (= @p_19 @p_17)) :rule cong :premises (t32.t7 t32.t19))
(step t32.t21 (cl @p_18) :rule trans :premises (t32.t18 t32.t20))
(step t32.t22 (cl @p_17) :rule resolution :premises (t32.t16 t32.t21 a2))
(step t32.t23 (cl @p_26) :rule symm :premises (a4))
(step t32.t24 (cl (= @p_13 a)) :rule symm :premises (t32.a1))
(step t32.t25 (cl (= @p_1 @p_4)) :rule trans :premises (t32.t23 t32.t24 t32.t22))
(step t32.t26 (cl (= @p_4 @p_1)) :rule symm :premises (t32.t25))
(step t32.t27 (cl @p_23) :rule trans :premises (t32.t22 t32.t26))
(step t32.t28 (cl @p_49) :rule resolution :premises (t32.t15 t32.t27))
(step t32.t29 (cl @p_48) :rule trans :premises (t32.t13 t32.t28))
(step t32.t30 (cl false) :rule resolution :premises (t32.t0 t32.t1 t32.t29))
(step t32 (cl @p_34 @p_47 @p_35 @p_38 false) :rule subproof :discharge (t32.a0 t32.a1 t32.a2 t32.a3))
(step t33 (cl @p_45 @p_17) :rule and_pos :args (0))
(step t34 (cl @p_45 @p_43) :rule and_pos :args (1))
(step t35 (cl @p_45 @p_26) :rule and_pos :args (2))
(step t36 (cl @p_45 @p_24) :rule and_pos :args (3))
(step t37 (cl false @p_45 @p_45 @p_45 @p_45) :rule resolution :premises (t32 t33 t34 t35 t36))
(step t38 (cl @p_45 @p_45 @p_45 @p_45 false) :rule reordering :premises (t37))
(step t39 (cl @p_45 false) :rule contraction :premises (t38))
(step t40 (cl @p_46 false) :rule resolution :premises (t31 t39))
(step t41 (cl @p_46 (not false)) :rule implies_neg2)
(step t42 (cl @p_46 @p_46) :rule resolution :premises (t40 t41))
(step t43 (cl @p_46) :rule contraction :premises (t42))
(step t44 (cl (= @p_46 @p_45)) :rule implies_simplify)
(step t45 (cl (not @p_46) @p_45) :rule equiv1 :premises (t44))
(step t46 (cl @p_45) :rule resolution :premises (t43 t45))
(step t47 (cl @p_42) :rule resolution :premises (t30 t46))
(step t48 (cl @p_33 @p_35 @p_34 @p_36 @p_38) :rule not_and :premises (t47))
(step t49 (cl @p_39 (not @p_33)) :rule or_neg :args (0))
(step t50 (cl @p_39 (not @p_35)) :rule or_neg :args (1))
(step t51 (cl @p_39 (not @p_34)) :rule or_neg :args (2))
(step t52 (cl @p_39 (not @p_36)) :rule or_neg :args (3))
(step t53 (cl @p_39 @p_40) :rule or_neg :args (4))
(step t54 (cl @p_39 @p_39 @p_39 @p_39 @p_39) :rule resolution :premises (t48 t49 t50 t51 t52 t53))
(step t55 (cl @p_39) :rule contraction :premises (t54))
(step t56 (cl @p_37) :rule resolution :premises (t0 t15 t55))
(step t57 (cl @p_33 @p_35 @p_34 @p_36 @p_23) :rule or :premises (t56))
(step t58 (cl @p_23 @p_33 @p_34 @p_35 @p_36) :rule reordering :premises (t57))
(step t59 (cl @p_31 @p_32 @p_27) :rule equiv_pos2)
(step t60 (cl (= (* 1/1 (- @p_15 @p_9)) (* -1/1 (- @p_9 @p_15)))) :rule hole :args ("arith-poly-norm"))
(step t61 (cl @p_30) :rule hole :premises (t60) :args ("ARITH_POLY_NORM_REL" @p_30))
(step t62 (cl (= b @p_1)) :rule symm :premises (a1))
(step t63 (cl (= @p_9 @p_4)) :rule cong :premises (t62))
(step t64 (cl (= @p_15 @p_2)) :rule cong :premises (t62))
(step t65 (cl (= @p_29 @p_27)) :rule cong :premises (t63 t64))
(step t66 (cl @p_28) :rule trans :premises (t61 t65))
(step t67 (cl @p_27) :rule resolution :premises (t59 t66 a5))
(step t68 (cl @p_26) :rule symm :premises (a4))
(step t69 (cl (not @p_25) (not @p_12) @p_24) :rule equiv_pos2)
(step t70 (cl (= a a)) :rule refl)
(step t71 (cl (= @p_11 @p_23)) :rule cong :premises (t70 t62))
(step t72 (cl @p_25) :rule cong :premises (t71))
(step t73 (cl @p_24) :rule resolution :premises (t69 t72 a3))
(step t74 (cl @p_21 @p_22 @p_17) :rule equiv_pos2)
(step t75 (cl (= (* 1/1 (- @p_9 a)) (* -1/1 (- a @p_9)))) :rule hole :args ("arith-poly-norm"))
(step t76 (cl @p_20) :rule hole :premises (t75) :args ("ARITH_POLY_NORM_REL" @p_20))
(step t77 (cl (= @p_19 @p_17)) :rule cong :premises (t70 t63))
(step t78 (cl @p_18) :rule trans :premises (t76 t77))
(step t79 (cl @p_17) :rule resolution :premises (t74 t78 a2))
(step t80 (cl) :rule resolution :premises (t58 t67 t68 t73 t79 a0))

