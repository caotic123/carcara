(assume a0 (! (= (! (str.++ y w "A:" x) :named @p_2) (! (str.++ z "::BBBB") :named @p_1)) :named @p_3))
(assume a1 (! (> (! (str.len y) :named @p_5) (! (str.len z) :named @p_4)) :named @p_6))
(assume a2 (! (not (! (= w "") :named @p_7)) :named @p_8))
(assume a3 (! (not (! (= x "") :named @p_9)) :named @p_10))
(step t0 (cl (! (=> (! (and @p_3 (! (>= (! (+ @p_5 (! (* -1 @p_4) :named @p_65)) :named @p_66) 1) :named @p_67) (! (= @p_1 @p_1) :named @p_11) (! (= @p_4 (! (+ -6 (! (str.len @p_1) :named @p_12)) :named @p_13)) :named @p_14) (! (>= (! (str.len w) :named @p_31) 1) :named @p_77) (! (= @p_2 @p_2) :named @p_27) (! (= @p_5 (! (+ -2 (! (* -1 @p_31) :named @p_32) (! (* -1 (! (str.len x) :named @p_29)) :named @p_30) (! (str.len @p_2) :named @p_28)) :named @p_33)) :named @p_34) (! (= (! (str.len (! (str.substr x 0 (! (+ -5 @p_29) :named @p_92)) :named @p_93)) :named @p_98) 0) :named @p_149) (! (= x (! (str.++ @p_93 ":BBBB") :named @p_94)) :named @p_111) (! (= @p_94 @p_94) :named @p_95) (! (= (! (str.len (! (str.substr x 0 (! (+ -5 @p_29) :named @p_92)) :named @p_93)) :named @p_98) (! (+ -5 (! (str.len @p_94) :named @p_96)) :named @p_97)) :named @p_99)) :named @p_249) (! (and (! (= @p_29 @p_96) :named @p_154) @p_99 (! (= @p_12 @p_28) :named @p_155) @p_67 @p_14 @p_34 @p_77 (! (= (! (str.len (! (str.substr x 0 (! (+ -5 @p_29) :named @p_92)) :named @p_93)) :named @p_98) 0) :named @p_149)) :named @p_251)) :named @p_266) @p_249) :rule implies_neg1)
(anchor :step t1)
(assume t1.a0 @p_3)
(assume t1.a1 @p_67)
(assume t1.a2 @p_11)
(assume t1.a3 @p_14)
(assume t1.a4 @p_77)
(assume t1.a5 @p_27)
(assume t1.a6 @p_34)
(assume t1.a7 @p_149)
(assume t1.a8 @p_111)
(assume t1.a9 @p_95)
(assume t1.a10 @p_99)
(step t1.t0 (cl @p_251 (! (not @p_154) :named @p_161) (! (not @p_99) :named @p_160) (! (not @p_155) :named @p_159) (! (not @p_67) :named @p_71) (! (not @p_14) :named @p_157) (! (not @p_34) :named @p_158) (! (not @p_77) :named @p_86) (! (not @p_149) :named @p_246)) :rule and_neg)
(step t1.t1 (cl (not (! (= (! (=> (! (and @p_3 @p_10) :named @p_112) (! (= x (! (str.++ @p_93 (! (str.substr "::BBBB" (! (- (! (str.len "::BBBB") :named @p_22) 5) :named @p_124) 5) :named @p_125)) :named @p_126)) :named @p_127)) :named @p_128) (! (=> @p_112 @p_111) :named @p_123)) :named @p_148)) (not @p_128) @p_123) :rule equiv_pos2)
(step t1.t2 (cl (= @p_112 @p_112)) :rule refl)
(step t1.t3 (cl (= x x)) :rule refl)
(step t1.t4 (cl (! (= @p_93 @p_93) :named @p_109)) :rule refl)
(step t1.t5 (cl (= "::BBBB" "::BBBB")) :rule refl)
(step t1.t6 (cl (! (= @p_124 1) :named @p_137)) :rule hole :args ("evaluate"))
(step t1.t7 (cl (! (= (! (+ @p_22 (! (* -1 5) :named @p_138)) :named @p_139) 1) :named @p_140)) :rule hole :args ("evaluate"))
(step t1.t8 (cl (= 1 @p_139)) :rule symm :premises (t1.t7))
(step t1.t9 (cl (= @p_124 @p_139)) :rule trans :premises (t1.t6 t1.t8))
(step t1.t10 (cl (! (= @p_22 6) :named @p_24)) :rule hole :args ("evaluate"))
(step t1.t11 (cl (= @p_138 -5)) :rule hole :args ("evaluate"))
(step t1.t12 (cl (= @p_139 (! (+ 6 -5) :named @p_141))) :rule cong :premises (t1.t10 t1.t11))
(step t1.t13 (cl (= @p_141 1)) :rule hole :args ("evaluate"))
(step t1.t14 (cl @p_140) :rule trans :premises (t1.t12 t1.t13))
(step t1.t15 (cl @p_137) :rule trans :premises (t1.t9 t1.t14))
(step t1.t16 (cl (= 5 5)) :rule refl)
(step t1.t17 (cl (= @p_125 (! (str.substr "::BBBB" 1 5) :named @p_136))) :rule cong :premises (t1.t5 t1.t15 t1.t16))
(step t1.t18 (cl (= @p_136 ":BBBB")) :rule hole :args ("evaluate"))
(step t1.t19 (cl (= @p_125 ":BBBB")) :rule trans :premises (t1.t17 t1.t18))
(step t1.t20 (cl (= @p_126 @p_94)) :rule cong :premises (t1.t4 t1.t19))
(step t1.t21 (cl (! (= @p_127 @p_111) :named @p_135)) :rule cong :premises (t1.t3 t1.t20))
(step t1.t22 (cl @p_148) :rule cong :premises (t1.t2 t1.t21))
(step t1.t23 (cl @p_128 @p_112) :rule implies_neg1)
(anchor :step t1.t24)
(assume t1.t24.a0 @p_3)
(assume t1.t24.a1 @p_10)
(step t1.t24.t0 (cl (not (! (= (! (= x (! (str.++ (! (str.substr x 0 (! (- @p_29 (! (str.len @p_125) :named @p_129)) :named @p_130)) :named @p_131) @p_125) :named @p_132)) :named @p_133) @p_127) :named @p_134)) (not @p_133) @p_127) :rule equiv_pos2)
(step t1.t24.t1 (cl (! (= @p_131 @p_131) :named @p_147)) :rule refl)
(step t1.t24.t2 (cl (= @p_132 (! (str.++ @p_131 ":BBBB") :named @p_142))) :rule cong :premises (t1.t24.t1 t1.t19))
(step t1.t24.t3 (cl (= @p_133 (! (= x @p_142) :named @p_143))) :rule cong :premises (t1.t3 t1.t24.t2))
(step t1.t24.t4 (cl @p_147) :rule refl)
(step t1.t24.t5 (cl (= ":BBBB" ":BBBB")) :rule refl)
(step t1.t24.t6 (cl (= @p_142 @p_142)) :rule cong :premises (t1.t24.t4 t1.t24.t5))
(step t1.t24.t7 (cl (= @p_143 @p_143)) :rule cong :premises (t1.t3 t1.t24.t6))
(step t1.t24.t8 (cl (= 0 0)) :rule refl)
(step t1.t24.t9 (cl (= @p_130 (! (+ @p_29 (! (* -1 @p_129) :named @p_144)) :named @p_145))) :rule hole :args ("arith-poly-norm"))
(step t1.t24.t10 (cl (! (= @p_29 @p_29) :named @p_51)) :rule refl)
(step t1.t24.t11 (cl (= -1 -1)) :rule refl)
(step t1.t24.t12 (cl (= @p_129 (! (str.len ":BBBB") :named @p_106))) :rule cong :premises (t1.t19))
(step t1.t24.t13 (cl (! (= @p_106 5) :named @p_108)) :rule hole :args ("evaluate"))
(step t1.t24.t14 (cl (= @p_129 5)) :rule trans :premises (t1.t24.t12 t1.t24.t13))
(step t1.t24.t15 (cl (= @p_144 @p_138)) :rule cong :premises (t1.t24.t11 t1.t24.t14))
(step t1.t24.t16 (cl (= @p_144 -5)) :rule trans :premises (t1.t24.t15 t1.t11))
(step t1.t24.t17 (cl (= @p_145 (! (+ @p_29 -5) :named @p_146))) :rule cong :premises (t1.t24.t10 t1.t24.t16))
(step t1.t24.t18 (cl (= @p_146 @p_92)) :rule hole :args ("arith-poly-norm"))
(step t1.t24.t19 (cl (= @p_145 @p_92)) :rule trans :premises (t1.t24.t17 t1.t24.t18))
(step t1.t24.t20 (cl (= @p_130 @p_92)) :rule trans :premises (t1.t24.t9 t1.t24.t19))
(step t1.t24.t21 (cl (= @p_131 @p_93)) :rule cong :premises (t1.t3 t1.t24.t8 t1.t24.t20))
(step t1.t24.t22 (cl (= @p_142 @p_94)) :rule cong :premises (t1.t24.t21 t1.t24.t5))
(step t1.t24.t23 (cl (= @p_143 @p_111)) :rule cong :premises (t1.t3 t1.t24.t22))
(step t1.t24.t24 (cl @p_109) :rule refl)
(step t1.t24.t25 (cl @p_95) :rule cong :premises (t1.t24.t24 t1.t24.t5))
(step t1.t24.t26 (cl (= @p_111 @p_111)) :rule cong :premises (t1.t3 t1.t24.t25))
(step t1.t24.t27 (cl @p_135) :rule trans :premises (t1.t21 t1.t24.t26))
(step t1.t24.t28 (cl (= @p_111 @p_127)) :rule symm :premises (t1.t24.t27))
(step t1.t24.t29 (cl @p_134) :rule trans :premises (t1.t24.t3 t1.t24.t7 t1.t24.t23 t1.t24.t28))
(step t1.t24.t30 (cl (not (= @p_29 0))) :rule hole :premises (t1.t24.a1) :args ("STRING_LENGTH_NON_EMPTY"))
(step t1.t24.t31 (cl @p_133) :rule hole :premises (t1.t24.a0 t1.t24.t30) :args ("CONCAT_CPROP" true))
(step t1.t24.t32 (cl @p_127) :rule resolution :premises (t1.t24.t0 t1.t24.t29 t1.t24.t31))
(step t1.t24 (cl (! (not @p_3) :named @p_113) (! (not @p_10) :named @p_115) @p_127) :rule subproof :discharge (t1.t24.a0 t1.t24.a1))
(step t1.t25 (cl (! (not @p_112) :named @p_117) @p_3) :rule and_pos :args (0))
(step t1.t26 (cl @p_117 @p_10) :rule and_pos :args (1))
(step t1.t27 (cl @p_127 @p_117 @p_117) :rule resolution :premises (t1.t24 t1.t25 t1.t26))
(step t1.t28 (cl @p_117 @p_117 @p_127) :rule reordering :premises (t1.t27))
(step t1.t29 (cl @p_117 @p_127) :rule contraction :premises (t1.t28))
(step t1.t30 (cl @p_128 @p_127) :rule resolution :premises (t1.t23 t1.t29))
(step t1.t31 (cl @p_128 (not @p_127)) :rule implies_neg2)
(step t1.t32 (cl @p_128 @p_128) :rule resolution :premises (t1.t30 t1.t31))
(step t1.t33 (cl @p_128) :rule contraction :premises (t1.t32))
(step t1.t34 (cl @p_123) :rule resolution :premises (t1.t1 t1.t22 t1.t33))
(step t1.t35 (cl @p_117 @p_111) :rule implies :premises (t1.t34))
(step t1.t36 (cl @p_111 @p_117) :rule reordering :premises (t1.t35))
(step t1.t37 (cl (not (! (= (! (or @p_112 @p_113 @p_115) :named @p_116) (! (or @p_112 @p_113 @p_9) :named @p_114)) :named @p_118)) (not @p_116) @p_114) :rule equiv_pos2)
(step t1.t38 (cl (= @p_113 @p_113)) :rule refl)
(step t1.t39 (cl (= (! (= (! (= @p_115 @p_9) :named @p_119) true) :named @p_120) @p_119)) :rule equiv_simplify)
(step t1.t40 (cl (not @p_120) @p_119) :rule equiv1 :premises (t1.t39))
(step t1.t41 (cl (= @p_119 (! (= @p_9 @p_115) :named @p_121))) :rule rare_rewrite :args ("eq-symm" @p_115 @p_9))
(step t1.t42 (cl (! (= @p_9 @p_9) :named @p_122)) :rule refl)
(step t1.t43 (cl @p_119) :rule rare_rewrite :args ("bool-double-not-elim" @p_9))
(step t1.t44 (cl (= @p_121 @p_122)) :rule cong :premises (t1.t42 t1.t43))
(step t1.t45 (cl (= @p_122 true)) :rule rare_rewrite :args ("eq-refl" @p_9))
(step t1.t46 (cl (= @p_121 true)) :rule trans :premises (t1.t44 t1.t45))
(step t1.t47 (cl @p_120) :rule trans :premises (t1.t41 t1.t46))
(step t1.t48 (cl @p_119) :rule resolution :premises (t1.t40 t1.t47))
(step t1.t49 (cl @p_118) :rule cong :premises (t1.t2 t1.t38 t1.t48))
(step t1.t50 (cl @p_112 @p_113 @p_115) :rule and_neg)
(step t1.t51 (cl @p_116 @p_117) :rule or_neg :args (0))
(step t1.t52 (cl @p_116 (not @p_113)) :rule or_neg :args (1))
(step t1.t53 (cl @p_116 (not @p_115)) :rule or_neg :args (2))
(step t1.t54 (cl @p_116 @p_116 @p_116) :rule resolution :premises (t1.t50 t1.t51 t1.t52 t1.t53))
(step t1.t55 (cl @p_116) :rule contraction :premises (t1.t54))
(step t1.t56 (cl @p_114) :rule resolution :premises (t1.t37 t1.t49 t1.t55))
(step t1.t57 (cl @p_112 @p_113 @p_9) :rule or :premises (t1.t56))
(step t1.t58 (cl @p_9 @p_113 @p_112) :rule reordering :premises (t1.t57))
(step t1.t59 (cl @p_112) :rule resolution :premises (t1.t58 a3 t1.a0))
(step t1.t60 (cl @p_111) :rule resolution :premises (t1.t36 t1.t59))
(step t1.t61 (cl (= (! (= (! (and @p_95 @p_99) :named @p_100) true) :named @p_101) @p_100)) :rule equiv_simplify)
(step t1.t62 (cl (not @p_101) @p_100) :rule equiv1 :premises (t1.t61))
(step t1.t63 (cl (! (= @p_100 @p_100) :named @p_110)) :rule refl)
(step t1.t64 (cl @p_109) :rule refl)
(step t1.t65 (cl (= ":BBBB" ":BBBB")) :rule refl)
(step t1.t66 (cl @p_95) :rule cong :premises (t1.t64 t1.t65))
(step t1.t67 (cl @p_95) :rule refl)
(step t1.t68 (cl @p_95) :rule trans :premises (t1.t67 t1.t66))
(step t1.t69 (cl (= @p_95 @p_95)) :rule cong :premises (t1.t66 t1.t68))
(step t1.t70 (cl (! (= @p_98 @p_98) :named @p_102)) :rule cong :premises (t1.t64))
(step t1.t71 (cl (= -5 -5)) :rule refl)
(step t1.t72 (cl (= @p_96 @p_96)) :rule cong :premises (t1.t68))
(step t1.t73 (cl (= @p_97 @p_97)) :rule cong :premises (t1.t71 t1.t72))
(step t1.t74 (cl (= @p_99 @p_99)) :rule cong :premises (t1.t70 t1.t73))
(step t1.t75 (cl @p_110) :rule cong :premises (t1.t69 t1.t74))
(step t1.t76 (cl (= @p_95 @p_109)) :rule rare_rewrite :args ("str-concat-unify-rev" ":BBBB" @p_93 rare-list @p_93 rare-list))
(step t1.t77 (cl (= @p_109 true)) :rule rare_rewrite :args ("eq-refl" @p_93))
(step t1.t78 (cl (= @p_95 true)) :rule trans :premises (t1.t76 t1.t77))
(step t1.t79 (cl @p_102) :rule refl)
(step t1.t80 (cl (= @p_96 (! (+ @p_98 @p_106) :named @p_107))) :rule rare_rewrite :args ("str-len-concat-rec" @p_93 ":BBBB" rare-list))
(step t1.t81 (cl @p_102) :rule refl)
(step t1.t82 (cl @p_108) :rule hole :args ("evaluate"))
(step t1.t83 (cl (= @p_107 (! (+ @p_98 5) :named @p_105))) :rule cong :premises (t1.t81 t1.t82))
(step t1.t84 (cl (= @p_96 @p_105)) :rule trans :premises (t1.t80 t1.t83))
(step t1.t85 (cl (= @p_105 (! (+ 5 @p_98) :named @p_103))) :rule hole :args ("arith-poly-norm"))
(step t1.t86 (cl (= @p_96 @p_103)) :rule trans :premises (t1.t84 t1.t85))
(step t1.t87 (cl (= @p_97 (! (+ -5 @p_103) :named @p_104))) :rule cong :premises (t1.t71 t1.t86))
(step t1.t88 (cl (= @p_104 @p_98)) :rule hole :args ("arith-poly-norm"))
(step t1.t89 (cl (= @p_97 @p_98)) :rule trans :premises (t1.t87 t1.t88))
(step t1.t90 (cl (= @p_99 @p_102)) :rule cong :premises (t1.t79 t1.t89))
(step t1.t91 (cl (= @p_102 true)) :rule rare_rewrite :args ("eq-refl" @p_98))
(step t1.t92 (cl (= @p_99 true)) :rule trans :premises (t1.t90 t1.t91))
(step t1.t93 (cl (= @p_100 (! (and true true) :named @p_17))) :rule cong :premises (t1.t78 t1.t92))
(step t1.t94 (cl (= @p_17 true)) :rule hole :args ("evaluate"))
(step t1.t95 (cl @p_101) :rule trans :premises (t1.t93 t1.t94))
(step t1.t96 (cl @p_101) :rule trans :premises (t1.t63 t1.t75 t1.t95))
(step t1.t97 (cl @p_100) :rule resolution :premises (t1.t62 t1.t96))
(step t1.t98 (cl @p_95) :rule and :premises (t1.t97) :args (0))
(step t1.t99 (cl @p_111) :rule trans :premises (t1.t60 t1.t98))
(step t1.t100 (cl @p_154) :rule cong :premises (t1.t99))
(step t1.t101 (cl @p_99) :rule and :premises (t1.t97) :args (1))
(step t1.t102 (cl @p_11) :rule refl)
(step t1.t103 (cl (! (= @p_1 @p_2) :named @p_156)) :rule symm :premises (t1.a0))
(step t1.t104 (cl (= (! (= (! (and @p_27 @p_34) :named @p_35) true) :named @p_36) @p_35)) :rule equiv_simplify)
(step t1.t105 (cl (not @p_36) @p_35) :rule equiv1 :premises (t1.t104))
(step t1.t106 (cl (! (= @p_35 @p_35) :named @p_64)) :rule refl)
(step t1.t107 (cl @p_27) :rule refl)
(step t1.t108 (cl @p_27) :rule refl)
(step t1.t109 (cl (= @p_27 @p_27)) :rule cong :premises (t1.t107 t1.t108))
(step t1.t110 (cl (! (= @p_5 @p_5) :named @p_37)) :rule refl)
(step t1.t111 (cl (= -2 -2)) :rule refl)
(step t1.t112 (cl (= @p_32 @p_32)) :rule refl)
(step t1.t113 (cl (= @p_30 @p_30)) :rule refl)
(step t1.t114 (cl (= @p_28 @p_28)) :rule cong :premises (t1.t108))
(step t1.t115 (cl (= @p_33 @p_33)) :rule cong :premises (t1.t111 t1.t112 t1.t113 t1.t114))
(step t1.t116 (cl (= @p_34 @p_34)) :rule cong :premises (t1.t110 t1.t115))
(step t1.t117 (cl @p_64) :rule cong :premises (t1.t109 t1.t116))
(step t1.t118 (cl (= @p_27 (! (= (! (str.++ y w "A:") :named @p_62) @p_62) :named @p_63))) :rule rare_rewrite :args ("str-concat-unify-rev" x y (rare-list w "A:") y (rare-list w "A:")))
(step t1.t119 (cl (= @p_63 (! (= (! (str.++ y w) :named @p_60) @p_60) :named @p_61))) :rule rare_rewrite :args ("str-concat-unify-rev" "A:" y (rare-list w) y (rare-list w)))
(step t1.t120 (cl (= @p_61 (! (= y y) :named @p_59))) :rule rare_rewrite :args ("str-concat-unify-rev" w y rare-list y rare-list))
(step t1.t121 (cl (= @p_27 @p_59)) :rule trans :premises (t1.t118 t1.t119 t1.t120))
(step t1.t122 (cl (= @p_59 true)) :rule rare_rewrite :args ("eq-refl" y))
(step t1.t123 (cl (= @p_27 true)) :rule trans :premises (t1.t121 t1.t122))
(step t1.t124 (cl (= (! (= (! (= @p_28 (! (+ @p_5 @p_31 2 @p_29) :named @p_40)) :named @p_41) true) :named @p_42) @p_41)) :rule equiv_simplify)
(step t1.t125 (cl (not @p_42) @p_41) :rule equiv1 :premises (t1.t124))
(step t1.t126 (cl (not (! (= (! (= (! (= @p_40 @p_40) :named @p_43) true) :named @p_44) @p_42) :named @p_45)) (not @p_44) @p_42) :rule equiv_pos2)
(step t1.t127 (cl (= @p_28 (! (+ @p_5 (! (str.len (str.++ w "A:" x)) :named @p_57)) :named @p_58))) :rule rare_rewrite :args ("str-len-concat-rec" y w (rare-list "A:" x)))
(step t1.t128 (cl @p_37) :rule refl)
(step t1.t129 (cl (= @p_57 (! (+ @p_31 (! (str.len (str.++ "A:" x)) :named @p_54)) :named @p_55))) :rule rare_rewrite :args ("str-len-concat-rec" w "A:" (rare-list x)))
(step t1.t130 (cl (= @p_58 (! (+ @p_5 @p_55) :named @p_56))) :rule cong :premises (t1.t128 t1.t129))
(step t1.t131 (cl (! (= @p_31 @p_31) :named @p_52)) :rule refl)
(step t1.t132 (cl (= @p_54 (! (+ (! (str.len "A:") :named @p_46) @p_29) :named @p_47))) :rule rare_rewrite :args ("str-len-concat-rec" "A:" x rare-list))
(step t1.t133 (cl (= @p_55 (! (+ @p_31 @p_47) :named @p_48))) :rule cong :premises (t1.t131 t1.t132))
(step t1.t134 (cl (= @p_56 (! (+ @p_5 @p_48) :named @p_49))) :rule cong :premises (t1.t128 t1.t133))
(step t1.t135 (cl (= @p_28 @p_49)) :rule trans :premises (t1.t127 t1.t130 t1.t134))
(step t1.t136 (cl (= @p_49 (! (+ @p_5 @p_31 @p_47) :named @p_53))) :rule rare_rewrite :args ("arith-plus-flatten" (rare-list @p_5) @p_31 (rare-list @p_47) rare-list))
(step t1.t137 (cl (= @p_53 (! (+ @p_5 @p_31 @p_46 @p_29) :named @p_50))) :rule rare_rewrite :args ("arith-plus-flatten" (rare-list @p_5 @p_31) @p_46 (rare-list @p_29) rare-list))
(step t1.t138 (cl (= @p_49 @p_50)) :rule trans :premises (t1.t136 t1.t137))
(step t1.t139 (cl (= @p_46 2)) :rule hole :args ("evaluate"))
(step t1.t140 (cl @p_51) :rule refl)
(step t1.t141 (cl (= @p_50 @p_40)) :rule cong :premises (t1.t128 t1.t131 t1.t139 t1.t140))
(step t1.t142 (cl (= @p_49 @p_40)) :rule trans :premises (t1.t138 t1.t141))
(step t1.t143 (cl @p_41) :rule trans :premises (t1.t135 t1.t142))
(step t1.t144 (cl @p_43) :rule refl)
(step t1.t145 (cl (= @p_41 @p_43)) :rule cong :premises (t1.t143 t1.t144))
(step t1.t146 (cl (= true true)) :rule refl)
(step t1.t147 (cl (= @p_42 @p_44)) :rule cong :premises (t1.t145 t1.t146))
(step t1.t148 (cl @p_45) :rule symm :premises (t1.t147))
(step t1.t149 (cl (= @p_44 @p_43)) :rule equiv_simplify)
(step t1.t150 (cl @p_44 (not @p_43)) :rule equiv2 :premises (t1.t149))
(step t1.t151 (cl @p_43) :rule refl)
(step t1.t152 (cl @p_44) :rule resolution :premises (t1.t150 t1.t151))
(step t1.t153 (cl @p_42) :rule resolution :premises (t1.t126 t1.t148 t1.t152))
(step t1.t154 (cl @p_41) :rule resolution :premises (t1.t125 t1.t153))
(step t1.t155 (cl (= @p_40 (! (+ 2 @p_5 @p_31 @p_29) :named @p_38))) :rule hole :args ("arith-poly-norm"))
(step t1.t156 (cl (= @p_28 @p_38)) :rule trans :premises (t1.t154 t1.t155))
(step t1.t157 (cl (= @p_33 (! (+ -2 @p_32 @p_30 @p_38) :named @p_39))) :rule cong :premises (t1.t111 t1.t112 t1.t113 t1.t156))
(step t1.t158 (cl (= @p_39 @p_5)) :rule hole :args ("arith-poly-norm"))
(step t1.t159 (cl (= @p_33 @p_5)) :rule trans :premises (t1.t157 t1.t158))
(step t1.t160 (cl (= @p_34 @p_37)) :rule cong :premises (t1.t110 t1.t159))
(step t1.t161 (cl (= @p_37 true)) :rule rare_rewrite :args ("eq-refl" @p_5))
(step t1.t162 (cl (= @p_34 true)) :rule trans :premises (t1.t160 t1.t161))
(step t1.t163 (cl (= @p_35 @p_17)) :rule cong :premises (t1.t123 t1.t162))
(step t1.t164 (cl @p_36) :rule trans :premises (t1.t163 t1.t94))
(step t1.t165 (cl @p_36) :rule trans :premises (t1.t106 t1.t117 t1.t164))
(step t1.t166 (cl @p_35) :rule resolution :premises (t1.t105 t1.t165))
(step t1.t167 (cl @p_27) :rule and :premises (t1.t166) :args (0))
(step t1.t168 (cl @p_156) :rule trans :premises (t1.t102 t1.t103 t1.t167))
(step t1.t169 (cl @p_155) :rule cong :premises (t1.t168))
(step t1.t170 (cl (not (! (= @p_6 @p_67) :named @p_68)) (not @p_6) @p_67) :rule equiv_pos2)
(step t1.t171 (cl (= @p_6 (! (not (! (<= @p_5 @p_4) :named @p_69)) :named @p_70))) :rule rare_rewrite :args ("arith-elim-gt" @p_5 @p_4))
(step t1.t172 (cl (= @p_69 (! (not (! (>= @p_5 (! (+ @p_4 1) :named @p_73)) :named @p_74)) :named @p_75))) :rule rare_rewrite :args ("arith-leq-norm" @p_5 @p_4))
(step t1.t173 (cl (= (* -1 (- @p_5 @p_73)) (* -1 (- @p_66 1)))) :rule hole :args ("arith-poly-norm"))
(step t1.t174 (cl (! (= @p_74 @p_67) :named @p_76)) :rule hole :premises (t1.t173) :args ("ARITH_POLY_NORM_REL" @p_76))
(step t1.t175 (cl (= @p_75 @p_71)) :rule cong :premises (t1.t174))
(step t1.t176 (cl (= @p_69 @p_71)) :rule trans :premises (t1.t172 t1.t175))
(step t1.t177 (cl (= @p_70 (! (not @p_71) :named @p_72))) :rule cong :premises (t1.t176))
(step t1.t178 (cl (= @p_72 @p_67)) :rule rare_rewrite :args ("bool-double-not-elim" @p_67))
(step t1.t179 (cl (= @p_70 @p_67)) :rule trans :premises (t1.t177 t1.t178))
(step t1.t180 (cl @p_68) :rule trans :premises (t1.t171 t1.t179))
(step t1.t181 (cl @p_67) :rule resolution :premises (t1.t170 t1.t180 a1))
(step t1.t182 (cl (= (! (= (! (and @p_11 @p_14) :named @p_15) true) :named @p_16) @p_15)) :rule equiv_simplify)
(step t1.t183 (cl (not @p_16) @p_15) :rule equiv1 :premises (t1.t182))
(step t1.t184 (cl (! (= @p_15 @p_15) :named @p_26)) :rule refl)
(step t1.t185 (cl @p_11) :rule refl)
(step t1.t186 (cl (= @p_11 @p_11)) :rule cong :premises (t1.t185 t1.t102))
(step t1.t187 (cl (! (= @p_4 @p_4) :named @p_18)) :rule refl)
(step t1.t188 (cl (= -6 -6)) :rule refl)
(step t1.t189 (cl (= @p_12 @p_12)) :rule cong :premises (t1.t102))
(step t1.t190 (cl (= @p_13 @p_13)) :rule cong :premises (t1.t188 t1.t189))
(step t1.t191 (cl (= @p_14 @p_14)) :rule cong :premises (t1.t187 t1.t190))
(step t1.t192 (cl @p_26) :rule cong :premises (t1.t186 t1.t191))
(step t1.t193 (cl (= @p_11 (! (= z z) :named @p_25))) :rule rare_rewrite :args ("str-concat-unify-rev" "::BBBB" z rare-list z rare-list))
(step t1.t194 (cl (= @p_25 true)) :rule rare_rewrite :args ("eq-refl" z))
(step t1.t195 (cl (= @p_11 true)) :rule trans :premises (t1.t193 t1.t194))
(step t1.t196 (cl (= @p_12 (! (+ @p_4 @p_22) :named @p_23))) :rule rare_rewrite :args ("str-len-concat-rec" z "::BBBB" rare-list))
(step t1.t197 (cl @p_18) :rule refl)
(step t1.t198 (cl @p_24) :rule hole :args ("evaluate"))
(step t1.t199 (cl (= @p_23 (! (+ @p_4 6) :named @p_21))) :rule cong :premises (t1.t197 t1.t198))
(step t1.t200 (cl (= @p_12 @p_21)) :rule trans :premises (t1.t196 t1.t199))
(step t1.t201 (cl (= @p_21 (! (+ 6 @p_4) :named @p_19))) :rule hole :args ("arith-poly-norm"))
(step t1.t202 (cl (= @p_12 @p_19)) :rule trans :premises (t1.t200 t1.t201))
(step t1.t203 (cl (= @p_13 (! (+ -6 @p_19) :named @p_20))) :rule cong :premises (t1.t188 t1.t202))
(step t1.t204 (cl (= @p_20 @p_4)) :rule hole :args ("arith-poly-norm"))
(step t1.t205 (cl (= @p_13 @p_4)) :rule trans :premises (t1.t203 t1.t204))
(step t1.t206 (cl (= @p_14 @p_18)) :rule cong :premises (t1.t187 t1.t205))
(step t1.t207 (cl (= @p_18 true)) :rule rare_rewrite :args ("eq-refl" @p_4))
(step t1.t208 (cl (= @p_14 true)) :rule trans :premises (t1.t206 t1.t207))
(step t1.t209 (cl (= @p_15 @p_17)) :rule cong :premises (t1.t195 t1.t208))
(step t1.t210 (cl @p_16) :rule trans :premises (t1.t209 t1.t94))
(step t1.t211 (cl @p_16) :rule trans :premises (t1.t184 t1.t192 t1.t210))
(step t1.t212 (cl @p_15) :rule resolution :premises (t1.t183 t1.t211))
(step t1.t213 (cl @p_14) :rule and :premises (t1.t212) :args (1))
(step t1.t214 (cl @p_34) :rule and :premises (t1.t166) :args (1))
(step t1.t215 (cl (not (! (= (! (or (! (and (= @p_31 0) @p_7) :named @p_78) (! (> @p_31 0) :named @p_81)) :named @p_82) (! (or @p_78 @p_77) :named @p_80)) :named @p_83)) (not @p_82) @p_80) :rule equiv_pos2)
(step t1.t216 (cl (= @p_78 @p_78)) :rule refl)
(step t1.t217 (cl (= @p_81 (! (not (! (<= @p_31 0) :named @p_84)) :named @p_85))) :rule rare_rewrite :args ("arith-elim-gt" @p_31 0))
(step t1.t218 (cl (= @p_84 (! (not (! (>= @p_31 (! (+ 0 1) :named @p_88)) :named @p_89)) :named @p_90))) :rule rare_rewrite :args ("arith-leq-norm" @p_31 0))
(step t1.t219 (cl @p_52) :rule refl)
(step t1.t220 (cl (! (= @p_88 1) :named @p_91)) :rule hole :args ("evaluate"))
(step t1.t221 (cl (= @p_89 @p_77)) :rule cong :premises (t1.t219 t1.t220))
(step t1.t222 (cl (= @p_90 @p_86)) :rule cong :premises (t1.t221))
(step t1.t223 (cl (= @p_84 @p_86)) :rule trans :premises (t1.t218 t1.t222))
(step t1.t224 (cl (= @p_85 (! (not @p_86) :named @p_87))) :rule cong :premises (t1.t223))
(step t1.t225 (cl (= @p_87 @p_77)) :rule rare_rewrite :args ("bool-double-not-elim" @p_77))
(step t1.t226 (cl (= @p_85 @p_77)) :rule trans :premises (t1.t224 t1.t225))
(step t1.t227 (cl (= @p_81 @p_77)) :rule trans :premises (t1.t217 t1.t226))
(step t1.t228 (cl @p_83) :rule cong :premises (t1.t216 t1.t227))
(step t1.t229 (cl @p_82) :rule hole :args ("STRING_LENGTH_POS" w))
(step t1.t230 (cl @p_80) :rule resolution :premises (t1.t215 t1.t228 t1.t229))
(step t1.t231 (cl @p_78 @p_77) :rule or :premises (t1.t230))
(step t1.t232 (cl (! (not @p_78) :named @p_79) @p_7) :rule and_pos :args (1))
(step t1.t233 (cl @p_7 @p_79) :rule reordering :premises (t1.t232))
(step t1.t234 (cl @p_79) :rule resolution :premises (t1.t233 a2))
(step t1.t235 (cl @p_77) :rule resolution :premises (t1.t231 t1.t234))
(step t1.t236 (cl @p_251) :rule resolution :premises (t1.t0 t1.t100 t1.t101 t1.t169 t1.t181 t1.t213 t1.t214 t1.t235 t1.a7))
(step t1 (cl @p_113 @p_71 (! (not @p_11) :named @p_244) @p_157 @p_86 (! (not @p_27) :named @p_245) @p_158 @p_246 (! (not @p_111) :named @p_247) (! (not @p_95) :named @p_248) @p_160 @p_251) :rule subproof :discharge (t1.a0 t1.a1 t1.a2 t1.a3 t1.a4 t1.a5 t1.a6 t1.a7 t1.a8 t1.a9 t1.a10))
(step t2 (cl (! (not @p_249) :named @p_250) @p_3) :rule and_pos :args (0))
(step t3 (cl @p_250 @p_67) :rule and_pos :args (1))
(step t4 (cl @p_250 @p_11) :rule and_pos :args (2))
(step t5 (cl @p_250 @p_14) :rule and_pos :args (3))
(step t6 (cl @p_250 @p_77) :rule and_pos :args (4))
(step t7 (cl @p_250 @p_27) :rule and_pos :args (5))
(step t8 (cl @p_250 @p_34) :rule and_pos :args (6))
(step t9 (cl @p_250 @p_149) :rule and_pos :args (7))
(step t10 (cl @p_250 @p_111) :rule and_pos :args (8))
(step t11 (cl @p_250 @p_95) :rule and_pos :args (9))
(step t12 (cl @p_250 @p_99) :rule and_pos :args (10))
(step t13 (cl @p_251 @p_250 @p_250 @p_250 @p_250 @p_250 @p_250 @p_250 @p_250 @p_250 @p_250 @p_250) :rule resolution :premises (t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12))
(step t14 (cl @p_250 @p_250 @p_250 @p_250 @p_250 @p_250 @p_250 @p_250 @p_250 @p_250 @p_250 @p_251) :rule reordering :premises (t13))
(step t15 (cl @p_250 @p_251) :rule contraction :premises (t14))
(step t16 (cl @p_266 @p_251) :rule resolution :premises (t0 t15))
(step t17 (cl @p_266 (! (not @p_251) :named @p_252)) :rule implies_neg2)
(step t18 (cl @p_266 @p_266) :rule resolution :premises (t16 t17))
(step t19 (cl @p_266) :rule contraction :premises (t18))
(step t20 (cl @p_250 @p_251) :rule implies :premises (t19))
(step t21 (cl (! (=> @p_251 false) :named @p_253) @p_251) :rule implies_neg1)
(anchor :step t22)
(assume t22.a0 @p_154)
(assume t22.a1 @p_99)
(assume t22.a2 @p_155)
(assume t22.a3 @p_67)
(assume t22.a4 @p_14)
(assume t22.a5 @p_34)
(assume t22.a6 @p_77)
(assume t22.a7 @p_149)
(step t22.t0 (cl (! (=> @p_149 false) :named @p_254) @p_149) :rule implies_neg1)
(anchor :step t22.t1)
(assume t22.t1.a0 @p_149)
(step t22.t1.t0 (cl (not (! (= (! (<= (! (+ (! (* -1 @p_98) :named @p_182) @p_32 (! (+ @p_5 @p_31 @p_29 (! (* -1 @p_28) :named @p_172)) :named @p_179) (! (* -1 (! (+ @p_4 (! (* -1 @p_12) :named @p_176)) :named @p_177)) :named @p_178) (! (* -1 @p_66) :named @p_175) (! (* -1 (! (+ @p_12 @p_172) :named @p_173)) :named @p_174) (! (+ @p_98 (! (* -1 @p_96) :named @p_170)) :named @p_171) (! (* -1 (! (+ @p_29 @p_170) :named @p_180)) :named @p_181)) :named @p_256) (! (+ (! (* -1 0) :named @p_166) (! (* -1 1) :named @p_167) -2 (! (* -1 -6) :named @p_168) @p_167 @p_166 -5 @p_166) :named @p_255)) :named @p_257) false) :named @p_261)) (not @p_257) false) :rule equiv_pos2)
(step t22.t1.t1 (cl (= @p_256 (! (+ @p_182 @p_32 @p_5 @p_31 @p_29 @p_172 @p_178 @p_175 @p_174 @p_98 @p_170 @p_181) :named @p_264))) :rule hole :args ("arith-poly-norm"))
(step t22.t1.t2 (cl (= @p_182 @p_182)) :rule refl)
(step t22.t1.t3 (cl (= @p_32 @p_32)) :rule refl)
(step t22.t1.t4 (cl @p_37) :rule refl)
(step t22.t1.t5 (cl @p_52) :rule refl)
(step t22.t1.t6 (cl @p_51) :rule refl)
(step t22.t1.t7 (cl (= @p_172 @p_172)) :rule refl)
(step t22.t1.t8 (cl (= @p_178 (! (+ @p_65 @p_12) :named @p_229))) :rule hole :args ("arith-poly-norm"))
(step t22.t1.t9 (cl (= @p_175 (! (+ (* -1 @p_5) @p_4) :named @p_228))) :rule hole :args ("arith-poly-norm"))
(step t22.t1.t10 (cl (= @p_174 (! (+ @p_176 @p_28) :named @p_227))) :rule hole :args ("arith-poly-norm"))
(step t22.t1.t11 (cl @p_102) :rule refl)
(step t22.t1.t12 (cl (= @p_170 @p_170)) :rule refl)
(step t22.t1.t13 (cl (= @p_181 (! (+ @p_30 @p_96) :named @p_230))) :rule hole :args ("arith-poly-norm"))
(step t22.t1.t14 (cl (= @p_264 (! (+ @p_182 @p_32 @p_5 @p_31 @p_29 @p_172 @p_229 @p_228 @p_227 @p_98 @p_170 @p_230) :named @p_265))) :rule cong :premises (t22.t1.t2 t22.t1.t3 t22.t1.t4 t22.t1.t5 t22.t1.t6 t22.t1.t7 t22.t1.t8 t22.t1.t9 t22.t1.t10 t22.t1.t11 t22.t1.t12 t22.t1.t13))
(step t22.t1.t15 (cl (= @p_265 0)) :rule hole :args ("arith-poly-norm"))
(step t22.t1.t16 (cl (= @p_264 0)) :rule trans :premises (t22.t1.t14 t22.t1.t15))
(step t22.t1.t17 (cl (= @p_256 0)) :rule trans :premises (t22.t1.t1 t22.t1.t16))
(step t22.t1.t18 (cl (= @p_166 0)) :rule hole :args ("evaluate"))
(step t22.t1.t19 (cl (= @p_167 -1)) :rule hole :args ("evaluate"))
(step t22.t1.t20 (cl (= -2 -2)) :rule refl)
(step t22.t1.t21 (cl (= @p_168 6)) :rule hole :args ("evaluate"))
(step t22.t1.t22 (cl (= -5 -5)) :rule refl)
(step t22.t1.t23 (cl (= @p_255 (! (+ 0 -1 -2 6 -1 0 -5 0) :named @p_263))) :rule cong :premises (t22.t1.t18 t22.t1.t19 t22.t1.t20 t22.t1.t21 t22.t1.t19 t22.t1.t18 t22.t1.t22 t22.t1.t18))
(step t22.t1.t24 (cl (= @p_263 -3)) :rule hole :args ("evaluate"))
(step t22.t1.t25 (cl (= @p_255 -3)) :rule trans :premises (t22.t1.t23 t22.t1.t24))
(step t22.t1.t26 (cl (= @p_257 (! (<= 0 -3) :named @p_262))) :rule cong :premises (t22.t1.t17 t22.t1.t25))
(step t22.t1.t27 (cl (= @p_262 false)) :rule hole :args ("evaluate"))
(step t22.t1.t28 (cl @p_261) :rule trans :premises (t22.t1.t26 t22.t1.t27))
(step t22.t1.t29 (cl (not (! (= @p_182 @p_166) :named @p_258)) (! (not (! (<= @p_32 @p_167) :named @p_206)) :named @p_217) (! (not (! (= @p_179 -2) :named @p_203)) :named @p_218) (! (not (! (= @p_178 @p_168) :named @p_198)) :named @p_219) (! (not (! (<= @p_175 @p_167) :named @p_196)) :named @p_220) (! (not (! (= @p_174 @p_166) :named @p_188)) :named @p_221) (! (not (! (= @p_171 -5) :named @p_185)) :named @p_222) (! (not (! (= @p_181 @p_166) :named @p_208)) :named @p_216) @p_257) :rule la_generic :args (-1/1 1/1 -1/1 -1/1 1/1 -1/1 -1/1 -1/1 1/1))
(step t22.t1.t30 (cl (=> (! (and (! (< -1 0) :named @p_190) @p_149) :named @p_259) @p_258)) :rule la_mult_neg)
(step t22.t1.t31 (cl (not @p_259) @p_258) :rule implies :premises (t22.t1.t30))
(step t22.t1.t32 (cl @p_259 (! (not @p_190) :named @p_195) @p_246) :rule and_neg)
(step t22.t1.t33 (cl (= (! (= @p_190 true) :named @p_194) @p_190)) :rule equiv_simplify)
(step t22.t1.t34 (cl (not @p_194) @p_190) :rule equiv1 :premises (t22.t1.t33))
(step t22.t1.t35 (cl @p_194) :rule hole :args ("evaluate"))
(step t22.t1.t36 (cl @p_190) :rule resolution :premises (t22.t1.t34 t22.t1.t35))
(step t22.t1.t37 (cl @p_259) :rule resolution :premises (t22.t1.t32 t22.t1.t36 t22.t1.a0))
(step t22.t1.t38 (cl @p_258) :rule resolution :premises (t22.t1.t31 t22.t1.t37))
(step t22.t1.t39 (cl (=> (! (and @p_190 @p_77) :named @p_207) @p_206)) :rule la_mult_neg)
(step t22.t1.t40 (cl (not @p_207) @p_206) :rule implies :premises (t22.t1.t39))
(step t22.t1.t41 (cl @p_207 @p_195 @p_86) :rule and_neg)
(step t22.t1.t42 (cl (not @p_83) (not @p_82) @p_80) :rule equiv_pos2)
(step t22.t1.t43 (cl (= @p_78 @p_78)) :rule refl)
(step t22.t1.t44 (cl (= @p_81 @p_85)) :rule rare_rewrite :args ("arith-elim-gt" @p_31 0))
(step t22.t1.t45 (cl (= @p_84 @p_90)) :rule rare_rewrite :args ("arith-leq-norm" @p_31 0))
(step t22.t1.t46 (cl @p_52) :rule refl)
(step t22.t1.t47 (cl @p_91) :rule hole :args ("evaluate"))
(step t22.t1.t48 (cl (= @p_89 @p_77)) :rule cong :premises (t22.t1.t46 t22.t1.t47))
(step t22.t1.t49 (cl (= @p_90 @p_86)) :rule cong :premises (t22.t1.t48))
(step t22.t1.t50 (cl (= @p_84 @p_86)) :rule trans :premises (t22.t1.t45 t22.t1.t49))
(step t22.t1.t51 (cl (= @p_85 @p_87)) :rule cong :premises (t22.t1.t50))
(step t22.t1.t52 (cl (= @p_87 @p_77)) :rule rare_rewrite :args ("bool-double-not-elim" @p_77))
(step t22.t1.t53 (cl (= @p_85 @p_77)) :rule trans :premises (t22.t1.t51 t22.t1.t52))
(step t22.t1.t54 (cl (= @p_81 @p_77)) :rule trans :premises (t22.t1.t44 t22.t1.t53))
(step t22.t1.t55 (cl @p_83) :rule cong :premises (t22.t1.t43 t22.t1.t54))
(step t22.t1.t56 (cl @p_82) :rule hole :args ("STRING_LENGTH_POS" w))
(step t22.t1.t57 (cl @p_80) :rule resolution :premises (t22.t1.t42 t22.t1.t55 t22.t1.t56))
(step t22.t1.t58 (cl @p_78 @p_77) :rule or :premises (t22.t1.t57))
(step t22.t1.t59 (cl @p_79 @p_7) :rule and_pos :args (1))
(step t22.t1.t60 (cl @p_7 @p_79) :rule reordering :premises (t22.t1.t59))
(step t22.t1.t61 (cl @p_79) :rule resolution :premises (t22.t1.t60 a2))
(step t22.t1.t62 (cl @p_77) :rule resolution :premises (t22.t1.t58 t22.t1.t61))
(step t22.t1.t63 (cl @p_207) :rule resolution :premises (t22.t1.t41 t22.t1.t36 t22.t1.t62))
(step t22.t1.t64 (cl @p_206) :rule resolution :premises (t22.t1.t40 t22.t1.t63))
(step t22.t1.t65 (cl (not (! (= @p_34 @p_203) :named @p_204)) @p_158 @p_203) :rule equiv_pos2)
(step t22.t1.t66 (cl (= (* 2 (- @p_179 -2)) (* 2 (- @p_5 @p_33)))) :rule hole :args ("arith-poly-norm"))
(step t22.t1.t67 (cl (! (= @p_203 @p_34) :named @p_205)) :rule hole :premises (t22.t1.t66) :args ("ARITH_POLY_NORM_REL" @p_205))
(step t22.t1.t68 (cl @p_204) :rule symm :premises (t22.t1.t67))
(step t22.t1.t69 (cl (= @p_36 @p_35)) :rule equiv_simplify)
(step t22.t1.t70 (cl (not @p_36) @p_35) :rule equiv1 :premises (t22.t1.t69))
(step t22.t1.t71 (cl @p_64) :rule refl)
(step t22.t1.t72 (cl @p_27) :rule refl)
(step t22.t1.t73 (cl @p_27) :rule refl)
(step t22.t1.t74 (cl (= @p_27 @p_27)) :rule cong :premises (t22.t1.t72 t22.t1.t73))
(step t22.t1.t75 (cl (= @p_30 @p_30)) :rule refl)
(step t22.t1.t76 (cl (= @p_28 @p_28)) :rule cong :premises (t22.t1.t73))
(step t22.t1.t77 (cl (= @p_33 @p_33)) :rule cong :premises (t22.t1.t20 t22.t1.t3 t22.t1.t75 t22.t1.t76))
(step t22.t1.t78 (cl (= @p_34 @p_34)) :rule cong :premises (t22.t1.t4 t22.t1.t77))
(step t22.t1.t79 (cl @p_64) :rule cong :premises (t22.t1.t74 t22.t1.t78))
(step t22.t1.t80 (cl (= @p_27 @p_63)) :rule rare_rewrite :args ("str-concat-unify-rev" x y (rare-list w "A:") y (rare-list w "A:")))
(step t22.t1.t81 (cl (= @p_63 @p_61)) :rule rare_rewrite :args ("str-concat-unify-rev" "A:" y (rare-list w) y (rare-list w)))
(step t22.t1.t82 (cl (= @p_61 @p_59)) :rule rare_rewrite :args ("str-concat-unify-rev" w y rare-list y rare-list))
(step t22.t1.t83 (cl (= @p_27 @p_59)) :rule trans :premises (t22.t1.t80 t22.t1.t81 t22.t1.t82))
(step t22.t1.t84 (cl (= @p_59 true)) :rule rare_rewrite :args ("eq-refl" y))
(step t22.t1.t85 (cl (= @p_27 true)) :rule trans :premises (t22.t1.t83 t22.t1.t84))
(step t22.t1.t86 (cl (= @p_42 @p_41)) :rule equiv_simplify)
(step t22.t1.t87 (cl (not @p_42) @p_41) :rule equiv1 :premises (t22.t1.t86))
(step t22.t1.t88 (cl (not @p_45) (not @p_44) @p_42) :rule equiv_pos2)
(step t22.t1.t89 (cl (= @p_28 @p_58)) :rule rare_rewrite :args ("str-len-concat-rec" y w (rare-list "A:" x)))
(step t22.t1.t90 (cl @p_37) :rule refl)
(step t22.t1.t91 (cl (= @p_57 @p_55)) :rule rare_rewrite :args ("str-len-concat-rec" w "A:" (rare-list x)))
(step t22.t1.t92 (cl (= @p_58 @p_56)) :rule cong :premises (t22.t1.t90 t22.t1.t91))
(step t22.t1.t93 (cl @p_52) :rule refl)
(step t22.t1.t94 (cl (= @p_54 @p_47)) :rule rare_rewrite :args ("str-len-concat-rec" "A:" x rare-list))
(step t22.t1.t95 (cl (= @p_55 @p_48)) :rule cong :premises (t22.t1.t93 t22.t1.t94))
(step t22.t1.t96 (cl (= @p_56 @p_49)) :rule cong :premises (t22.t1.t90 t22.t1.t95))
(step t22.t1.t97 (cl (= @p_28 @p_49)) :rule trans :premises (t22.t1.t89 t22.t1.t92 t22.t1.t96))
(step t22.t1.t98 (cl (= @p_49 @p_53)) :rule rare_rewrite :args ("arith-plus-flatten" (rare-list @p_5) @p_31 (rare-list @p_47) rare-list))
(step t22.t1.t99 (cl (= @p_53 @p_50)) :rule rare_rewrite :args ("arith-plus-flatten" (rare-list @p_5 @p_31) @p_46 (rare-list @p_29) rare-list))
(step t22.t1.t100 (cl (= @p_49 @p_50)) :rule trans :premises (t22.t1.t98 t22.t1.t99))
(step t22.t1.t101 (cl (= @p_46 2)) :rule hole :args ("evaluate"))
(step t22.t1.t102 (cl @p_51) :rule refl)
(step t22.t1.t103 (cl (= @p_50 @p_40)) :rule cong :premises (t22.t1.t90 t22.t1.t93 t22.t1.t101 t22.t1.t102))
(step t22.t1.t104 (cl (= @p_49 @p_40)) :rule trans :premises (t22.t1.t100 t22.t1.t103))
(step t22.t1.t105 (cl @p_41) :rule trans :premises (t22.t1.t97 t22.t1.t104))
(step t22.t1.t106 (cl @p_43) :rule refl)
(step t22.t1.t107 (cl (= @p_41 @p_43)) :rule cong :premises (t22.t1.t105 t22.t1.t106))
(step t22.t1.t108 (cl (= true true)) :rule refl)
(step t22.t1.t109 (cl (= @p_42 @p_44)) :rule cong :premises (t22.t1.t107 t22.t1.t108))
(step t22.t1.t110 (cl @p_45) :rule symm :premises (t22.t1.t109))
(step t22.t1.t111 (cl (= @p_44 @p_43)) :rule equiv_simplify)
(step t22.t1.t112 (cl @p_44 (not @p_43)) :rule equiv2 :premises (t22.t1.t111))
(step t22.t1.t113 (cl @p_43) :rule refl)
(step t22.t1.t114 (cl @p_44) :rule resolution :premises (t22.t1.t112 t22.t1.t113))
(step t22.t1.t115 (cl @p_42) :rule resolution :premises (t22.t1.t88 t22.t1.t110 t22.t1.t114))
(step t22.t1.t116 (cl @p_41) :rule resolution :premises (t22.t1.t87 t22.t1.t115))
(step t22.t1.t117 (cl (= @p_40 @p_38)) :rule hole :args ("arith-poly-norm"))
(step t22.t1.t118 (cl (= @p_28 @p_38)) :rule trans :premises (t22.t1.t116 t22.t1.t117))
(step t22.t1.t119 (cl (= @p_33 @p_39)) :rule cong :premises (t22.t1.t20 t22.t1.t3 t22.t1.t75 t22.t1.t118))
(step t22.t1.t120 (cl (= @p_39 @p_5)) :rule hole :args ("arith-poly-norm"))
(step t22.t1.t121 (cl (= @p_33 @p_5)) :rule trans :premises (t22.t1.t119 t22.t1.t120))
(step t22.t1.t122 (cl (= @p_34 @p_37)) :rule cong :premises (t22.t1.t4 t22.t1.t121))
(step t22.t1.t123 (cl (= @p_37 true)) :rule rare_rewrite :args ("eq-refl" @p_5))
(step t22.t1.t124 (cl (= @p_34 true)) :rule trans :premises (t22.t1.t122 t22.t1.t123))
(step t22.t1.t125 (cl (= @p_35 @p_17)) :rule cong :premises (t22.t1.t85 t22.t1.t124))
(step t22.t1.t126 (cl (= @p_17 true)) :rule hole :args ("evaluate"))
(step t22.t1.t127 (cl @p_36) :rule trans :premises (t22.t1.t125 t22.t1.t126))
(step t22.t1.t128 (cl @p_36) :rule trans :premises (t22.t1.t71 t22.t1.t79 t22.t1.t127))
(step t22.t1.t129 (cl @p_35) :rule resolution :premises (t22.t1.t70 t22.t1.t128))
(step t22.t1.t130 (cl @p_34) :rule and :premises (t22.t1.t129) :args (1))
(step t22.t1.t131 (cl @p_203) :rule resolution :premises (t22.t1.t65 t22.t1.t68 t22.t1.t130))
(step t22.t1.t132 (cl (=> (! (and @p_190 (! (= @p_177 -6) :named @p_199)) :named @p_200) @p_198)) :rule la_mult_neg)
(step t22.t1.t133 (cl (not @p_200) @p_198) :rule implies :premises (t22.t1.t132))
(step t22.t1.t134 (cl @p_200 @p_195 (not @p_199)) :rule and_neg)
(step t22.t1.t135 (cl (not (! (= @p_14 @p_199) :named @p_201)) @p_157 @p_199) :rule equiv_pos2)
(step t22.t1.t136 (cl (= (* 6 (- @p_177 -6)) (* 6 (- @p_4 @p_13)))) :rule hole :args ("arith-poly-norm"))
(step t22.t1.t137 (cl (! (= @p_199 @p_14) :named @p_202)) :rule hole :premises (t22.t1.t136) :args ("ARITH_POLY_NORM_REL" @p_202))
(step t22.t1.t138 (cl @p_201) :rule symm :premises (t22.t1.t137))
(step t22.t1.t139 (cl (= @p_16 @p_15)) :rule equiv_simplify)
(step t22.t1.t140 (cl (not @p_16) @p_15) :rule equiv1 :premises (t22.t1.t139))
(step t22.t1.t141 (cl @p_26) :rule refl)
(step t22.t1.t142 (cl @p_11) :rule refl)
(step t22.t1.t143 (cl @p_11) :rule refl)
(step t22.t1.t144 (cl (= @p_11 @p_11)) :rule cong :premises (t22.t1.t142 t22.t1.t143))
(step t22.t1.t145 (cl @p_18) :rule refl)
(step t22.t1.t146 (cl (= -6 -6)) :rule refl)
(step t22.t1.t147 (cl (= @p_12 @p_12)) :rule cong :premises (t22.t1.t143))
(step t22.t1.t148 (cl (= @p_13 @p_13)) :rule cong :premises (t22.t1.t146 t22.t1.t147))
(step t22.t1.t149 (cl (= @p_14 @p_14)) :rule cong :premises (t22.t1.t145 t22.t1.t148))
(step t22.t1.t150 (cl @p_26) :rule cong :premises (t22.t1.t144 t22.t1.t149))
(step t22.t1.t151 (cl (= @p_11 @p_25)) :rule rare_rewrite :args ("str-concat-unify-rev" "::BBBB" z rare-list z rare-list))
(step t22.t1.t152 (cl (= @p_25 true)) :rule rare_rewrite :args ("eq-refl" z))
(step t22.t1.t153 (cl (= @p_11 true)) :rule trans :premises (t22.t1.t151 t22.t1.t152))
(step t22.t1.t154 (cl (= @p_12 @p_23)) :rule rare_rewrite :args ("str-len-concat-rec" z "::BBBB" rare-list))
(step t22.t1.t155 (cl @p_18) :rule refl)
(step t22.t1.t156 (cl @p_24) :rule hole :args ("evaluate"))
(step t22.t1.t157 (cl (= @p_23 @p_21)) :rule cong :premises (t22.t1.t155 t22.t1.t156))
(step t22.t1.t158 (cl (= @p_12 @p_21)) :rule trans :premises (t22.t1.t154 t22.t1.t157))
(step t22.t1.t159 (cl (= @p_21 @p_19)) :rule hole :args ("arith-poly-norm"))
(step t22.t1.t160 (cl (= @p_12 @p_19)) :rule trans :premises (t22.t1.t158 t22.t1.t159))
(step t22.t1.t161 (cl (= @p_13 @p_20)) :rule cong :premises (t22.t1.t146 t22.t1.t160))
(step t22.t1.t162 (cl (= @p_20 @p_4)) :rule hole :args ("arith-poly-norm"))
(step t22.t1.t163 (cl (= @p_13 @p_4)) :rule trans :premises (t22.t1.t161 t22.t1.t162))
(step t22.t1.t164 (cl (= @p_14 @p_18)) :rule cong :premises (t22.t1.t145 t22.t1.t163))
(step t22.t1.t165 (cl (= @p_18 true)) :rule rare_rewrite :args ("eq-refl" @p_4))
(step t22.t1.t166 (cl (= @p_14 true)) :rule trans :premises (t22.t1.t164 t22.t1.t165))
(step t22.t1.t167 (cl (= @p_15 @p_17)) :rule cong :premises (t22.t1.t153 t22.t1.t166))
(step t22.t1.t168 (cl @p_16) :rule trans :premises (t22.t1.t167 t22.t1.t126))
(step t22.t1.t169 (cl @p_16) :rule trans :premises (t22.t1.t141 t22.t1.t150 t22.t1.t168))
(step t22.t1.t170 (cl @p_15) :rule resolution :premises (t22.t1.t140 t22.t1.t169))
(step t22.t1.t171 (cl @p_14) :rule and :premises (t22.t1.t170) :args (1))
(step t22.t1.t172 (cl @p_199) :rule resolution :premises (t22.t1.t135 t22.t1.t138 t22.t1.t171))
(step t22.t1.t173 (cl @p_200) :rule resolution :premises (t22.t1.t134 t22.t1.t36 t22.t1.t172))
(step t22.t1.t174 (cl @p_198) :rule resolution :premises (t22.t1.t133 t22.t1.t173))
(step t22.t1.t175 (cl (=> (! (and @p_190 @p_67) :named @p_197) @p_196)) :rule la_mult_neg)
(step t22.t1.t176 (cl (not @p_197) @p_196) :rule implies :premises (t22.t1.t175))
(step t22.t1.t177 (cl @p_197 @p_195 @p_71) :rule and_neg)
(step t22.t1.t178 (cl (not @p_68) (not @p_6) @p_67) :rule equiv_pos2)
(step t22.t1.t179 (cl (= @p_6 @p_70)) :rule rare_rewrite :args ("arith-elim-gt" @p_5 @p_4))
(step t22.t1.t180 (cl (= @p_69 @p_75)) :rule rare_rewrite :args ("arith-leq-norm" @p_5 @p_4))
(step t22.t1.t181 (cl (= (* -1 (- @p_5 @p_73)) (* -1 (- @p_66 1)))) :rule hole :args ("arith-poly-norm"))
(step t22.t1.t182 (cl @p_76) :rule hole :premises (t22.t1.t181) :args ("ARITH_POLY_NORM_REL" @p_76))
(step t22.t1.t183 (cl (= @p_75 @p_71)) :rule cong :premises (t22.t1.t182))
(step t22.t1.t184 (cl (= @p_69 @p_71)) :rule trans :premises (t22.t1.t180 t22.t1.t183))
(step t22.t1.t185 (cl (= @p_70 @p_72)) :rule cong :premises (t22.t1.t184))
(step t22.t1.t186 (cl (= @p_72 @p_67)) :rule rare_rewrite :args ("bool-double-not-elim" @p_67))
(step t22.t1.t187 (cl (= @p_70 @p_67)) :rule trans :premises (t22.t1.t185 t22.t1.t186))
(step t22.t1.t188 (cl @p_68) :rule trans :premises (t22.t1.t179 t22.t1.t187))
(step t22.t1.t189 (cl @p_67) :rule resolution :premises (t22.t1.t178 t22.t1.t188 a1))
(step t22.t1.t190 (cl @p_197) :rule resolution :premises (t22.t1.t177 t22.t1.t36 t22.t1.t189))
(step t22.t1.t191 (cl @p_196) :rule resolution :premises (t22.t1.t176 t22.t1.t190))
(step t22.t1.t192 (cl (=> (! (and @p_190 (! (= @p_173 0) :named @p_189)) :named @p_191) @p_188)) :rule la_mult_neg)
(step t22.t1.t193 (cl (not @p_191) @p_188) :rule implies :premises (t22.t1.t192))
(step t22.t1.t194 (cl @p_191 @p_195 (not @p_189)) :rule and_neg)
(step t22.t1.t195 (cl (not (! (= @p_155 @p_189) :named @p_192)) @p_159 @p_189) :rule equiv_pos2)
(step t22.t1.t196 (cl (= (* 1 (- @p_173 0)) (* 1 (- @p_12 @p_28)))) :rule hole :args ("arith-poly-norm"))
(step t22.t1.t197 (cl (! (= @p_189 @p_155) :named @p_193)) :rule hole :premises (t22.t1.t196) :args ("ARITH_POLY_NORM_REL" @p_193))
(step t22.t1.t198 (cl @p_192) :rule symm :premises (t22.t1.t197))
(step t22.t1.t199 (cl @p_156) :rule symm :premises (a0))
(step t22.t1.t200 (cl @p_27) :rule and :premises (t22.t1.t129) :args (0))
(step t22.t1.t201 (cl @p_156) :rule trans :premises (t22.t1.t143 t22.t1.t199 t22.t1.t200))
(step t22.t1.t202 (cl @p_155) :rule cong :premises (t22.t1.t201))
(step t22.t1.t203 (cl @p_189) :rule resolution :premises (t22.t1.t195 t22.t1.t198 t22.t1.t202))
(step t22.t1.t204 (cl @p_191) :rule resolution :premises (t22.t1.t194 t22.t1.t36 t22.t1.t203))
(step t22.t1.t205 (cl @p_188) :rule resolution :premises (t22.t1.t193 t22.t1.t204))
(step t22.t1.t206 (cl (not (! (= @p_99 @p_185) :named @p_186)) @p_160 @p_185) :rule equiv_pos2)
(step t22.t1.t207 (cl (= (* 5 (- @p_171 -5)) (* 5 (- @p_98 @p_97)))) :rule hole :args ("arith-poly-norm"))
(step t22.t1.t208 (cl (! (= @p_185 @p_99) :named @p_187)) :rule hole :premises (t22.t1.t207) :args ("ARITH_POLY_NORM_REL" @p_187))
(step t22.t1.t209 (cl @p_186) :rule symm :premises (t22.t1.t208))
(step t22.t1.t210 (cl (= @p_101 @p_100)) :rule equiv_simplify)
(step t22.t1.t211 (cl (not @p_101) @p_100) :rule equiv1 :premises (t22.t1.t210))
(step t22.t1.t212 (cl @p_110) :rule refl)
(step t22.t1.t213 (cl @p_109) :rule refl)
(step t22.t1.t214 (cl (= ":BBBB" ":BBBB")) :rule refl)
(step t22.t1.t215 (cl @p_95) :rule cong :premises (t22.t1.t213 t22.t1.t214))
(step t22.t1.t216 (cl @p_95) :rule refl)
(step t22.t1.t217 (cl @p_95) :rule trans :premises (t22.t1.t216 t22.t1.t215))
(step t22.t1.t218 (cl (= @p_95 @p_95)) :rule cong :premises (t22.t1.t215 t22.t1.t217))
(step t22.t1.t219 (cl @p_102) :rule cong :premises (t22.t1.t213))
(step t22.t1.t220 (cl (= @p_96 @p_96)) :rule cong :premises (t22.t1.t217))
(step t22.t1.t221 (cl (= @p_97 @p_97)) :rule cong :premises (t22.t1.t22 t22.t1.t220))
(step t22.t1.t222 (cl (= @p_99 @p_99)) :rule cong :premises (t22.t1.t219 t22.t1.t221))
(step t22.t1.t223 (cl @p_110) :rule cong :premises (t22.t1.t218 t22.t1.t222))
(step t22.t1.t224 (cl (= @p_95 @p_109)) :rule rare_rewrite :args ("str-concat-unify-rev" ":BBBB" @p_93 rare-list @p_93 rare-list))
(step t22.t1.t225 (cl (= @p_109 true)) :rule rare_rewrite :args ("eq-refl" @p_93))
(step t22.t1.t226 (cl (= @p_95 true)) :rule trans :premises (t22.t1.t224 t22.t1.t225))
(step t22.t1.t227 (cl @p_102) :rule refl)
(step t22.t1.t228 (cl (= @p_96 @p_107)) :rule rare_rewrite :args ("str-len-concat-rec" @p_93 ":BBBB" rare-list))
(step t22.t1.t229 (cl @p_102) :rule refl)
(step t22.t1.t230 (cl @p_108) :rule hole :args ("evaluate"))
(step t22.t1.t231 (cl (= @p_107 @p_105)) :rule cong :premises (t22.t1.t229 t22.t1.t230))
(step t22.t1.t232 (cl (= @p_96 @p_105)) :rule trans :premises (t22.t1.t228 t22.t1.t231))
(step t22.t1.t233 (cl (= @p_105 @p_103)) :rule hole :args ("arith-poly-norm"))
(step t22.t1.t234 (cl (= @p_96 @p_103)) :rule trans :premises (t22.t1.t232 t22.t1.t233))
(step t22.t1.t235 (cl (= @p_97 @p_104)) :rule cong :premises (t22.t1.t22 t22.t1.t234))
(step t22.t1.t236 (cl (= @p_104 @p_98)) :rule hole :args ("arith-poly-norm"))
(step t22.t1.t237 (cl (= @p_97 @p_98)) :rule trans :premises (t22.t1.t235 t22.t1.t236))
(step t22.t1.t238 (cl (= @p_99 @p_102)) :rule cong :premises (t22.t1.t227 t22.t1.t237))
(step t22.t1.t239 (cl (= @p_102 true)) :rule rare_rewrite :args ("eq-refl" @p_98))
(step t22.t1.t240 (cl (= @p_99 true)) :rule trans :premises (t22.t1.t238 t22.t1.t239))
(step t22.t1.t241 (cl (= @p_100 @p_17)) :rule cong :premises (t22.t1.t226 t22.t1.t240))
(step t22.t1.t242 (cl @p_101) :rule trans :premises (t22.t1.t241 t22.t1.t126))
(step t22.t1.t243 (cl @p_101) :rule trans :premises (t22.t1.t212 t22.t1.t223 t22.t1.t242))
(step t22.t1.t244 (cl @p_100) :rule resolution :premises (t22.t1.t211 t22.t1.t243))
(step t22.t1.t245 (cl @p_99) :rule and :premises (t22.t1.t244) :args (1))
(step t22.t1.t246 (cl @p_185) :rule resolution :premises (t22.t1.t206 t22.t1.t209 t22.t1.t245))
(step t22.t1.t247 (cl (=> (! (and @p_190 (! (= @p_180 0) :named @p_209)) :named @p_210) @p_208)) :rule la_mult_neg)
(step t22.t1.t248 (cl (not @p_210) @p_208) :rule implies :premises (t22.t1.t247))
(step t22.t1.t249 (cl @p_210 @p_195 (not @p_209)) :rule and_neg)
(step t22.t1.t250 (cl (not (! (= @p_154 @p_209) :named @p_211)) @p_161 @p_209) :rule equiv_pos2)
(step t22.t1.t251 (cl (= (* 1 (- @p_180 0)) (* 1 (- @p_29 @p_96)))) :rule hole :args ("arith-poly-norm"))
(step t22.t1.t252 (cl (! (= @p_209 @p_154) :named @p_212)) :rule hole :premises (t22.t1.t251) :args ("ARITH_POLY_NORM_REL" @p_212))
(step t22.t1.t253 (cl @p_211) :rule symm :premises (t22.t1.t252))
(step t22.t1.t254 (cl (not @p_148) (not @p_128) @p_123) :rule equiv_pos2)
(step t22.t1.t255 (cl (= @p_112 @p_112)) :rule refl)
(step t22.t1.t256 (cl (= x x)) :rule refl)
(step t22.t1.t257 (cl @p_109) :rule refl)
(step t22.t1.t258 (cl (= "::BBBB" "::BBBB")) :rule refl)
(step t22.t1.t259 (cl @p_137) :rule hole :args ("evaluate"))
(step t22.t1.t260 (cl @p_140) :rule hole :args ("evaluate"))
(step t22.t1.t261 (cl (= 1 @p_139)) :rule symm :premises (t22.t1.t260))
(step t22.t1.t262 (cl (= @p_124 @p_139)) :rule trans :premises (t22.t1.t259 t22.t1.t261))
(step t22.t1.t263 (cl @p_24) :rule hole :args ("evaluate"))
(step t22.t1.t264 (cl (= @p_138 -5)) :rule hole :args ("evaluate"))
(step t22.t1.t265 (cl (= @p_139 @p_141)) :rule cong :premises (t22.t1.t263 t22.t1.t264))
(step t22.t1.t266 (cl (= @p_141 1)) :rule hole :args ("evaluate"))
(step t22.t1.t267 (cl @p_140) :rule trans :premises (t22.t1.t265 t22.t1.t266))
(step t22.t1.t268 (cl @p_137) :rule trans :premises (t22.t1.t262 t22.t1.t267))
(step t22.t1.t269 (cl (= 5 5)) :rule refl)
(step t22.t1.t270 (cl (= @p_125 @p_136)) :rule cong :premises (t22.t1.t258 t22.t1.t268 t22.t1.t269))
(step t22.t1.t271 (cl (= @p_136 ":BBBB")) :rule hole :args ("evaluate"))
(step t22.t1.t272 (cl (= @p_125 ":BBBB")) :rule trans :premises (t22.t1.t270 t22.t1.t271))
(step t22.t1.t273 (cl (= @p_126 @p_94)) :rule cong :premises (t22.t1.t257 t22.t1.t272))
(step t22.t1.t274 (cl @p_135) :rule cong :premises (t22.t1.t256 t22.t1.t273))
(step t22.t1.t275 (cl @p_148) :rule cong :premises (t22.t1.t255 t22.t1.t274))
(step t22.t1.t276 (cl @p_128 @p_112) :rule implies_neg1)
(anchor :step t22.t1.t277)
(assume t22.t1.t277.a0 @p_3)
(assume t22.t1.t277.a1 @p_10)
(step t22.t1.t277.t0 (cl (not @p_134) (not @p_133) @p_127) :rule equiv_pos2)
(step t22.t1.t277.t1 (cl @p_147) :rule refl)
(step t22.t1.t277.t2 (cl (= @p_132 @p_142)) :rule cong :premises (t22.t1.t277.t1 t22.t1.t272))
(step t22.t1.t277.t3 (cl (= @p_133 @p_143)) :rule cong :premises (t22.t1.t256 t22.t1.t277.t2))
(step t22.t1.t277.t4 (cl @p_147) :rule refl)
(step t22.t1.t277.t5 (cl (= @p_142 @p_142)) :rule cong :premises (t22.t1.t277.t4 t22.t1.t214))
(step t22.t1.t277.t6 (cl (= @p_143 @p_143)) :rule cong :premises (t22.t1.t256 t22.t1.t277.t5))
(step t22.t1.t277.t7 (cl (= 0 0)) :rule refl)
(step t22.t1.t277.t8 (cl (= @p_130 @p_145)) :rule hole :args ("arith-poly-norm"))
(step t22.t1.t277.t9 (cl (= -1 -1)) :rule refl)
(step t22.t1.t277.t10 (cl (= @p_129 @p_106)) :rule cong :premises (t22.t1.t272))
(step t22.t1.t277.t11 (cl @p_108) :rule hole :args ("evaluate"))
(step t22.t1.t277.t12 (cl (= @p_129 5)) :rule trans :premises (t22.t1.t277.t10 t22.t1.t277.t11))
(step t22.t1.t277.t13 (cl (= @p_144 @p_138)) :rule cong :premises (t22.t1.t277.t9 t22.t1.t277.t12))
(step t22.t1.t277.t14 (cl (= @p_144 -5)) :rule trans :premises (t22.t1.t277.t13 t22.t1.t264))
(step t22.t1.t277.t15 (cl (= @p_145 @p_146)) :rule cong :premises (t22.t1.t6 t22.t1.t277.t14))
(step t22.t1.t277.t16 (cl (= @p_146 @p_92)) :rule hole :args ("arith-poly-norm"))
(step t22.t1.t277.t17 (cl (= @p_145 @p_92)) :rule trans :premises (t22.t1.t277.t15 t22.t1.t277.t16))
(step t22.t1.t277.t18 (cl (= @p_130 @p_92)) :rule trans :premises (t22.t1.t277.t8 t22.t1.t277.t17))
(step t22.t1.t277.t19 (cl (= @p_131 @p_93)) :rule cong :premises (t22.t1.t256 t22.t1.t277.t7 t22.t1.t277.t18))
(step t22.t1.t277.t20 (cl (= @p_142 @p_94)) :rule cong :premises (t22.t1.t277.t19 t22.t1.t214))
(step t22.t1.t277.t21 (cl (= @p_143 @p_111)) :rule cong :premises (t22.t1.t256 t22.t1.t277.t20))
(step t22.t1.t277.t22 (cl (= @p_111 @p_111)) :rule cong :premises (t22.t1.t256 t22.t1.t215))
(step t22.t1.t277.t23 (cl @p_135) :rule trans :premises (t22.t1.t274 t22.t1.t277.t22))
(step t22.t1.t277.t24 (cl (= @p_111 @p_127)) :rule symm :premises (t22.t1.t277.t23))
(step t22.t1.t277.t25 (cl @p_134) :rule trans :premises (t22.t1.t277.t3 t22.t1.t277.t6 t22.t1.t277.t21 t22.t1.t277.t24))
(step t22.t1.t277.t26 (cl (not (= @p_29 0))) :rule hole :premises (t22.t1.t277.a1) :args ("STRING_LENGTH_NON_EMPTY"))
(step t22.t1.t277.t27 (cl @p_133) :rule hole :premises (t22.t1.t277.a0 t22.t1.t277.t26) :args ("CONCAT_CPROP" true))
(step t22.t1.t277.t28 (cl @p_127) :rule resolution :premises (t22.t1.t277.t0 t22.t1.t277.t25 t22.t1.t277.t27))
(step t22.t1.t277 (cl @p_113 @p_115 @p_127) :rule subproof :discharge (t22.t1.t277.a0 t22.t1.t277.a1))
(step t22.t1.t278 (cl @p_117 @p_3) :rule and_pos :args (0))
(step t22.t1.t279 (cl @p_117 @p_10) :rule and_pos :args (1))
(step t22.t1.t280 (cl @p_127 @p_117 @p_117) :rule resolution :premises (t22.t1.t277 t22.t1.t278 t22.t1.t279))
(step t22.t1.t281 (cl @p_117 @p_117 @p_127) :rule reordering :premises (t22.t1.t280))
(step t22.t1.t282 (cl @p_117 @p_127) :rule contraction :premises (t22.t1.t281))
(step t22.t1.t283 (cl @p_128 @p_127) :rule resolution :premises (t22.t1.t276 t22.t1.t282))
(step t22.t1.t284 (cl @p_128 (not @p_127)) :rule implies_neg2)
(step t22.t1.t285 (cl @p_128 @p_128) :rule resolution :premises (t22.t1.t283 t22.t1.t284))
(step t22.t1.t286 (cl @p_128) :rule contraction :premises (t22.t1.t285))
(step t22.t1.t287 (cl @p_123) :rule resolution :premises (t22.t1.t254 t22.t1.t275 t22.t1.t286))
(step t22.t1.t288 (cl @p_117 @p_111) :rule implies :premises (t22.t1.t287))
(step t22.t1.t289 (cl @p_111 @p_117) :rule reordering :premises (t22.t1.t288))
(step t22.t1.t290 (cl (not @p_118) (not @p_116) @p_114) :rule equiv_pos2)
(step t22.t1.t291 (cl (= @p_113 @p_113)) :rule refl)
(step t22.t1.t292 (cl (= @p_120 @p_119)) :rule equiv_simplify)
(step t22.t1.t293 (cl (not @p_120) @p_119) :rule equiv1 :premises (t22.t1.t292))
(step t22.t1.t294 (cl (= @p_119 @p_121)) :rule rare_rewrite :args ("eq-symm" @p_115 @p_9))
(step t22.t1.t295 (cl @p_122) :rule refl)
(step t22.t1.t296 (cl @p_119) :rule rare_rewrite :args ("bool-double-not-elim" @p_9))
(step t22.t1.t297 (cl (= @p_121 @p_122)) :rule cong :premises (t22.t1.t295 t22.t1.t296))
(step t22.t1.t298 (cl (= @p_122 true)) :rule rare_rewrite :args ("eq-refl" @p_9))
(step t22.t1.t299 (cl (= @p_121 true)) :rule trans :premises (t22.t1.t297 t22.t1.t298))
(step t22.t1.t300 (cl @p_120) :rule trans :premises (t22.t1.t294 t22.t1.t299))
(step t22.t1.t301 (cl @p_119) :rule resolution :premises (t22.t1.t293 t22.t1.t300))
(step t22.t1.t302 (cl @p_118) :rule cong :premises (t22.t1.t255 t22.t1.t291 t22.t1.t301))
(step t22.t1.t303 (cl @p_112 @p_113 @p_115) :rule and_neg)
(step t22.t1.t304 (cl @p_116 @p_117) :rule or_neg :args (0))
(step t22.t1.t305 (cl @p_116 (not @p_113)) :rule or_neg :args (1))
(step t22.t1.t306 (cl @p_116 (not @p_115)) :rule or_neg :args (2))
(step t22.t1.t307 (cl @p_116 @p_116 @p_116) :rule resolution :premises (t22.t1.t303 t22.t1.t304 t22.t1.t305 t22.t1.t306))
(step t22.t1.t308 (cl @p_116) :rule contraction :premises (t22.t1.t307))
(step t22.t1.t309 (cl @p_114) :rule resolution :premises (t22.t1.t290 t22.t1.t302 t22.t1.t308))
(step t22.t1.t310 (cl @p_112 @p_113 @p_9) :rule or :premises (t22.t1.t309))
(step t22.t1.t311 (cl @p_9 @p_113 @p_112) :rule reordering :premises (t22.t1.t310))
(step t22.t1.t312 (cl @p_112) :rule resolution :premises (t22.t1.t311 a3 a0))
(step t22.t1.t313 (cl @p_111) :rule resolution :premises (t22.t1.t289 t22.t1.t312))
(step t22.t1.t314 (cl @p_95) :rule and :premises (t22.t1.t244) :args (0))
(step t22.t1.t315 (cl @p_111) :rule trans :premises (t22.t1.t313 t22.t1.t314))
(step t22.t1.t316 (cl @p_154) :rule cong :premises (t22.t1.t315))
(step t22.t1.t317 (cl @p_209) :rule resolution :premises (t22.t1.t250 t22.t1.t253 t22.t1.t316))
(step t22.t1.t318 (cl @p_210) :rule resolution :premises (t22.t1.t249 t22.t1.t36 t22.t1.t317))
(step t22.t1.t319 (cl @p_208) :rule resolution :premises (t22.t1.t248 t22.t1.t318))
(step t22.t1.t320 (cl @p_257) :rule resolution :premises (t22.t1.t29 t22.t1.t38 t22.t1.t64 t22.t1.t131 t22.t1.t174 t22.t1.t191 t22.t1.t205 t22.t1.t246 t22.t1.t319))
(step t22.t1.t321 (cl false) :rule resolution :premises (t22.t1.t0 t22.t1.t28 t22.t1.t320))
(step t22.t1 (cl @p_246 false) :rule subproof :discharge (t22.t1.a0))
(step t22.t2 (cl @p_254 false) :rule resolution :premises (t22.t0 t22.t1))
(step t22.t3 (cl @p_254 (! (not false) :named @p_165)) :rule implies_neg2)
(step t22.t4 (cl @p_254 @p_254) :rule resolution :premises (t22.t2 t22.t3))
(step t22.t5 (cl @p_254) :rule contraction :premises (t22.t4))
(step t22.t6 (cl (= @p_254 @p_246)) :rule implies_simplify)
(step t22.t7 (cl (not @p_254) @p_246) :rule equiv1 :premises (t22.t6))
(step t22.t8 (cl @p_246) :rule resolution :premises (t22.t5 t22.t7))
(step t22.t9 (cl) :rule resolution :premises (t22.a7 t22.t8))
(step t22 (cl @p_161 @p_160 @p_159 @p_71 @p_157 @p_158 @p_86 @p_246 false) :rule subproof :discharge (t22.a0 t22.a1 t22.a2 t22.a3 t22.a4 t22.a5 t22.a6 t22.a7))
(step t23 (cl @p_252 @p_154) :rule and_pos :args (0))
(step t24 (cl @p_252 @p_99) :rule and_pos :args (1))
(step t25 (cl @p_252 @p_155) :rule and_pos :args (2))
(step t26 (cl @p_252 @p_67) :rule and_pos :args (3))
(step t27 (cl @p_252 @p_14) :rule and_pos :args (4))
(step t28 (cl @p_252 @p_34) :rule and_pos :args (5))
(step t29 (cl @p_252 @p_77) :rule and_pos :args (6))
(step t30 (cl @p_252 @p_149) :rule and_pos :args (7))
(step t31 (cl false @p_252 @p_252 @p_252 @p_252 @p_252 @p_252 @p_252 @p_252) :rule resolution :premises (t22 t23 t24 t25 t26 t27 t28 t29 t30))
(step t32 (cl @p_252 @p_252 @p_252 @p_252 @p_252 @p_252 @p_252 @p_252 false) :rule reordering :premises (t31))
(step t33 (cl @p_252 false) :rule contraction :premises (t32))
(step t34 (cl @p_253 false) :rule resolution :premises (t21 t33))
(step t35 (cl @p_253 @p_165) :rule implies_neg2)
(step t36 (cl @p_253 @p_253) :rule resolution :premises (t34 t35))
(step t37 (cl @p_253) :rule contraction :premises (t36))
(step t38 (cl (= @p_253 @p_252)) :rule implies_simplify)
(step t39 (cl (not @p_253) @p_252) :rule equiv1 :premises (t38))
(step t40 (cl @p_252) :rule resolution :premises (t37 t39))
(step t41 (cl @p_250) :rule resolution :premises (t20 t40))
(step t42 (cl @p_113 @p_71 @p_244 @p_157 @p_86 @p_245 @p_158 @p_246 @p_247 @p_248 @p_160) :rule not_and :premises (t41))
(step t43 (cl @p_71 @p_113 @p_244 @p_157 @p_86 @p_245 @p_158 @p_246 @p_247 @p_248 @p_160) :rule reordering :premises (t42))
(step t44 (cl (! (not (! (and @p_149 (! (= "" @p_93) :named @p_150)) :named @p_151)) :named @p_243) @p_149) :rule and_pos :args (0))
(step t45 (cl @p_149 @p_243) :rule reordering :premises (t44))
(step t46 (cl (not (! (= (! (or (! (and @p_149 (! (= @p_93 "") :named @p_234)) :named @p_235) (! (> @p_98 0) :named @p_233)) :named @p_236) (! (or @p_151 (! (>= @p_98 1) :named @p_152)) :named @p_232)) :named @p_237)) (not @p_236) @p_232) :rule equiv_pos2)
(step t47 (cl (= @p_149 @p_149)) :rule refl)
(step t48 (cl (= @p_234 @p_150)) :rule rare_rewrite :args ("eq-symm" @p_93 ""))
(step t49 (cl (= @p_235 @p_151)) :rule cong :premises (t47 t48))
(step t50 (cl (= @p_233 (! (not (! (<= @p_98 0) :named @p_238)) :named @p_239))) :rule rare_rewrite :args ("arith-elim-gt" @p_98 0))
(step t51 (cl (= @p_238 (! (not (! (>= @p_98 @p_88) :named @p_241)) :named @p_242))) :rule rare_rewrite :args ("arith-leq-norm" @p_98 0))
(step t52 (cl @p_102) :rule refl)
(step t53 (cl @p_91) :rule hole :args ("evaluate"))
(step t54 (cl (= @p_241 @p_152)) :rule cong :premises (t52 t53))
(step t55 (cl (= @p_242 (! (not @p_152) :named @p_153))) :rule cong :premises (t54))
(step t56 (cl (= @p_238 @p_153)) :rule trans :premises (t51 t55))
(step t57 (cl (= @p_239 (! (not @p_153) :named @p_240))) :rule cong :premises (t56))
(step t58 (cl (= @p_240 @p_152)) :rule rare_rewrite :args ("bool-double-not-elim" @p_152))
(step t59 (cl (= @p_239 @p_152)) :rule trans :premises (t57 t58))
(step t60 (cl (= @p_233 @p_152)) :rule trans :premises (t50 t59))
(step t61 (cl @p_237) :rule cong :premises (t49 t60))
(step t62 (cl @p_236) :rule hole :args ("STRING_LENGTH_POS" @p_93))
(step t63 (cl @p_232) :rule resolution :premises (t46 t61 t62))
(step t64 (cl @p_151 @p_152) :rule or :premises (t63))
(step t65 (cl (! (=> (! (and @p_154 @p_77 @p_34 @p_14 @p_67 @p_155 @p_99 @p_152) :named @p_162) false) :named @p_164) @p_162) :rule implies_neg1)
(anchor :step t66)
(assume t66.a0 @p_154)
(assume t66.a1 @p_77)
(assume t66.a2 @p_34)
(assume t66.a3 @p_14)
(assume t66.a4 @p_67)
(assume t66.a5 @p_155)
(assume t66.a6 @p_99)
(assume t66.a7 @p_152)
(step t66.t0 (cl (not (! (= (! (<= (! (+ @p_182 @p_181 @p_32 @p_179 @p_178 @p_175 @p_174 @p_171) :named @p_183) (! (+ @p_167 @p_166 @p_167 -2 @p_168 @p_167 @p_166 -5) :named @p_169)) :named @p_184) false) :named @p_223)) (not @p_184) false) :rule equiv_pos2)
(step t66.t1 (cl (= @p_183 (! (+ @p_182 @p_181 @p_32 @p_5 @p_31 @p_29 @p_172 @p_178 @p_175 @p_174 @p_98 @p_170) :named @p_226))) :rule hole :args ("arith-poly-norm"))
(step t66.t2 (cl (= @p_182 @p_182)) :rule refl)
(step t66.t3 (cl (= @p_181 @p_230)) :rule hole :args ("arith-poly-norm"))
(step t66.t4 (cl (= @p_32 @p_32)) :rule refl)
(step t66.t5 (cl @p_37) :rule refl)
(step t66.t6 (cl @p_52) :rule refl)
(step t66.t7 (cl @p_51) :rule refl)
(step t66.t8 (cl (= @p_172 @p_172)) :rule refl)
(step t66.t9 (cl (= @p_178 @p_229)) :rule hole :args ("arith-poly-norm"))
(step t66.t10 (cl (= @p_175 @p_228)) :rule hole :args ("arith-poly-norm"))
(step t66.t11 (cl (= @p_174 @p_227)) :rule hole :args ("arith-poly-norm"))
(step t66.t12 (cl @p_102) :rule refl)
(step t66.t13 (cl (= @p_170 @p_170)) :rule refl)
(step t66.t14 (cl (= @p_226 (! (+ @p_182 @p_230 @p_32 @p_5 @p_31 @p_29 @p_172 @p_229 @p_228 @p_227 @p_98 @p_170) :named @p_231))) :rule cong :premises (t66.t2 t66.t3 t66.t4 t66.t5 t66.t6 t66.t7 t66.t8 t66.t9 t66.t10 t66.t11 t66.t12 t66.t13))
(step t66.t15 (cl (= @p_231 0)) :rule hole :args ("arith-poly-norm"))
(step t66.t16 (cl (= @p_226 0)) :rule trans :premises (t66.t14 t66.t15))
(step t66.t17 (cl (= @p_183 0)) :rule trans :premises (t66.t1 t66.t16))
(step t66.t18 (cl (= @p_167 -1)) :rule hole :args ("evaluate"))
(step t66.t19 (cl (= @p_166 0)) :rule hole :args ("evaluate"))
(step t66.t20 (cl (= -2 -2)) :rule refl)
(step t66.t21 (cl (= @p_168 6)) :rule hole :args ("evaluate"))
(step t66.t22 (cl (= -5 -5)) :rule refl)
(step t66.t23 (cl (= @p_169 (! (+ -1 0 -1 -2 6 -1 0 -5) :named @p_225))) :rule cong :premises (t66.t18 t66.t19 t66.t18 t66.t20 t66.t21 t66.t18 t66.t19 t66.t22))
(step t66.t24 (cl (= @p_225 -4)) :rule hole :args ("evaluate"))
(step t66.t25 (cl (= @p_169 -4)) :rule trans :premises (t66.t23 t66.t24))
(step t66.t26 (cl (= @p_184 (! (<= 0 -4) :named @p_224))) :rule cong :premises (t66.t17 t66.t25))
(step t66.t27 (cl (= @p_224 false)) :rule hole :args ("evaluate"))
(step t66.t28 (cl @p_223) :rule trans :premises (t66.t26 t66.t27))
(step t66.t29 (cl (not (! (<= @p_182 @p_167) :named @p_213)) @p_216 @p_217 @p_218 @p_219 @p_220 @p_221 @p_222 @p_184) :rule la_generic :args (1/1 -1/1 1/1 -1/1 -1/1 1/1 -1/1 -1/1 1/1))
(step t66.t30 (cl (=> (! (and @p_190 @p_152) :named @p_214) @p_213)) :rule la_mult_neg)
(step t66.t31 (cl (not @p_214) @p_213) :rule implies :premises (t66.t30))
(step t66.t32 (cl @p_214 @p_195 @p_153) :rule and_neg)
(step t66.t33 (cl (= @p_194 @p_190)) :rule equiv_simplify)
(step t66.t34 (cl (not @p_194) @p_190) :rule equiv1 :premises (t66.t33))
(step t66.t35 (cl @p_194) :rule hole :args ("evaluate"))
(step t66.t36 (cl @p_190) :rule resolution :premises (t66.t34 t66.t35))
(step t66.t37 (cl @p_214) :rule resolution :premises (t66.t32 t66.t36 t66.a7))
(step t66.t38 (cl @p_213) :rule resolution :premises (t66.t31 t66.t37))
(step t66.t39 (cl (=> @p_210 @p_208)) :rule la_mult_neg)
(step t66.t40 (cl (not @p_210) @p_208) :rule implies :premises (t66.t39))
(step t66.t41 (cl @p_210 @p_195 (not @p_209)) :rule and_neg)
(step t66.t42 (cl (not @p_211) @p_161 @p_209) :rule equiv_pos2)
(step t66.t43 (cl (= (* 1 (- @p_180 0)) (* 1 (- @p_29 @p_96)))) :rule hole :args ("arith-poly-norm"))
(step t66.t44 (cl @p_212) :rule hole :premises (t66.t43) :args ("ARITH_POLY_NORM_REL" @p_212))
(step t66.t45 (cl @p_211) :rule symm :premises (t66.t44))
(step t66.t46 (cl (not @p_148) (not @p_128) @p_123) :rule equiv_pos2)
(step t66.t47 (cl (= @p_112 @p_112)) :rule refl)
(step t66.t48 (cl (= x x)) :rule refl)
(step t66.t49 (cl @p_109) :rule refl)
(step t66.t50 (cl (= "::BBBB" "::BBBB")) :rule refl)
(step t66.t51 (cl @p_137) :rule hole :args ("evaluate"))
(step t66.t52 (cl @p_140) :rule hole :args ("evaluate"))
(step t66.t53 (cl (= 1 @p_139)) :rule symm :premises (t66.t52))
(step t66.t54 (cl (= @p_124 @p_139)) :rule trans :premises (t66.t51 t66.t53))
(step t66.t55 (cl @p_24) :rule hole :args ("evaluate"))
(step t66.t56 (cl (= @p_138 -5)) :rule hole :args ("evaluate"))
(step t66.t57 (cl (= @p_139 @p_141)) :rule cong :premises (t66.t55 t66.t56))
(step t66.t58 (cl (= @p_141 1)) :rule hole :args ("evaluate"))
(step t66.t59 (cl @p_140) :rule trans :premises (t66.t57 t66.t58))
(step t66.t60 (cl @p_137) :rule trans :premises (t66.t54 t66.t59))
(step t66.t61 (cl (= 5 5)) :rule refl)
(step t66.t62 (cl (= @p_125 @p_136)) :rule cong :premises (t66.t50 t66.t60 t66.t61))
(step t66.t63 (cl (= @p_136 ":BBBB")) :rule hole :args ("evaluate"))
(step t66.t64 (cl (= @p_125 ":BBBB")) :rule trans :premises (t66.t62 t66.t63))
(step t66.t65 (cl (= @p_126 @p_94)) :rule cong :premises (t66.t49 t66.t64))
(step t66.t66 (cl @p_135) :rule cong :premises (t66.t48 t66.t65))
(step t66.t67 (cl @p_148) :rule cong :premises (t66.t47 t66.t66))
(step t66.t68 (cl @p_128 @p_112) :rule implies_neg1)
(anchor :step t66.t69)
(assume t66.t69.a0 @p_3)
(assume t66.t69.a1 @p_10)
(step t66.t69.t0 (cl (not @p_134) (not @p_133) @p_127) :rule equiv_pos2)
(step t66.t69.t1 (cl @p_147) :rule refl)
(step t66.t69.t2 (cl (= @p_132 @p_142)) :rule cong :premises (t66.t69.t1 t66.t64))
(step t66.t69.t3 (cl (= @p_133 @p_143)) :rule cong :premises (t66.t48 t66.t69.t2))
(step t66.t69.t4 (cl @p_147) :rule refl)
(step t66.t69.t5 (cl (= ":BBBB" ":BBBB")) :rule refl)
(step t66.t69.t6 (cl (= @p_142 @p_142)) :rule cong :premises (t66.t69.t4 t66.t69.t5))
(step t66.t69.t7 (cl (= @p_143 @p_143)) :rule cong :premises (t66.t48 t66.t69.t6))
(step t66.t69.t8 (cl (= 0 0)) :rule refl)
(step t66.t69.t9 (cl (= @p_130 @p_145)) :rule hole :args ("arith-poly-norm"))
(step t66.t69.t10 (cl (= -1 -1)) :rule refl)
(step t66.t69.t11 (cl (= @p_129 @p_106)) :rule cong :premises (t66.t64))
(step t66.t69.t12 (cl @p_108) :rule hole :args ("evaluate"))
(step t66.t69.t13 (cl (= @p_129 5)) :rule trans :premises (t66.t69.t11 t66.t69.t12))
(step t66.t69.t14 (cl (= @p_144 @p_138)) :rule cong :premises (t66.t69.t10 t66.t69.t13))
(step t66.t69.t15 (cl (= @p_144 -5)) :rule trans :premises (t66.t69.t14 t66.t56))
(step t66.t69.t16 (cl (= @p_145 @p_146)) :rule cong :premises (t66.t7 t66.t69.t15))
(step t66.t69.t17 (cl (= @p_146 @p_92)) :rule hole :args ("arith-poly-norm"))
(step t66.t69.t18 (cl (= @p_145 @p_92)) :rule trans :premises (t66.t69.t16 t66.t69.t17))
(step t66.t69.t19 (cl (= @p_130 @p_92)) :rule trans :premises (t66.t69.t9 t66.t69.t18))
(step t66.t69.t20 (cl (= @p_131 @p_93)) :rule cong :premises (t66.t48 t66.t69.t8 t66.t69.t19))
(step t66.t69.t21 (cl (= @p_142 @p_94)) :rule cong :premises (t66.t69.t20 t66.t69.t5))
(step t66.t69.t22 (cl (= @p_143 @p_111)) :rule cong :premises (t66.t48 t66.t69.t21))
(step t66.t69.t23 (cl @p_109) :rule refl)
(step t66.t69.t24 (cl @p_95) :rule cong :premises (t66.t69.t23 t66.t69.t5))
(step t66.t69.t25 (cl (= @p_111 @p_111)) :rule cong :premises (t66.t48 t66.t69.t24))
(step t66.t69.t26 (cl @p_135) :rule trans :premises (t66.t66 t66.t69.t25))
(step t66.t69.t27 (cl (= @p_111 @p_127)) :rule symm :premises (t66.t69.t26))
(step t66.t69.t28 (cl @p_134) :rule trans :premises (t66.t69.t3 t66.t69.t7 t66.t69.t22 t66.t69.t27))
(step t66.t69.t29 (cl (not (= @p_29 0))) :rule hole :premises (t66.t69.a1) :args ("STRING_LENGTH_NON_EMPTY"))
(step t66.t69.t30 (cl @p_133) :rule hole :premises (t66.t69.a0 t66.t69.t29) :args ("CONCAT_CPROP" true))
(step t66.t69.t31 (cl @p_127) :rule resolution :premises (t66.t69.t0 t66.t69.t28 t66.t69.t30))
(step t66.t69 (cl @p_113 @p_115 @p_127) :rule subproof :discharge (t66.t69.a0 t66.t69.a1))
(step t66.t70 (cl @p_117 @p_3) :rule and_pos :args (0))
(step t66.t71 (cl @p_117 @p_10) :rule and_pos :args (1))
(step t66.t72 (cl @p_127 @p_117 @p_117) :rule resolution :premises (t66.t69 t66.t70 t66.t71))
(step t66.t73 (cl @p_117 @p_117 @p_127) :rule reordering :premises (t66.t72))
(step t66.t74 (cl @p_117 @p_127) :rule contraction :premises (t66.t73))
(step t66.t75 (cl @p_128 @p_127) :rule resolution :premises (t66.t68 t66.t74))
(step t66.t76 (cl @p_128 (not @p_127)) :rule implies_neg2)
(step t66.t77 (cl @p_128 @p_128) :rule resolution :premises (t66.t75 t66.t76))
(step t66.t78 (cl @p_128) :rule contraction :premises (t66.t77))
(step t66.t79 (cl @p_123) :rule resolution :premises (t66.t46 t66.t67 t66.t78))
(step t66.t80 (cl @p_117 @p_111) :rule implies :premises (t66.t79))
(step t66.t81 (cl @p_111 @p_117) :rule reordering :premises (t66.t80))
(step t66.t82 (cl (not @p_118) (not @p_116) @p_114) :rule equiv_pos2)
(step t66.t83 (cl (= @p_113 @p_113)) :rule refl)
(step t66.t84 (cl (= @p_120 @p_119)) :rule equiv_simplify)
(step t66.t85 (cl (not @p_120) @p_119) :rule equiv1 :premises (t66.t84))
(step t66.t86 (cl (= @p_119 @p_121)) :rule rare_rewrite :args ("eq-symm" @p_115 @p_9))
(step t66.t87 (cl @p_122) :rule refl)
(step t66.t88 (cl @p_119) :rule rare_rewrite :args ("bool-double-not-elim" @p_9))
(step t66.t89 (cl (= @p_121 @p_122)) :rule cong :premises (t66.t87 t66.t88))
(step t66.t90 (cl (= @p_122 true)) :rule rare_rewrite :args ("eq-refl" @p_9))
(step t66.t91 (cl (= @p_121 true)) :rule trans :premises (t66.t89 t66.t90))
(step t66.t92 (cl @p_120) :rule trans :premises (t66.t86 t66.t91))
(step t66.t93 (cl @p_119) :rule resolution :premises (t66.t85 t66.t92))
(step t66.t94 (cl @p_118) :rule cong :premises (t66.t47 t66.t83 t66.t93))
(step t66.t95 (cl @p_112 @p_113 @p_115) :rule and_neg)
(step t66.t96 (cl @p_116 @p_117) :rule or_neg :args (0))
(step t66.t97 (cl @p_116 (not @p_113)) :rule or_neg :args (1))
(step t66.t98 (cl @p_116 (not @p_115)) :rule or_neg :args (2))
(step t66.t99 (cl @p_116 @p_116 @p_116) :rule resolution :premises (t66.t95 t66.t96 t66.t97 t66.t98))
(step t66.t100 (cl @p_116) :rule contraction :premises (t66.t99))
(step t66.t101 (cl @p_114) :rule resolution :premises (t66.t82 t66.t94 t66.t100))
(step t66.t102 (cl @p_112 @p_113 @p_9) :rule or :premises (t66.t101))
(step t66.t103 (cl @p_9 @p_113 @p_112) :rule reordering :premises (t66.t102))
(step t66.t104 (cl @p_112) :rule resolution :premises (t66.t103 a3 a0))
(step t66.t105 (cl @p_111) :rule resolution :premises (t66.t81 t66.t104))
(step t66.t106 (cl (= @p_101 @p_100)) :rule equiv_simplify)
(step t66.t107 (cl (not @p_101) @p_100) :rule equiv1 :premises (t66.t106))
(step t66.t108 (cl @p_110) :rule refl)
(step t66.t109 (cl @p_109) :rule refl)
(step t66.t110 (cl (= ":BBBB" ":BBBB")) :rule refl)
(step t66.t111 (cl @p_95) :rule cong :premises (t66.t109 t66.t110))
(step t66.t112 (cl @p_95) :rule refl)
(step t66.t113 (cl @p_95) :rule trans :premises (t66.t112 t66.t111))
(step t66.t114 (cl (= @p_95 @p_95)) :rule cong :premises (t66.t111 t66.t113))
(step t66.t115 (cl @p_102) :rule cong :premises (t66.t109))
(step t66.t116 (cl (= @p_96 @p_96)) :rule cong :premises (t66.t113))
(step t66.t117 (cl (= @p_97 @p_97)) :rule cong :premises (t66.t22 t66.t116))
(step t66.t118 (cl (= @p_99 @p_99)) :rule cong :premises (t66.t115 t66.t117))
(step t66.t119 (cl @p_110) :rule cong :premises (t66.t114 t66.t118))
(step t66.t120 (cl (= @p_95 @p_109)) :rule rare_rewrite :args ("str-concat-unify-rev" ":BBBB" @p_93 rare-list @p_93 rare-list))
(step t66.t121 (cl (= @p_109 true)) :rule rare_rewrite :args ("eq-refl" @p_93))
(step t66.t122 (cl (= @p_95 true)) :rule trans :premises (t66.t120 t66.t121))
(step t66.t123 (cl @p_102) :rule refl)
(step t66.t124 (cl (= @p_96 @p_107)) :rule rare_rewrite :args ("str-len-concat-rec" @p_93 ":BBBB" rare-list))
(step t66.t125 (cl @p_102) :rule refl)
(step t66.t126 (cl @p_108) :rule hole :args ("evaluate"))
(step t66.t127 (cl (= @p_107 @p_105)) :rule cong :premises (t66.t125 t66.t126))
(step t66.t128 (cl (= @p_96 @p_105)) :rule trans :premises (t66.t124 t66.t127))
(step t66.t129 (cl (= @p_105 @p_103)) :rule hole :args ("arith-poly-norm"))
(step t66.t130 (cl (= @p_96 @p_103)) :rule trans :premises (t66.t128 t66.t129))
(step t66.t131 (cl (= @p_97 @p_104)) :rule cong :premises (t66.t22 t66.t130))
(step t66.t132 (cl (= @p_104 @p_98)) :rule hole :args ("arith-poly-norm"))
(step t66.t133 (cl (= @p_97 @p_98)) :rule trans :premises (t66.t131 t66.t132))
(step t66.t134 (cl (= @p_99 @p_102)) :rule cong :premises (t66.t123 t66.t133))
(step t66.t135 (cl (= @p_102 true)) :rule rare_rewrite :args ("eq-refl" @p_98))
(step t66.t136 (cl (= @p_99 true)) :rule trans :premises (t66.t134 t66.t135))
(step t66.t137 (cl (= @p_100 @p_17)) :rule cong :premises (t66.t122 t66.t136))
(step t66.t138 (cl (= @p_17 true)) :rule hole :args ("evaluate"))
(step t66.t139 (cl @p_101) :rule trans :premises (t66.t137 t66.t138))
(step t66.t140 (cl @p_101) :rule trans :premises (t66.t108 t66.t119 t66.t139))
(step t66.t141 (cl @p_100) :rule resolution :premises (t66.t107 t66.t140))
(step t66.t142 (cl @p_95) :rule and :premises (t66.t141) :args (0))
(step t66.t143 (cl @p_111) :rule trans :premises (t66.t105 t66.t142))
(step t66.t144 (cl @p_154) :rule cong :premises (t66.t143))
(step t66.t145 (cl @p_209) :rule resolution :premises (t66.t42 t66.t45 t66.t144))
(step t66.t146 (cl @p_210) :rule resolution :premises (t66.t41 t66.t36 t66.t145))
(step t66.t147 (cl @p_208) :rule resolution :premises (t66.t40 t66.t146))
(step t66.t148 (cl (=> @p_207 @p_206)) :rule la_mult_neg)
(step t66.t149 (cl (not @p_207) @p_206) :rule implies :premises (t66.t148))
(step t66.t150 (cl @p_207 @p_195 @p_86) :rule and_neg)
(step t66.t151 (cl (not @p_83) (not @p_82) @p_80) :rule equiv_pos2)
(step t66.t152 (cl (= @p_78 @p_78)) :rule refl)
(step t66.t153 (cl (= @p_81 @p_85)) :rule rare_rewrite :args ("arith-elim-gt" @p_31 0))
(step t66.t154 (cl (= @p_84 @p_90)) :rule rare_rewrite :args ("arith-leq-norm" @p_31 0))
(step t66.t155 (cl @p_52) :rule refl)
(step t66.t156 (cl @p_91) :rule hole :args ("evaluate"))
(step t66.t157 (cl (= @p_89 @p_77)) :rule cong :premises (t66.t155 t66.t156))
(step t66.t158 (cl (= @p_90 @p_86)) :rule cong :premises (t66.t157))
(step t66.t159 (cl (= @p_84 @p_86)) :rule trans :premises (t66.t154 t66.t158))
(step t66.t160 (cl (= @p_85 @p_87)) :rule cong :premises (t66.t159))
(step t66.t161 (cl (= @p_87 @p_77)) :rule rare_rewrite :args ("bool-double-not-elim" @p_77))
(step t66.t162 (cl (= @p_85 @p_77)) :rule trans :premises (t66.t160 t66.t161))
(step t66.t163 (cl (= @p_81 @p_77)) :rule trans :premises (t66.t153 t66.t162))
(step t66.t164 (cl @p_83) :rule cong :premises (t66.t152 t66.t163))
(step t66.t165 (cl @p_82) :rule hole :args ("STRING_LENGTH_POS" w))
(step t66.t166 (cl @p_80) :rule resolution :premises (t66.t151 t66.t164 t66.t165))
(step t66.t167 (cl @p_78 @p_77) :rule or :premises (t66.t166))
(step t66.t168 (cl @p_79 @p_7) :rule and_pos :args (1))
(step t66.t169 (cl @p_7 @p_79) :rule reordering :premises (t66.t168))
(step t66.t170 (cl @p_79) :rule resolution :premises (t66.t169 a2))
(step t66.t171 (cl @p_77) :rule resolution :premises (t66.t167 t66.t170))
(step t66.t172 (cl @p_207) :rule resolution :premises (t66.t150 t66.t36 t66.t171))
(step t66.t173 (cl @p_206) :rule resolution :premises (t66.t149 t66.t172))
(step t66.t174 (cl (not @p_204) @p_158 @p_203) :rule equiv_pos2)
(step t66.t175 (cl (= (* 2 (- @p_179 -2)) (* 2 (- @p_5 @p_33)))) :rule hole :args ("arith-poly-norm"))
(step t66.t176 (cl @p_205) :rule hole :premises (t66.t175) :args ("ARITH_POLY_NORM_REL" @p_205))
(step t66.t177 (cl @p_204) :rule symm :premises (t66.t176))
(step t66.t178 (cl (= @p_36 @p_35)) :rule equiv_simplify)
(step t66.t179 (cl (not @p_36) @p_35) :rule equiv1 :premises (t66.t178))
(step t66.t180 (cl @p_64) :rule refl)
(step t66.t181 (cl @p_27) :rule refl)
(step t66.t182 (cl @p_27) :rule refl)
(step t66.t183 (cl (= @p_27 @p_27)) :rule cong :premises (t66.t181 t66.t182))
(step t66.t184 (cl (= @p_30 @p_30)) :rule refl)
(step t66.t185 (cl (= @p_28 @p_28)) :rule cong :premises (t66.t182))
(step t66.t186 (cl (= @p_33 @p_33)) :rule cong :premises (t66.t20 t66.t4 t66.t184 t66.t185))
(step t66.t187 (cl (= @p_34 @p_34)) :rule cong :premises (t66.t5 t66.t186))
(step t66.t188 (cl @p_64) :rule cong :premises (t66.t183 t66.t187))
(step t66.t189 (cl (= @p_27 @p_63)) :rule rare_rewrite :args ("str-concat-unify-rev" x y (rare-list w "A:") y (rare-list w "A:")))
(step t66.t190 (cl (= @p_63 @p_61)) :rule rare_rewrite :args ("str-concat-unify-rev" "A:" y (rare-list w) y (rare-list w)))
(step t66.t191 (cl (= @p_61 @p_59)) :rule rare_rewrite :args ("str-concat-unify-rev" w y rare-list y rare-list))
(step t66.t192 (cl (= @p_27 @p_59)) :rule trans :premises (t66.t189 t66.t190 t66.t191))
(step t66.t193 (cl (= @p_59 true)) :rule rare_rewrite :args ("eq-refl" y))
(step t66.t194 (cl (= @p_27 true)) :rule trans :premises (t66.t192 t66.t193))
(step t66.t195 (cl (= @p_42 @p_41)) :rule equiv_simplify)
(step t66.t196 (cl (not @p_42) @p_41) :rule equiv1 :premises (t66.t195))
(step t66.t197 (cl (not @p_45) (not @p_44) @p_42) :rule equiv_pos2)
(step t66.t198 (cl (= @p_28 @p_58)) :rule rare_rewrite :args ("str-len-concat-rec" y w (rare-list "A:" x)))
(step t66.t199 (cl @p_37) :rule refl)
(step t66.t200 (cl (= @p_57 @p_55)) :rule rare_rewrite :args ("str-len-concat-rec" w "A:" (rare-list x)))
(step t66.t201 (cl (= @p_58 @p_56)) :rule cong :premises (t66.t199 t66.t200))
(step t66.t202 (cl @p_52) :rule refl)
(step t66.t203 (cl (= @p_54 @p_47)) :rule rare_rewrite :args ("str-len-concat-rec" "A:" x rare-list))
(step t66.t204 (cl (= @p_55 @p_48)) :rule cong :premises (t66.t202 t66.t203))
(step t66.t205 (cl (= @p_56 @p_49)) :rule cong :premises (t66.t199 t66.t204))
(step t66.t206 (cl (= @p_28 @p_49)) :rule trans :premises (t66.t198 t66.t201 t66.t205))
(step t66.t207 (cl (= @p_49 @p_53)) :rule rare_rewrite :args ("arith-plus-flatten" (rare-list @p_5) @p_31 (rare-list @p_47) rare-list))
(step t66.t208 (cl (= @p_53 @p_50)) :rule rare_rewrite :args ("arith-plus-flatten" (rare-list @p_5 @p_31) @p_46 (rare-list @p_29) rare-list))
(step t66.t209 (cl (= @p_49 @p_50)) :rule trans :premises (t66.t207 t66.t208))
(step t66.t210 (cl (= @p_46 2)) :rule hole :args ("evaluate"))
(step t66.t211 (cl @p_51) :rule refl)
(step t66.t212 (cl (= @p_50 @p_40)) :rule cong :premises (t66.t199 t66.t202 t66.t210 t66.t211))
(step t66.t213 (cl (= @p_49 @p_40)) :rule trans :premises (t66.t209 t66.t212))
(step t66.t214 (cl @p_41) :rule trans :premises (t66.t206 t66.t213))
(step t66.t215 (cl @p_43) :rule refl)
(step t66.t216 (cl (= @p_41 @p_43)) :rule cong :premises (t66.t214 t66.t215))
(step t66.t217 (cl (= true true)) :rule refl)
(step t66.t218 (cl (= @p_42 @p_44)) :rule cong :premises (t66.t216 t66.t217))
(step t66.t219 (cl @p_45) :rule symm :premises (t66.t218))
(step t66.t220 (cl (= @p_44 @p_43)) :rule equiv_simplify)
(step t66.t221 (cl @p_44 (not @p_43)) :rule equiv2 :premises (t66.t220))
(step t66.t222 (cl @p_43) :rule refl)
(step t66.t223 (cl @p_44) :rule resolution :premises (t66.t221 t66.t222))
(step t66.t224 (cl @p_42) :rule resolution :premises (t66.t197 t66.t219 t66.t223))
(step t66.t225 (cl @p_41) :rule resolution :premises (t66.t196 t66.t224))
(step t66.t226 (cl (= @p_40 @p_38)) :rule hole :args ("arith-poly-norm"))
(step t66.t227 (cl (= @p_28 @p_38)) :rule trans :premises (t66.t225 t66.t226))
(step t66.t228 (cl (= @p_33 @p_39)) :rule cong :premises (t66.t20 t66.t4 t66.t184 t66.t227))
(step t66.t229 (cl (= @p_39 @p_5)) :rule hole :args ("arith-poly-norm"))
(step t66.t230 (cl (= @p_33 @p_5)) :rule trans :premises (t66.t228 t66.t229))
(step t66.t231 (cl (= @p_34 @p_37)) :rule cong :premises (t66.t5 t66.t230))
(step t66.t232 (cl (= @p_37 true)) :rule rare_rewrite :args ("eq-refl" @p_5))
(step t66.t233 (cl (= @p_34 true)) :rule trans :premises (t66.t231 t66.t232))
(step t66.t234 (cl (= @p_35 @p_17)) :rule cong :premises (t66.t194 t66.t233))
(step t66.t235 (cl @p_36) :rule trans :premises (t66.t234 t66.t138))
(step t66.t236 (cl @p_36) :rule trans :premises (t66.t180 t66.t188 t66.t235))
(step t66.t237 (cl @p_35) :rule resolution :premises (t66.t179 t66.t236))
(step t66.t238 (cl @p_34) :rule and :premises (t66.t237) :args (1))
(step t66.t239 (cl @p_203) :rule resolution :premises (t66.t174 t66.t177 t66.t238))
(step t66.t240 (cl (=> @p_200 @p_198)) :rule la_mult_neg)
(step t66.t241 (cl (not @p_200) @p_198) :rule implies :premises (t66.t240))
(step t66.t242 (cl @p_200 @p_195 (not @p_199)) :rule and_neg)
(step t66.t243 (cl (not @p_201) @p_157 @p_199) :rule equiv_pos2)
(step t66.t244 (cl (= (* 6 (- @p_177 -6)) (* 6 (- @p_4 @p_13)))) :rule hole :args ("arith-poly-norm"))
(step t66.t245 (cl @p_202) :rule hole :premises (t66.t244) :args ("ARITH_POLY_NORM_REL" @p_202))
(step t66.t246 (cl @p_201) :rule symm :premises (t66.t245))
(step t66.t247 (cl (= @p_16 @p_15)) :rule equiv_simplify)
(step t66.t248 (cl (not @p_16) @p_15) :rule equiv1 :premises (t66.t247))
(step t66.t249 (cl @p_26) :rule refl)
(step t66.t250 (cl @p_11) :rule refl)
(step t66.t251 (cl @p_11) :rule refl)
(step t66.t252 (cl (= @p_11 @p_11)) :rule cong :premises (t66.t250 t66.t251))
(step t66.t253 (cl @p_18) :rule refl)
(step t66.t254 (cl (= -6 -6)) :rule refl)
(step t66.t255 (cl (= @p_12 @p_12)) :rule cong :premises (t66.t251))
(step t66.t256 (cl (= @p_13 @p_13)) :rule cong :premises (t66.t254 t66.t255))
(step t66.t257 (cl (= @p_14 @p_14)) :rule cong :premises (t66.t253 t66.t256))
(step t66.t258 (cl @p_26) :rule cong :premises (t66.t252 t66.t257))
(step t66.t259 (cl (= @p_11 @p_25)) :rule rare_rewrite :args ("str-concat-unify-rev" "::BBBB" z rare-list z rare-list))
(step t66.t260 (cl (= @p_25 true)) :rule rare_rewrite :args ("eq-refl" z))
(step t66.t261 (cl (= @p_11 true)) :rule trans :premises (t66.t259 t66.t260))
(step t66.t262 (cl (= @p_12 @p_23)) :rule rare_rewrite :args ("str-len-concat-rec" z "::BBBB" rare-list))
(step t66.t263 (cl @p_18) :rule refl)
(step t66.t264 (cl @p_24) :rule hole :args ("evaluate"))
(step t66.t265 (cl (= @p_23 @p_21)) :rule cong :premises (t66.t263 t66.t264))
(step t66.t266 (cl (= @p_12 @p_21)) :rule trans :premises (t66.t262 t66.t265))
(step t66.t267 (cl (= @p_21 @p_19)) :rule hole :args ("arith-poly-norm"))
(step t66.t268 (cl (= @p_12 @p_19)) :rule trans :premises (t66.t266 t66.t267))
(step t66.t269 (cl (= @p_13 @p_20)) :rule cong :premises (t66.t254 t66.t268))
(step t66.t270 (cl (= @p_20 @p_4)) :rule hole :args ("arith-poly-norm"))
(step t66.t271 (cl (= @p_13 @p_4)) :rule trans :premises (t66.t269 t66.t270))
(step t66.t272 (cl (= @p_14 @p_18)) :rule cong :premises (t66.t253 t66.t271))
(step t66.t273 (cl (= @p_18 true)) :rule rare_rewrite :args ("eq-refl" @p_4))
(step t66.t274 (cl (= @p_14 true)) :rule trans :premises (t66.t272 t66.t273))
(step t66.t275 (cl (= @p_15 @p_17)) :rule cong :premises (t66.t261 t66.t274))
(step t66.t276 (cl @p_16) :rule trans :premises (t66.t275 t66.t138))
(step t66.t277 (cl @p_16) :rule trans :premises (t66.t249 t66.t258 t66.t276))
(step t66.t278 (cl @p_15) :rule resolution :premises (t66.t248 t66.t277))
(step t66.t279 (cl @p_14) :rule and :premises (t66.t278) :args (1))
(step t66.t280 (cl @p_199) :rule resolution :premises (t66.t243 t66.t246 t66.t279))
(step t66.t281 (cl @p_200) :rule resolution :premises (t66.t242 t66.t36 t66.t280))
(step t66.t282 (cl @p_198) :rule resolution :premises (t66.t241 t66.t281))
(step t66.t283 (cl (=> @p_197 @p_196)) :rule la_mult_neg)
(step t66.t284 (cl (not @p_197) @p_196) :rule implies :premises (t66.t283))
(step t66.t285 (cl @p_197 @p_195 @p_71) :rule and_neg)
(step t66.t286 (cl (not @p_68) (not @p_6) @p_67) :rule equiv_pos2)
(step t66.t287 (cl (= @p_6 @p_70)) :rule rare_rewrite :args ("arith-elim-gt" @p_5 @p_4))
(step t66.t288 (cl (= @p_69 @p_75)) :rule rare_rewrite :args ("arith-leq-norm" @p_5 @p_4))
(step t66.t289 (cl (= (* -1 (- @p_5 @p_73)) (* -1 (- @p_66 1)))) :rule hole :args ("arith-poly-norm"))
(step t66.t290 (cl @p_76) :rule hole :premises (t66.t289) :args ("ARITH_POLY_NORM_REL" @p_76))
(step t66.t291 (cl (= @p_75 @p_71)) :rule cong :premises (t66.t290))
(step t66.t292 (cl (= @p_69 @p_71)) :rule trans :premises (t66.t288 t66.t291))
(step t66.t293 (cl (= @p_70 @p_72)) :rule cong :premises (t66.t292))
(step t66.t294 (cl (= @p_72 @p_67)) :rule rare_rewrite :args ("bool-double-not-elim" @p_67))
(step t66.t295 (cl (= @p_70 @p_67)) :rule trans :premises (t66.t293 t66.t294))
(step t66.t296 (cl @p_68) :rule trans :premises (t66.t287 t66.t295))
(step t66.t297 (cl @p_67) :rule resolution :premises (t66.t286 t66.t296 a1))
(step t66.t298 (cl @p_197) :rule resolution :premises (t66.t285 t66.t36 t66.t297))
(step t66.t299 (cl @p_196) :rule resolution :premises (t66.t284 t66.t298))
(step t66.t300 (cl (=> @p_191 @p_188)) :rule la_mult_neg)
(step t66.t301 (cl (not @p_191) @p_188) :rule implies :premises (t66.t300))
(step t66.t302 (cl @p_191 @p_195 (not @p_189)) :rule and_neg)
(step t66.t303 (cl (not @p_192) @p_159 @p_189) :rule equiv_pos2)
(step t66.t304 (cl (= (* 1 (- @p_173 0)) (* 1 (- @p_12 @p_28)))) :rule hole :args ("arith-poly-norm"))
(step t66.t305 (cl @p_193) :rule hole :premises (t66.t304) :args ("ARITH_POLY_NORM_REL" @p_193))
(step t66.t306 (cl @p_192) :rule symm :premises (t66.t305))
(step t66.t307 (cl @p_156) :rule symm :premises (a0))
(step t66.t308 (cl @p_27) :rule and :premises (t66.t237) :args (0))
(step t66.t309 (cl @p_156) :rule trans :premises (t66.t251 t66.t307 t66.t308))
(step t66.t310 (cl @p_155) :rule cong :premises (t66.t309))
(step t66.t311 (cl @p_189) :rule resolution :premises (t66.t303 t66.t306 t66.t310))
(step t66.t312 (cl @p_191) :rule resolution :premises (t66.t302 t66.t36 t66.t311))
(step t66.t313 (cl @p_188) :rule resolution :premises (t66.t301 t66.t312))
(step t66.t314 (cl (not @p_186) @p_160 @p_185) :rule equiv_pos2)
(step t66.t315 (cl (= (* 5 (- @p_171 -5)) (* 5 (- @p_98 @p_97)))) :rule hole :args ("arith-poly-norm"))
(step t66.t316 (cl @p_187) :rule hole :premises (t66.t315) :args ("ARITH_POLY_NORM_REL" @p_187))
(step t66.t317 (cl @p_186) :rule symm :premises (t66.t316))
(step t66.t318 (cl @p_99) :rule and :premises (t66.t141) :args (1))
(step t66.t319 (cl @p_185) :rule resolution :premises (t66.t314 t66.t317 t66.t318))
(step t66.t320 (cl @p_184) :rule resolution :premises (t66.t29 t66.t38 t66.t147 t66.t173 t66.t239 t66.t282 t66.t299 t66.t313 t66.t319))
(step t66.t321 (cl false) :rule resolution :premises (t66.t0 t66.t28 t66.t320))
(step t66 (cl @p_161 @p_86 @p_158 @p_157 @p_71 @p_159 @p_160 @p_153 false) :rule subproof :discharge (t66.a0 t66.a1 t66.a2 t66.a3 t66.a4 t66.a5 t66.a6 t66.a7))
(step t67 (cl (! (not @p_162) :named @p_163) @p_154) :rule and_pos :args (0))
(step t68 (cl @p_163 @p_77) :rule and_pos :args (1))
(step t69 (cl @p_163 @p_34) :rule and_pos :args (2))
(step t70 (cl @p_163 @p_14) :rule and_pos :args (3))
(step t71 (cl @p_163 @p_67) :rule and_pos :args (4))
(step t72 (cl @p_163 @p_155) :rule and_pos :args (5))
(step t73 (cl @p_163 @p_99) :rule and_pos :args (6))
(step t74 (cl @p_163 @p_152) :rule and_pos :args (7))
(step t75 (cl false @p_163 @p_163 @p_163 @p_163 @p_163 @p_163 @p_163 @p_163) :rule resolution :premises (t66 t67 t68 t69 t70 t71 t72 t73 t74))
(step t76 (cl @p_163 @p_163 @p_163 @p_163 @p_163 @p_163 @p_163 @p_163 false) :rule reordering :premises (t75))
(step t77 (cl @p_163 false) :rule contraction :premises (t76))
(step t78 (cl @p_164 false) :rule resolution :premises (t65 t77))
(step t79 (cl @p_164 @p_165) :rule implies_neg2)
(step t80 (cl @p_164 @p_164) :rule resolution :premises (t78 t79))
(step t81 (cl @p_164) :rule contraction :premises (t80))
(step t82 (cl (= @p_164 @p_163)) :rule implies_simplify)
(step t83 (cl (not @p_164) @p_163) :rule equiv1 :premises (t82))
(step t84 (cl @p_163) :rule resolution :premises (t81 t83))
(step t85 (cl @p_161 @p_86 @p_158 @p_157 @p_71 @p_159 @p_160 @p_153) :rule not_and :premises (t84))
(step t86 (cl @p_71 @p_157 @p_86 @p_158 @p_159 @p_153 @p_160 @p_161) :rule reordering :premises (t85))
(step t87 (cl (not @p_68) (not @p_6) @p_67) :rule equiv_pos2)
(step t88 (cl (= @p_6 @p_70)) :rule rare_rewrite :args ("arith-elim-gt" @p_5 @p_4))
(step t89 (cl (= @p_69 @p_75)) :rule rare_rewrite :args ("arith-leq-norm" @p_5 @p_4))
(step t90 (cl (= (* -1 (- @p_5 @p_73)) (* -1 (- @p_66 1)))) :rule hole :args ("arith-poly-norm"))
(step t91 (cl @p_76) :rule hole :premises (t90) :args ("ARITH_POLY_NORM_REL" @p_76))
(step t92 (cl (= @p_75 @p_71)) :rule cong :premises (t91))
(step t93 (cl (= @p_69 @p_71)) :rule trans :premises (t89 t92))
(step t94 (cl (= @p_70 @p_72)) :rule cong :premises (t93))
(step t95 (cl (= @p_72 @p_67)) :rule rare_rewrite :args ("bool-double-not-elim" @p_67))
(step t96 (cl (= @p_70 @p_67)) :rule trans :premises (t94 t95))
(step t97 (cl @p_68) :rule trans :premises (t88 t96))
(step t98 (cl @p_67) :rule resolution :premises (t87 t97 a1))
(step t99 (cl (= @p_16 @p_15)) :rule equiv_simplify)
(step t100 (cl (not @p_16) @p_15) :rule equiv1 :premises (t99))
(step t101 (cl @p_26) :rule refl)
(step t102 (cl @p_11) :rule refl)
(step t103 (cl @p_11) :rule refl)
(step t104 (cl (= @p_11 @p_11)) :rule cong :premises (t102 t103))
(step t105 (cl @p_18) :rule refl)
(step t106 (cl (= -6 -6)) :rule refl)
(step t107 (cl (= @p_12 @p_12)) :rule cong :premises (t103))
(step t108 (cl (= @p_13 @p_13)) :rule cong :premises (t106 t107))
(step t109 (cl (= @p_14 @p_14)) :rule cong :premises (t105 t108))
(step t110 (cl @p_26) :rule cong :premises (t104 t109))
(step t111 (cl (= @p_11 @p_25)) :rule rare_rewrite :args ("str-concat-unify-rev" "::BBBB" z rare-list z rare-list))
(step t112 (cl (= @p_25 true)) :rule rare_rewrite :args ("eq-refl" z))
(step t113 (cl (= @p_11 true)) :rule trans :premises (t111 t112))
(step t114 (cl (= @p_12 @p_23)) :rule rare_rewrite :args ("str-len-concat-rec" z "::BBBB" rare-list))
(step t115 (cl @p_18) :rule refl)
(step t116 (cl @p_24) :rule hole :args ("evaluate"))
(step t117 (cl (= @p_23 @p_21)) :rule cong :premises (t115 t116))
(step t118 (cl (= @p_12 @p_21)) :rule trans :premises (t114 t117))
(step t119 (cl (= @p_21 @p_19)) :rule hole :args ("arith-poly-norm"))
(step t120 (cl (= @p_12 @p_19)) :rule trans :premises (t118 t119))
(step t121 (cl (= @p_13 @p_20)) :rule cong :premises (t106 t120))
(step t122 (cl (= @p_20 @p_4)) :rule hole :args ("arith-poly-norm"))
(step t123 (cl (= @p_13 @p_4)) :rule trans :premises (t121 t122))
(step t124 (cl (= @p_14 @p_18)) :rule cong :premises (t105 t123))
(step t125 (cl (= @p_18 true)) :rule rare_rewrite :args ("eq-refl" @p_4))
(step t126 (cl (= @p_14 true)) :rule trans :premises (t124 t125))
(step t127 (cl (= @p_15 @p_17)) :rule cong :premises (t113 t126))
(step t128 (cl (= @p_17 true)) :rule hole :args ("evaluate"))
(step t129 (cl @p_16) :rule trans :premises (t127 t128))
(step t130 (cl @p_16) :rule trans :premises (t101 t110 t129))
(step t131 (cl @p_15) :rule resolution :premises (t100 t130))
(step t132 (cl @p_14) :rule and :premises (t131) :args (1))
(step t133 (cl (not @p_83) (not @p_82) @p_80) :rule equiv_pos2)
(step t134 (cl (= @p_78 @p_78)) :rule refl)
(step t135 (cl (= @p_81 @p_85)) :rule rare_rewrite :args ("arith-elim-gt" @p_31 0))
(step t136 (cl (= @p_84 @p_90)) :rule rare_rewrite :args ("arith-leq-norm" @p_31 0))
(step t137 (cl @p_52) :rule refl)
(step t138 (cl @p_91) :rule hole :args ("evaluate"))
(step t139 (cl (= @p_89 @p_77)) :rule cong :premises (t137 t138))
(step t140 (cl (= @p_90 @p_86)) :rule cong :premises (t139))
(step t141 (cl (= @p_84 @p_86)) :rule trans :premises (t136 t140))
(step t142 (cl (= @p_85 @p_87)) :rule cong :premises (t141))
(step t143 (cl (= @p_87 @p_77)) :rule rare_rewrite :args ("bool-double-not-elim" @p_77))
(step t144 (cl (= @p_85 @p_77)) :rule trans :premises (t142 t143))
(step t145 (cl (= @p_81 @p_77)) :rule trans :premises (t135 t144))
(step t146 (cl @p_83) :rule cong :premises (t134 t145))
(step t147 (cl @p_82) :rule hole :args ("STRING_LENGTH_POS" w))
(step t148 (cl @p_80) :rule resolution :premises (t133 t146 t147))
(step t149 (cl @p_78 @p_77) :rule or :premises (t148))
(step t150 (cl @p_79 @p_7) :rule and_pos :args (1))
(step t151 (cl @p_7 @p_79) :rule reordering :premises (t150))
(step t152 (cl @p_79) :rule resolution :premises (t151 a2))
(step t153 (cl @p_77) :rule resolution :premises (t149 t152))
(step t154 (cl (= @p_36 @p_35)) :rule equiv_simplify)
(step t155 (cl (not @p_36) @p_35) :rule equiv1 :premises (t154))
(step t156 (cl @p_64) :rule refl)
(step t157 (cl @p_27) :rule refl)
(step t158 (cl @p_27) :rule refl)
(step t159 (cl (= @p_27 @p_27)) :rule cong :premises (t157 t158))
(step t160 (cl @p_37) :rule refl)
(step t161 (cl (= -2 -2)) :rule refl)
(step t162 (cl (= @p_32 @p_32)) :rule refl)
(step t163 (cl (= @p_30 @p_30)) :rule refl)
(step t164 (cl (= @p_28 @p_28)) :rule cong :premises (t158))
(step t165 (cl (= @p_33 @p_33)) :rule cong :premises (t161 t162 t163 t164))
(step t166 (cl (= @p_34 @p_34)) :rule cong :premises (t160 t165))
(step t167 (cl @p_64) :rule cong :premises (t159 t166))
(step t168 (cl (= @p_27 @p_63)) :rule rare_rewrite :args ("str-concat-unify-rev" x y (rare-list w "A:") y (rare-list w "A:")))
(step t169 (cl (= @p_63 @p_61)) :rule rare_rewrite :args ("str-concat-unify-rev" "A:" y (rare-list w) y (rare-list w)))
(step t170 (cl (= @p_61 @p_59)) :rule rare_rewrite :args ("str-concat-unify-rev" w y rare-list y rare-list))
(step t171 (cl (= @p_27 @p_59)) :rule trans :premises (t168 t169 t170))
(step t172 (cl (= @p_59 true)) :rule rare_rewrite :args ("eq-refl" y))
(step t173 (cl (= @p_27 true)) :rule trans :premises (t171 t172))
(step t174 (cl (= @p_42 @p_41)) :rule equiv_simplify)
(step t175 (cl (not @p_42) @p_41) :rule equiv1 :premises (t174))
(step t176 (cl (not @p_45) (not @p_44) @p_42) :rule equiv_pos2)
(step t177 (cl (= @p_28 @p_58)) :rule rare_rewrite :args ("str-len-concat-rec" y w (rare-list "A:" x)))
(step t178 (cl @p_37) :rule refl)
(step t179 (cl (= @p_57 @p_55)) :rule rare_rewrite :args ("str-len-concat-rec" w "A:" (rare-list x)))
(step t180 (cl (= @p_58 @p_56)) :rule cong :premises (t178 t179))
(step t181 (cl @p_52) :rule refl)
(step t182 (cl (= @p_54 @p_47)) :rule rare_rewrite :args ("str-len-concat-rec" "A:" x rare-list))
(step t183 (cl (= @p_55 @p_48)) :rule cong :premises (t181 t182))
(step t184 (cl (= @p_56 @p_49)) :rule cong :premises (t178 t183))
(step t185 (cl (= @p_28 @p_49)) :rule trans :premises (t177 t180 t184))
(step t186 (cl (= @p_49 @p_53)) :rule rare_rewrite :args ("arith-plus-flatten" (rare-list @p_5) @p_31 (rare-list @p_47) rare-list))
(step t187 (cl (= @p_53 @p_50)) :rule rare_rewrite :args ("arith-plus-flatten" (rare-list @p_5 @p_31) @p_46 (rare-list @p_29) rare-list))
(step t188 (cl (= @p_49 @p_50)) :rule trans :premises (t186 t187))
(step t189 (cl (= @p_46 2)) :rule hole :args ("evaluate"))
(step t190 (cl @p_51) :rule refl)
(step t191 (cl (= @p_50 @p_40)) :rule cong :premises (t178 t181 t189 t190))
(step t192 (cl (= @p_49 @p_40)) :rule trans :premises (t188 t191))
(step t193 (cl @p_41) :rule trans :premises (t185 t192))
(step t194 (cl @p_43) :rule refl)
(step t195 (cl (= @p_41 @p_43)) :rule cong :premises (t193 t194))
(step t196 (cl (= true true)) :rule refl)
(step t197 (cl (= @p_42 @p_44)) :rule cong :premises (t195 t196))
(step t198 (cl @p_45) :rule symm :premises (t197))
(step t199 (cl (= @p_44 @p_43)) :rule equiv_simplify)
(step t200 (cl @p_44 (not @p_43)) :rule equiv2 :premises (t199))
(step t201 (cl @p_43) :rule refl)
(step t202 (cl @p_44) :rule resolution :premises (t200 t201))
(step t203 (cl @p_42) :rule resolution :premises (t176 t198 t202))
(step t204 (cl @p_41) :rule resolution :premises (t175 t203))
(step t205 (cl (= @p_40 @p_38)) :rule hole :args ("arith-poly-norm"))
(step t206 (cl (= @p_28 @p_38)) :rule trans :premises (t204 t205))
(step t207 (cl (= @p_33 @p_39)) :rule cong :premises (t161 t162 t163 t206))
(step t208 (cl (= @p_39 @p_5)) :rule hole :args ("arith-poly-norm"))
(step t209 (cl (= @p_33 @p_5)) :rule trans :premises (t207 t208))
(step t210 (cl (= @p_34 @p_37)) :rule cong :premises (t160 t209))
(step t211 (cl (= @p_37 true)) :rule rare_rewrite :args ("eq-refl" @p_5))
(step t212 (cl (= @p_34 true)) :rule trans :premises (t210 t211))
(step t213 (cl (= @p_35 @p_17)) :rule cong :premises (t173 t212))
(step t214 (cl @p_36) :rule trans :premises (t213 t128))
(step t215 (cl @p_36) :rule trans :premises (t156 t167 t214))
(step t216 (cl @p_35) :rule resolution :premises (t155 t215))
(step t217 (cl @p_34) :rule and :premises (t216) :args (1))
(step t218 (cl @p_156) :rule symm :premises (a0))
(step t219 (cl @p_27) :rule and :premises (t216) :args (0))
(step t220 (cl @p_156) :rule trans :premises (t103 t218 t219))
(step t221 (cl @p_155) :rule cong :premises (t220))
(step t222 (cl (= @p_101 @p_100)) :rule equiv_simplify)
(step t223 (cl (not @p_101) @p_100) :rule equiv1 :premises (t222))
(step t224 (cl @p_110) :rule refl)
(step t225 (cl @p_109) :rule refl)
(step t226 (cl (= ":BBBB" ":BBBB")) :rule refl)
(step t227 (cl @p_95) :rule cong :premises (t225 t226))
(step t228 (cl @p_95) :rule refl)
(step t229 (cl @p_95) :rule trans :premises (t228 t227))
(step t230 (cl (= @p_95 @p_95)) :rule cong :premises (t227 t229))
(step t231 (cl @p_102) :rule cong :premises (t225))
(step t232 (cl (= -5 -5)) :rule refl)
(step t233 (cl (= @p_96 @p_96)) :rule cong :premises (t229))
(step t234 (cl (= @p_97 @p_97)) :rule cong :premises (t232 t233))
(step t235 (cl (= @p_99 @p_99)) :rule cong :premises (t231 t234))
(step t236 (cl @p_110) :rule cong :premises (t230 t235))
(step t237 (cl (= @p_95 @p_109)) :rule rare_rewrite :args ("str-concat-unify-rev" ":BBBB" @p_93 rare-list @p_93 rare-list))
(step t238 (cl (= @p_109 true)) :rule rare_rewrite :args ("eq-refl" @p_93))
(step t239 (cl (= @p_95 true)) :rule trans :premises (t237 t238))
(step t240 (cl @p_102) :rule refl)
(step t241 (cl (= @p_96 @p_107)) :rule rare_rewrite :args ("str-len-concat-rec" @p_93 ":BBBB" rare-list))
(step t242 (cl @p_102) :rule refl)
(step t243 (cl @p_108) :rule hole :args ("evaluate"))
(step t244 (cl (= @p_107 @p_105)) :rule cong :premises (t242 t243))
(step t245 (cl (= @p_96 @p_105)) :rule trans :premises (t241 t244))
(step t246 (cl (= @p_105 @p_103)) :rule hole :args ("arith-poly-norm"))
(step t247 (cl (= @p_96 @p_103)) :rule trans :premises (t245 t246))
(step t248 (cl (= @p_97 @p_104)) :rule cong :premises (t232 t247))
(step t249 (cl (= @p_104 @p_98)) :rule hole :args ("arith-poly-norm"))
(step t250 (cl (= @p_97 @p_98)) :rule trans :premises (t248 t249))
(step t251 (cl (= @p_99 @p_102)) :rule cong :premises (t240 t250))
(step t252 (cl (= @p_102 true)) :rule rare_rewrite :args ("eq-refl" @p_98))
(step t253 (cl (= @p_99 true)) :rule trans :premises (t251 t252))
(step t254 (cl (= @p_100 @p_17)) :rule cong :premises (t239 t253))
(step t255 (cl @p_101) :rule trans :premises (t254 t128))
(step t256 (cl @p_101) :rule trans :premises (t224 t236 t255))
(step t257 (cl @p_100) :rule resolution :premises (t223 t256))
(step t258 (cl @p_99) :rule and :premises (t257) :args (1))
(step t259 (cl (not @p_148) (not @p_128) @p_123) :rule equiv_pos2)
(step t260 (cl (= @p_112 @p_112)) :rule refl)
(step t261 (cl (= x x)) :rule refl)
(step t262 (cl @p_109) :rule refl)
(step t263 (cl (= "::BBBB" "::BBBB")) :rule refl)
(step t264 (cl @p_137) :rule hole :args ("evaluate"))
(step t265 (cl @p_140) :rule hole :args ("evaluate"))
(step t266 (cl (= 1 @p_139)) :rule symm :premises (t265))
(step t267 (cl (= @p_124 @p_139)) :rule trans :premises (t264 t266))
(step t268 (cl @p_24) :rule hole :args ("evaluate"))
(step t269 (cl (= @p_138 -5)) :rule hole :args ("evaluate"))
(step t270 (cl (= @p_139 @p_141)) :rule cong :premises (t268 t269))
(step t271 (cl (= @p_141 1)) :rule hole :args ("evaluate"))
(step t272 (cl @p_140) :rule trans :premises (t270 t271))
(step t273 (cl @p_137) :rule trans :premises (t267 t272))
(step t274 (cl (= 5 5)) :rule refl)
(step t275 (cl (= @p_125 @p_136)) :rule cong :premises (t263 t273 t274))
(step t276 (cl (= @p_136 ":BBBB")) :rule hole :args ("evaluate"))
(step t277 (cl (= @p_125 ":BBBB")) :rule trans :premises (t275 t276))
(step t278 (cl (= @p_126 @p_94)) :rule cong :premises (t262 t277))
(step t279 (cl @p_135) :rule cong :premises (t261 t278))
(step t280 (cl @p_148) :rule cong :premises (t260 t279))
(step t281 (cl @p_128 @p_112) :rule implies_neg1)
(anchor :step t282)
(assume t282.a0 @p_3)
(assume t282.a1 @p_10)
(step t282.t0 (cl (not @p_134) (not @p_133) @p_127) :rule equiv_pos2)
(step t282.t1 (cl @p_147) :rule refl)
(step t282.t2 (cl (= @p_132 @p_142)) :rule cong :premises (t282.t1 t277))
(step t282.t3 (cl (= @p_133 @p_143)) :rule cong :premises (t261 t282.t2))
(step t282.t4 (cl @p_147) :rule refl)
(step t282.t5 (cl (= @p_142 @p_142)) :rule cong :premises (t282.t4 t226))
(step t282.t6 (cl (= @p_143 @p_143)) :rule cong :premises (t261 t282.t5))
(step t282.t7 (cl (= 0 0)) :rule refl)
(step t282.t8 (cl (= @p_130 @p_145)) :rule hole :args ("arith-poly-norm"))
(step t282.t9 (cl @p_51) :rule refl)
(step t282.t10 (cl (= -1 -1)) :rule refl)
(step t282.t11 (cl (= @p_129 @p_106)) :rule cong :premises (t277))
(step t282.t12 (cl @p_108) :rule hole :args ("evaluate"))
(step t282.t13 (cl (= @p_129 5)) :rule trans :premises (t282.t11 t282.t12))
(step t282.t14 (cl (= @p_144 @p_138)) :rule cong :premises (t282.t10 t282.t13))
(step t282.t15 (cl (= @p_144 -5)) :rule trans :premises (t282.t14 t269))
(step t282.t16 (cl (= @p_145 @p_146)) :rule cong :premises (t282.t9 t282.t15))
(step t282.t17 (cl (= @p_146 @p_92)) :rule hole :args ("arith-poly-norm"))
(step t282.t18 (cl (= @p_145 @p_92)) :rule trans :premises (t282.t16 t282.t17))
(step t282.t19 (cl (= @p_130 @p_92)) :rule trans :premises (t282.t8 t282.t18))
(step t282.t20 (cl (= @p_131 @p_93)) :rule cong :premises (t261 t282.t7 t282.t19))
(step t282.t21 (cl (= @p_142 @p_94)) :rule cong :premises (t282.t20 t226))
(step t282.t22 (cl (= @p_143 @p_111)) :rule cong :premises (t261 t282.t21))
(step t282.t23 (cl (= @p_111 @p_111)) :rule cong :premises (t261 t227))
(step t282.t24 (cl @p_135) :rule trans :premises (t279 t282.t23))
(step t282.t25 (cl (= @p_111 @p_127)) :rule symm :premises (t282.t24))
(step t282.t26 (cl @p_134) :rule trans :premises (t282.t3 t282.t6 t282.t22 t282.t25))
(step t282.t27 (cl (not (= @p_29 0))) :rule hole :premises (t282.a1) :args ("STRING_LENGTH_NON_EMPTY"))
(step t282.t28 (cl @p_133) :rule hole :premises (t282.a0 t282.t27) :args ("CONCAT_CPROP" true))
(step t282.t29 (cl @p_127) :rule resolution :premises (t282.t0 t282.t26 t282.t28))
(step t282 (cl @p_113 @p_115 @p_127) :rule subproof :discharge (t282.a0 t282.a1))
(step t283 (cl @p_117 @p_3) :rule and_pos :args (0))
(step t284 (cl @p_117 @p_10) :rule and_pos :args (1))
(step t285 (cl @p_127 @p_117 @p_117) :rule resolution :premises (t282 t283 t284))
(step t286 (cl @p_117 @p_117 @p_127) :rule reordering :premises (t285))
(step t287 (cl @p_117 @p_127) :rule contraction :premises (t286))
(step t288 (cl @p_128 @p_127) :rule resolution :premises (t281 t287))
(step t289 (cl @p_128 (not @p_127)) :rule implies_neg2)
(step t290 (cl @p_128 @p_128) :rule resolution :premises (t288 t289))
(step t291 (cl @p_128) :rule contraction :premises (t290))
(step t292 (cl @p_123) :rule resolution :premises (t259 t280 t291))
(step t293 (cl @p_117 @p_111) :rule implies :premises (t292))
(step t294 (cl @p_111 @p_117) :rule reordering :premises (t293))
(step t295 (cl (not @p_118) (not @p_116) @p_114) :rule equiv_pos2)
(step t296 (cl (= @p_113 @p_113)) :rule refl)
(step t297 (cl (= @p_120 @p_119)) :rule equiv_simplify)
(step t298 (cl (not @p_120) @p_119) :rule equiv1 :premises (t297))
(step t299 (cl (= @p_119 @p_121)) :rule rare_rewrite :args ("eq-symm" @p_115 @p_9))
(step t300 (cl @p_122) :rule refl)
(step t301 (cl @p_119) :rule rare_rewrite :args ("bool-double-not-elim" @p_9))
(step t302 (cl (= @p_121 @p_122)) :rule cong :premises (t300 t301))
(step t303 (cl (= @p_122 true)) :rule rare_rewrite :args ("eq-refl" @p_9))
(step t304 (cl (= @p_121 true)) :rule trans :premises (t302 t303))
(step t305 (cl @p_120) :rule trans :premises (t299 t304))
(step t306 (cl @p_119) :rule resolution :premises (t298 t305))
(step t307 (cl @p_118) :rule cong :premises (t260 t296 t306))
(step t308 (cl @p_112 @p_113 @p_115) :rule and_neg)
(step t309 (cl @p_116 @p_117) :rule or_neg :args (0))
(step t310 (cl @p_116 (not @p_113)) :rule or_neg :args (1))
(step t311 (cl @p_116 (not @p_115)) :rule or_neg :args (2))
(step t312 (cl @p_116 @p_116 @p_116) :rule resolution :premises (t308 t309 t310 t311))
(step t313 (cl @p_116) :rule contraction :premises (t312))
(step t314 (cl @p_114) :rule resolution :premises (t295 t307 t313))
(step t315 (cl @p_112 @p_113 @p_9) :rule or :premises (t314))
(step t316 (cl @p_9 @p_113 @p_112) :rule reordering :premises (t315))
(step t317 (cl @p_112) :rule resolution :premises (t316 a3 a0))
(step t318 (cl @p_111) :rule resolution :premises (t294 t317))
(step t319 (cl @p_95) :rule and :premises (t257) :args (0))
(step t320 (cl @p_111) :rule trans :premises (t318 t319))
(step t321 (cl @p_154) :rule cong :premises (t320))
(step t322 (cl @p_153) :rule resolution :premises (t86 t98 t132 t153 t217 t221 t258 t321))
(step t323 (cl @p_151) :rule resolution :premises (t64 t322))
(step t324 (cl @p_149) :rule resolution :premises (t45 t323))
(step t325 (cl @p_11) :rule and :premises (t131) :args (0))
(step t326 (cl) :rule resolution :premises (t43 t324 t318 t258 t319 t153 t98 a0 t217 t219 t132 t325))
unsat
(assume a0 (! (= (! (str.++ y w "A:" x) :named @p_2) (! (str.++ z "::BBBB") :named @p_1)) :named @p_3))
(assume a1 (! (> (! (str.len y) :named @p_5) (! (str.len z) :named @p_4)) :named @p_6))
(assume a2 (! (not (! (= w "") :named @p_7)) :named @p_8))
(assume a3 (! (not (! (= x "") :named @p_9)) :named @p_10))
(step t0 (cl (! (=> (! (and @p_3 (! (>= (! (+ @p_5 (! (* -1 @p_4) :named @p_65)) :named @p_66) 1) :named @p_67) (! (= @p_1 @p_1) :named @p_11) (! (= @p_4 (! (+ -6 (! (str.len @p_1) :named @p_12)) :named @p_13)) :named @p_14) (! (>= (! (str.len w) :named @p_31) 1) :named @p_77) (! (= @p_2 @p_2) :named @p_27) (! (= @p_5 (! (+ -2 (! (* -1 @p_31) :named @p_32) (! (* -1 (! (str.len x) :named @p_29)) :named @p_30) (! (str.len @p_2) :named @p_28)) :named @p_33)) :named @p_34) (! (= (! (str.len (! (str.substr x 0 (! (+ -5 @p_29) :named @p_92)) :named @p_93)) :named @p_98) 0) :named @p_149) (! (= x (! (str.++ @p_93 ":BBBB") :named @p_94)) :named @p_111) (! (= @p_94 @p_94) :named @p_95) (! (= (! (str.len (! (str.substr x 0 (! (+ -5 @p_29) :named @p_92)) :named @p_93)) :named @p_98) (! (+ -5 (! (str.len @p_94) :named @p_96)) :named @p_97)) :named @p_99)) :named @p_249) (! (and (! (= @p_29 @p_96) :named @p_154) @p_99 (! (= @p_12 @p_28) :named @p_155) @p_67 @p_14 @p_34 @p_77 (! (= (! (str.len (! (str.substr x 0 (! (+ -5 @p_29) :named @p_92)) :named @p_93)) :named @p_98) 0) :named @p_149)) :named @p_251)) :named @p_266) @p_249) :rule implies_neg1)
(anchor :step t1)
(assume t1.a0 @p_3)
(assume t1.a1 @p_67)
(assume t1.a2 @p_11)
(assume t1.a3 @p_14)
(assume t1.a4 @p_77)
(assume t1.a5 @p_27)
(assume t1.a6 @p_34)
(assume t1.a7 @p_149)
(assume t1.a8 @p_111)
(assume t1.a9 @p_95)
(assume t1.a10 @p_99)
(step t1.t0 (cl @p_251 (! (not @p_154) :named @p_161) (! (not @p_99) :named @p_160) (! (not @p_155) :named @p_159) (! (not @p_67) :named @p_71) (! (not @p_14) :named @p_157) (! (not @p_34) :named @p_158) (! (not @p_77) :named @p_86) (! (not @p_149) :named @p_246)) :rule and_neg)
(step t1.t1 (cl (not (! (= (! (=> (! (and @p_3 @p_10) :named @p_112) (! (= x (! (str.++ @p_93 (! (str.substr "::BBBB" (! (- (! (str.len "::BBBB") :named @p_22) 5) :named @p_124) 5) :named @p_125)) :named @p_126)) :named @p_127)) :named @p_128) (! (=> @p_112 @p_111) :named @p_123)) :named @p_148)) (not @p_128) @p_123) :rule equiv_pos2)
(step t1.t2 (cl (= @p_112 @p_112)) :rule refl)
(step t1.t3 (cl (= x x)) :rule refl)
(step t1.t4 (cl (! (= @p_93 @p_93) :named @p_109)) :rule refl)
(step t1.t5 (cl (= "::BBBB" "::BBBB")) :rule refl)
(step t1.t6 (cl (! (= @p_124 1) :named @p_137)) :rule rare_rewrite :args ("evaluate"))
(step t1.t7 (cl (! (= (! (+ @p_22 (! (* -1 5) :named @p_138)) :named @p_139) 1) :named @p_140)) :rule rare_rewrite :args ("evaluate"))
(step t1.t8 (cl (= 1 @p_139)) :rule symm :premises (t1.t7))
(step t1.t9 (cl (= @p_124 @p_139)) :rule trans :premises (t1.t6 t1.t8))
(step t1.t10 (cl (! (= @p_22 6) :named @p_24)) :rule rare_rewrite :args ("evaluate"))
(step t1.t11 (cl (= @p_138 -5)) :rule rare_rewrite :args ("evaluate"))
(step t1.t12 (cl (= @p_139 (! (+ 6 -5) :named @p_141))) :rule cong :premises (t1.t10 t1.t11))
(step t1.t13 (cl (= @p_141 1)) :rule rare_rewrite :args ("evaluate"))
(step t1.t14 (cl @p_140) :rule trans :premises (t1.t12 t1.t13))
(step t1.t15 (cl @p_137) :rule trans :premises (t1.t9 t1.t14))
(step t1.t16 (cl (= 5 5)) :rule refl)
(step t1.t17 (cl (= @p_125 (! (str.substr "::BBBB" 1 5) :named @p_136))) :rule cong :premises (t1.t5 t1.t15 t1.t16))
(step t1.t18 (cl (= @p_136 ":BBBB")) :rule rare_rewrite :args ("evaluate"))
(step t1.t19 (cl (= @p_125 ":BBBB")) :rule trans :premises (t1.t17 t1.t18))
(step t1.t20 (cl (= @p_126 @p_94)) :rule cong :premises (t1.t4 t1.t19))
(step t1.t21 (cl (! (= @p_127 @p_111) :named @p_135)) :rule cong :premises (t1.t3 t1.t20))
(step t1.t22 (cl @p_148) :rule cong :premises (t1.t2 t1.t21))
(step t1.t23 (cl @p_128 @p_112) :rule implies_neg1)
(anchor :step t1.t24)
(assume t1.t24.a0 @p_3)
(assume t1.t24.a1 @p_10)
(step t1.t24.t0 (cl (not (! (= (! (= x (! (str.++ (! (str.substr x 0 (! (- @p_29 (! (str.len @p_125) :named @p_129)) :named @p_130)) :named @p_131) @p_125) :named @p_132)) :named @p_133) @p_127) :named @p_134)) (not @p_133) @p_127) :rule equiv_pos2)
(step t1.t24.t1 (cl (! (= @p_131 @p_131) :named @p_147)) :rule refl)
(step t1.t24.t2 (cl (= @p_132 (! (str.++ @p_131 ":BBBB") :named @p_142))) :rule cong :premises (t1.t24.t1 t1.t19))
(step t1.t24.t3 (cl (= @p_133 (! (= x @p_142) :named @p_143))) :rule cong :premises (t1.t3 t1.t24.t2))
(step t1.t24.t4 (cl @p_147) :rule refl)
(step t1.t24.t5 (cl (= ":BBBB" ":BBBB")) :rule refl)
(step t1.t24.t6 (cl (= @p_142 @p_142)) :rule cong :premises (t1.t24.t4 t1.t24.t5))
(step t1.t24.t7 (cl (= @p_143 @p_143)) :rule cong :premises (t1.t3 t1.t24.t6))
(step t1.t24.t8 (cl (= 0 0)) :rule refl)
(step t1.t24.t9 (cl (= @p_130 (! (+ @p_29 (! (* -1 @p_129) :named @p_144)) :named @p_145))) :rule rare_rewrite :args ("arith-poly-norm"))
(step t1.t24.t10 (cl (! (= @p_29 @p_29) :named @p_51)) :rule refl)
(step t1.t24.t11 (cl (= -1 -1)) :rule refl)
(step t1.t24.t12 (cl (= @p_129 (! (str.len ":BBBB") :named @p_106))) :rule cong :premises (t1.t19))
(step t1.t24.t13 (cl (! (= @p_106 5) :named @p_108)) :rule rare_rewrite :args ("evaluate"))
(step t1.t24.t14 (cl (= @p_129 5)) :rule trans :premises (t1.t24.t12 t1.t24.t13))
(step t1.t24.t15 (cl (= @p_144 @p_138)) :rule cong :premises (t1.t24.t11 t1.t24.t14))
(step t1.t24.t16 (cl (= @p_144 -5)) :rule trans :premises (t1.t24.t15 t1.t11))
(step t1.t24.t17 (cl (= @p_145 (! (+ @p_29 -5) :named @p_146))) :rule cong :premises (t1.t24.t10 t1.t24.t16))
(step t1.t24.t18 (cl (= @p_146 @p_92)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t1.t24.t19 (cl (= @p_145 @p_92)) :rule trans :premises (t1.t24.t17 t1.t24.t18))
(step t1.t24.t20 (cl (= @p_130 @p_92)) :rule trans :premises (t1.t24.t9 t1.t24.t19))
(step t1.t24.t21 (cl (= @p_131 @p_93)) :rule cong :premises (t1.t3 t1.t24.t8 t1.t24.t20))
(step t1.t24.t22 (cl (= @p_142 @p_94)) :rule cong :premises (t1.t24.t21 t1.t24.t5))
(step t1.t24.t23 (cl (= @p_143 @p_111)) :rule cong :premises (t1.t3 t1.t24.t22))
(step t1.t24.t24 (cl @p_109) :rule refl)
(step t1.t24.t25 (cl @p_95) :rule cong :premises (t1.t24.t24 t1.t24.t5))
(step t1.t24.t26 (cl (= @p_111 @p_111)) :rule cong :premises (t1.t3 t1.t24.t25))
(step t1.t24.t27 (cl @p_135) :rule trans :premises (t1.t21 t1.t24.t26))
(step t1.t24.t28 (cl (= @p_111 @p_127)) :rule symm :premises (t1.t24.t27))
(step t1.t24.t29 (cl @p_134) :rule trans :premises (t1.t24.t3 t1.t24.t7 t1.t24.t23 t1.t24.t28))
(step t1.t24.t30 (cl (not (= @p_29 0))) :rule hole :premises (t1.t24.a1) :args ("STRING_LENGTH_NON_EMPTY"))
(step t1.t24.t31 (cl @p_133) :rule hole :premises (t1.t24.a0 t1.t24.t30) :args ("CONCAT_CPROP" true))
(step t1.t24.t32 (cl @p_127) :rule resolution :premises (t1.t24.t0 t1.t24.t29 t1.t24.t31))
(step t1.t24 (cl (! (not @p_3) :named @p_113) (! (not @p_10) :named @p_115) @p_127) :rule subproof :discharge (t1.t24.a0 t1.t24.a1))
(step t1.t25 (cl (! (not @p_112) :named @p_117) @p_3) :rule and_pos :args (0))
(step t1.t26 (cl @p_117 @p_10) :rule and_pos :args (1))
(step t1.t27 (cl @p_127 @p_117 @p_117) :rule resolution :premises (t1.t24 t1.t25 t1.t26))
(step t1.t28 (cl @p_117 @p_117 @p_127) :rule reordering :premises (t1.t27))
(step t1.t29 (cl @p_117 @p_127) :rule contraction :premises (t1.t28))
(step t1.t30 (cl @p_128 @p_127) :rule resolution :premises (t1.t23 t1.t29))
(step t1.t31 (cl @p_128 (not @p_127)) :rule implies_neg2)
(step t1.t32 (cl @p_128 @p_128) :rule resolution :premises (t1.t30 t1.t31))
(step t1.t33 (cl @p_128) :rule contraction :premises (t1.t32))
(step t1.t34 (cl @p_123) :rule resolution :premises (t1.t1 t1.t22 t1.t33))
(step t1.t35 (cl @p_117 @p_111) :rule implies :premises (t1.t34))
(step t1.t36 (cl @p_111 @p_117) :rule reordering :premises (t1.t35))
(step t1.t37 (cl (not (! (= (! (or @p_112 @p_113 @p_115) :named @p_116) (! (or @p_112 @p_113 @p_9) :named @p_114)) :named @p_118)) (not @p_116) @p_114) :rule equiv_pos2)
(step t1.t38 (cl (= @p_113 @p_113)) :rule refl)
(step t1.t39 (cl (= (! (= (! (= @p_115 @p_9) :named @p_119) true) :named @p_120) @p_119)) :rule equiv_simplify)
(step t1.t40 (cl (not @p_120) @p_119) :rule equiv1 :premises (t1.t39))
(step t1.t41 (cl (= @p_119 (! (= @p_9 @p_115) :named @p_121))) :rule rare_rewrite :args ("eq-symm" @p_115 @p_9))
(step t1.t42 (cl (! (= @p_9 @p_9) :named @p_122)) :rule refl)
(step t1.t43 (cl @p_119) :rule rare_rewrite :args ("bool-double-not-elim" @p_9))
(step t1.t44 (cl (= @p_121 @p_122)) :rule cong :premises (t1.t42 t1.t43))
(step t1.t45 (cl (= @p_122 true)) :rule rare_rewrite :args ("eq-refl" @p_9))
(step t1.t46 (cl (= @p_121 true)) :rule trans :premises (t1.t44 t1.t45))
(step t1.t47 (cl @p_120) :rule trans :premises (t1.t41 t1.t46))
(step t1.t48 (cl @p_119) :rule resolution :premises (t1.t40 t1.t47))
(step t1.t49 (cl @p_118) :rule cong :premises (t1.t2 t1.t38 t1.t48))
(step t1.t50 (cl @p_112 @p_113 @p_115) :rule and_neg)
(step t1.t51 (cl @p_116 @p_117) :rule or_neg :args (0))
(step t1.t52 (cl @p_116 (not @p_113)) :rule or_neg :args (1))
(step t1.t53 (cl @p_116 (not @p_115)) :rule or_neg :args (2))
(step t1.t54 (cl @p_116 @p_116 @p_116) :rule resolution :premises (t1.t50 t1.t51 t1.t52 t1.t53))
(step t1.t55 (cl @p_116) :rule contraction :premises (t1.t54))
(step t1.t56 (cl @p_114) :rule resolution :premises (t1.t37 t1.t49 t1.t55))
(step t1.t57 (cl @p_112 @p_113 @p_9) :rule or :premises (t1.t56))
(step t1.t58 (cl @p_9 @p_113 @p_112) :rule reordering :premises (t1.t57))
(step t1.t59 (cl @p_112) :rule resolution :premises (t1.t58 a3 t1.a0))
(step t1.t60 (cl @p_111) :rule resolution :premises (t1.t36 t1.t59))
(step t1.t61 (cl (= (! (= (! (and @p_95 @p_99) :named @p_100) true) :named @p_101) @p_100)) :rule equiv_simplify)
(step t1.t62 (cl (not @p_101) @p_100) :rule equiv1 :premises (t1.t61))
(step t1.t63 (cl (! (= @p_100 @p_100) :named @p_110)) :rule refl)
(step t1.t64 (cl @p_109) :rule refl)
(step t1.t65 (cl (= ":BBBB" ":BBBB")) :rule refl)
(step t1.t66 (cl @p_95) :rule cong :premises (t1.t64 t1.t65))
(step t1.t67 (cl @p_95) :rule refl)
(step t1.t68 (cl @p_95) :rule trans :premises (t1.t67 t1.t66))
(step t1.t69 (cl (= @p_95 @p_95)) :rule cong :premises (t1.t66 t1.t68))
(step t1.t70 (cl (! (= @p_98 @p_98) :named @p_102)) :rule cong :premises (t1.t64))
(step t1.t71 (cl (= -5 -5)) :rule refl)
(step t1.t72 (cl (= @p_96 @p_96)) :rule cong :premises (t1.t68))
(step t1.t73 (cl (= @p_97 @p_97)) :rule cong :premises (t1.t71 t1.t72))
(step t1.t74 (cl (= @p_99 @p_99)) :rule cong :premises (t1.t70 t1.t73))
(step t1.t75 (cl @p_110) :rule cong :premises (t1.t69 t1.t74))
(step t1.t76 (cl (= @p_95 @p_109)) :rule rare_rewrite :args ("str-concat-unify-rev" ":BBBB" @p_93 rare-list @p_93 rare-list))
(step t1.t77 (cl (= @p_109 true)) :rule rare_rewrite :args ("eq-refl" @p_93))
(step t1.t78 (cl (= @p_95 true)) :rule trans :premises (t1.t76 t1.t77))
(step t1.t79 (cl @p_102) :rule refl)
(step t1.t80 (cl (= @p_96 (! (+ @p_98 @p_106) :named @p_107))) :rule rare_rewrite :args ("str-len-concat-rec" @p_93 ":BBBB" rare-list))
(step t1.t81 (cl @p_102) :rule refl)
(step t1.t82 (cl @p_108) :rule rare_rewrite :args ("evaluate"))
(step t1.t83 (cl (= @p_107 (! (+ @p_98 5) :named @p_105))) :rule cong :premises (t1.t81 t1.t82))
(step t1.t84 (cl (= @p_96 @p_105)) :rule trans :premises (t1.t80 t1.t83))
(step t1.t85 (cl (= @p_105 (! (+ 5 @p_98) :named @p_103))) :rule rare_rewrite :args ("arith-poly-norm"))
(step t1.t86 (cl (= @p_96 @p_103)) :rule trans :premises (t1.t84 t1.t85))
(step t1.t87 (cl (= @p_97 (! (+ -5 @p_103) :named @p_104))) :rule cong :premises (t1.t71 t1.t86))
(step t1.t88 (cl (= @p_104 @p_98)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t1.t89 (cl (= @p_97 @p_98)) :rule trans :premises (t1.t87 t1.t88))
(step t1.t90 (cl (= @p_99 @p_102)) :rule cong :premises (t1.t79 t1.t89))
(step t1.t91 (cl (= @p_102 true)) :rule rare_rewrite :args ("eq-refl" @p_98))
(step t1.t92 (cl (= @p_99 true)) :rule trans :premises (t1.t90 t1.t91))
(step t1.t93 (cl (= @p_100 (! (and true true) :named @p_17))) :rule cong :premises (t1.t78 t1.t92))
(step t1.t94 (cl (= @p_17 true)) :rule rare_rewrite :args ("evaluate"))
(step t1.t95 (cl @p_101) :rule trans :premises (t1.t93 t1.t94))
(step t1.t96 (cl @p_101) :rule trans :premises (t1.t63 t1.t75 t1.t95))
(step t1.t97 (cl @p_100) :rule resolution :premises (t1.t62 t1.t96))
(step t1.t98 (cl @p_95) :rule and :premises (t1.t97) :args (0))
(step t1.t99 (cl @p_111) :rule trans :premises (t1.t60 t1.t98))
(step t1.t100 (cl @p_154) :rule cong :premises (t1.t99))
(step t1.t101 (cl @p_99) :rule and :premises (t1.t97) :args (1))
(step t1.t102 (cl @p_11) :rule refl)
(step t1.t103 (cl (! (= @p_1 @p_2) :named @p_156)) :rule symm :premises (t1.a0))
(step t1.t104 (cl (= (! (= (! (and @p_27 @p_34) :named @p_35) true) :named @p_36) @p_35)) :rule equiv_simplify)
(step t1.t105 (cl (not @p_36) @p_35) :rule equiv1 :premises (t1.t104))
(step t1.t106 (cl (! (= @p_35 @p_35) :named @p_64)) :rule refl)
(step t1.t107 (cl @p_27) :rule refl)
(step t1.t108 (cl @p_27) :rule refl)
(step t1.t109 (cl (= @p_27 @p_27)) :rule cong :premises (t1.t107 t1.t108))
(step t1.t110 (cl (! (= @p_5 @p_5) :named @p_37)) :rule refl)
(step t1.t111 (cl (= -2 -2)) :rule refl)
(step t1.t112 (cl (= @p_32 @p_32)) :rule refl)
(step t1.t113 (cl (= @p_30 @p_30)) :rule refl)
(step t1.t114 (cl (= @p_28 @p_28)) :rule cong :premises (t1.t108))
(step t1.t115 (cl (= @p_33 @p_33)) :rule cong :premises (t1.t111 t1.t112 t1.t113 t1.t114))
(step t1.t116 (cl (= @p_34 @p_34)) :rule cong :premises (t1.t110 t1.t115))
(step t1.t117 (cl @p_64) :rule cong :premises (t1.t109 t1.t116))
(step t1.t118 (cl (= @p_27 (! (= (! (str.++ y w "A:") :named @p_62) @p_62) :named @p_63))) :rule rare_rewrite :args ("str-concat-unify-rev" x y (rare-list w "A:") y (rare-list w "A:")))
(step t1.t119 (cl (= @p_63 (! (= (! (str.++ y w) :named @p_60) @p_60) :named @p_61))) :rule rare_rewrite :args ("str-concat-unify-rev" "A:" y (rare-list w) y (rare-list w)))
(step t1.t120 (cl (= @p_61 (! (= y y) :named @p_59))) :rule rare_rewrite :args ("str-concat-unify-rev" w y rare-list y rare-list))
(step t1.t121 (cl (= @p_27 @p_59)) :rule trans :premises (t1.t118 t1.t119 t1.t120))
(step t1.t122 (cl (= @p_59 true)) :rule rare_rewrite :args ("eq-refl" y))
(step t1.t123 (cl (= @p_27 true)) :rule trans :premises (t1.t121 t1.t122))
(step t1.t124 (cl (= (! (= (! (= @p_28 (! (+ @p_5 @p_31 2 @p_29) :named @p_40)) :named @p_41) true) :named @p_42) @p_41)) :rule equiv_simplify)
(step t1.t125 (cl (not @p_42) @p_41) :rule equiv1 :premises (t1.t124))
(step t1.t126 (cl (not (! (= (! (= (! (= @p_40 @p_40) :named @p_43) true) :named @p_44) @p_42) :named @p_45)) (not @p_44) @p_42) :rule equiv_pos2)
(step t1.t127 (cl (= @p_28 (! (+ @p_5 (! (str.len (str.++ w "A:" x)) :named @p_57)) :named @p_58))) :rule rare_rewrite :args ("str-len-concat-rec" y w (rare-list "A:" x)))
(step t1.t128 (cl @p_37) :rule refl)
(step t1.t129 (cl (= @p_57 (! (+ @p_31 (! (str.len (str.++ "A:" x)) :named @p_54)) :named @p_55))) :rule rare_rewrite :args ("str-len-concat-rec" w "A:" (rare-list x)))
(step t1.t130 (cl (= @p_58 (! (+ @p_5 @p_55) :named @p_56))) :rule cong :premises (t1.t128 t1.t129))
(step t1.t131 (cl (! (= @p_31 @p_31) :named @p_52)) :rule refl)
(step t1.t132 (cl (= @p_54 (! (+ (! (str.len "A:") :named @p_46) @p_29) :named @p_47))) :rule rare_rewrite :args ("str-len-concat-rec" "A:" x rare-list))
(step t1.t133 (cl (= @p_55 (! (+ @p_31 @p_47) :named @p_48))) :rule cong :premises (t1.t131 t1.t132))
(step t1.t134 (cl (= @p_56 (! (+ @p_5 @p_48) :named @p_49))) :rule cong :premises (t1.t128 t1.t133))
(step t1.t135 (cl (= @p_28 @p_49)) :rule trans :premises (t1.t127 t1.t130 t1.t134))
(step t1.t136 (cl (= @p_49 (! (+ @p_5 @p_31 @p_47) :named @p_53))) :rule rare_rewrite :args ("arith-plus-flatten" (rare-list @p_5) @p_31 (rare-list @p_47) rare-list))
(step t1.t137 (cl (= @p_53 (! (+ @p_5 @p_31 @p_46 @p_29) :named @p_50))) :rule rare_rewrite :args ("arith-plus-flatten" (rare-list @p_5 @p_31) @p_46 (rare-list @p_29) rare-list))
(step t1.t138 (cl (= @p_49 @p_50)) :rule trans :premises (t1.t136 t1.t137))
(step t1.t139 (cl (= @p_46 2)) :rule rare_rewrite :args ("evaluate"))
(step t1.t140 (cl @p_51) :rule refl)
(step t1.t141 (cl (= @p_50 @p_40)) :rule cong :premises (t1.t128 t1.t131 t1.t139 t1.t140))
(step t1.t142 (cl (= @p_49 @p_40)) :rule trans :premises (t1.t138 t1.t141))
(step t1.t143 (cl @p_41) :rule trans :premises (t1.t135 t1.t142))
(step t1.t144 (cl @p_43) :rule refl)
(step t1.t145 (cl (= @p_41 @p_43)) :rule cong :premises (t1.t143 t1.t144))
(step t1.t146 (cl (= true true)) :rule refl)
(step t1.t147 (cl (= @p_42 @p_44)) :rule cong :premises (t1.t145 t1.t146))
(step t1.t148 (cl @p_45) :rule symm :premises (t1.t147))
(step t1.t149 (cl (= @p_44 @p_43)) :rule equiv_simplify)
(step t1.t150 (cl @p_44 (not @p_43)) :rule equiv2 :premises (t1.t149))
(step t1.t151 (cl @p_43) :rule refl)
(step t1.t152 (cl @p_44) :rule resolution :premises (t1.t150 t1.t151))
(step t1.t153 (cl @p_42) :rule resolution :premises (t1.t126 t1.t148 t1.t152))
(step t1.t154 (cl @p_41) :rule resolution :premises (t1.t125 t1.t153))
(step t1.t155 (cl (= @p_40 (! (+ 2 @p_5 @p_31 @p_29) :named @p_38))) :rule rare_rewrite :args ("arith-poly-norm"))
(step t1.t156 (cl (= @p_28 @p_38)) :rule trans :premises (t1.t154 t1.t155))
(step t1.t157 (cl (= @p_33 (! (+ -2 @p_32 @p_30 @p_38) :named @p_39))) :rule cong :premises (t1.t111 t1.t112 t1.t113 t1.t156))
(step t1.t158 (cl (= @p_39 @p_5)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t1.t159 (cl (= @p_33 @p_5)) :rule trans :premises (t1.t157 t1.t158))
(step t1.t160 (cl (= @p_34 @p_37)) :rule cong :premises (t1.t110 t1.t159))
(step t1.t161 (cl (= @p_37 true)) :rule rare_rewrite :args ("eq-refl" @p_5))
(step t1.t162 (cl (= @p_34 true)) :rule trans :premises (t1.t160 t1.t161))
(step t1.t163 (cl (= @p_35 @p_17)) :rule cong :premises (t1.t123 t1.t162))
(step t1.t164 (cl @p_36) :rule trans :premises (t1.t163 t1.t94))
(step t1.t165 (cl @p_36) :rule trans :premises (t1.t106 t1.t117 t1.t164))
(step t1.t166 (cl @p_35) :rule resolution :premises (t1.t105 t1.t165))
(step t1.t167 (cl @p_27) :rule and :premises (t1.t166) :args (0))
(step t1.t168 (cl @p_156) :rule trans :premises (t1.t102 t1.t103 t1.t167))
(step t1.t169 (cl @p_155) :rule cong :premises (t1.t168))
(step t1.t170 (cl (not (! (= @p_6 @p_67) :named @p_68)) (not @p_6) @p_67) :rule equiv_pos2)
(step t1.t171 (cl (= @p_6 (! (not (! (<= @p_5 @p_4) :named @p_69)) :named @p_70))) :rule rare_rewrite :args ("arith-elim-gt" @p_5 @p_4))
(step t1.t172 (cl (= @p_69 (! (not (! (>= @p_5 (! (+ @p_4 1) :named @p_73)) :named @p_74)) :named @p_75))) :rule rare_rewrite :args ("arith-leq-norm" @p_5 @p_4))
(step t1.t173 (cl (= (* -1 (- @p_5 @p_73)) (* -1 (- @p_66 1)))) :rule rare_rewrite :args ("arith-poly-norm"))
(step t1.t174 (cl (! (= @p_74 @p_67) :named @p_76)) :rule hole :premises (t1.t173) :args ("ARITH_POLY_NORM_REL" @p_76))
(step t1.t175 (cl (= @p_75 @p_71)) :rule cong :premises (t1.t174))
(step t1.t176 (cl (= @p_69 @p_71)) :rule trans :premises (t1.t172 t1.t175))
(step t1.t177 (cl (= @p_70 (! (not @p_71) :named @p_72))) :rule cong :premises (t1.t176))
(step t1.t178 (cl (= @p_72 @p_67)) :rule rare_rewrite :args ("bool-double-not-elim" @p_67))
(step t1.t179 (cl (= @p_70 @p_67)) :rule trans :premises (t1.t177 t1.t178))
(step t1.t180 (cl @p_68) :rule trans :premises (t1.t171 t1.t179))
(step t1.t181 (cl @p_67) :rule resolution :premises (t1.t170 t1.t180 a1))
(step t1.t182 (cl (= (! (= (! (and @p_11 @p_14) :named @p_15) true) :named @p_16) @p_15)) :rule equiv_simplify)
(step t1.t183 (cl (not @p_16) @p_15) :rule equiv1 :premises (t1.t182))
(step t1.t184 (cl (! (= @p_15 @p_15) :named @p_26)) :rule refl)
(step t1.t185 (cl @p_11) :rule refl)
(step t1.t186 (cl (= @p_11 @p_11)) :rule cong :premises (t1.t185 t1.t102))
(step t1.t187 (cl (! (= @p_4 @p_4) :named @p_18)) :rule refl)
(step t1.t188 (cl (= -6 -6)) :rule refl)
(step t1.t189 (cl (= @p_12 @p_12)) :rule cong :premises (t1.t102))
(step t1.t190 (cl (= @p_13 @p_13)) :rule cong :premises (t1.t188 t1.t189))
(step t1.t191 (cl (= @p_14 @p_14)) :rule cong :premises (t1.t187 t1.t190))
(step t1.t192 (cl @p_26) :rule cong :premises (t1.t186 t1.t191))
(step t1.t193 (cl (= @p_11 (! (= z z) :named @p_25))) :rule rare_rewrite :args ("str-concat-unify-rev" "::BBBB" z rare-list z rare-list))
(step t1.t194 (cl (= @p_25 true)) :rule rare_rewrite :args ("eq-refl" z))
(step t1.t195 (cl (= @p_11 true)) :rule trans :premises (t1.t193 t1.t194))
(step t1.t196 (cl (= @p_12 (! (+ @p_4 @p_22) :named @p_23))) :rule rare_rewrite :args ("str-len-concat-rec" z "::BBBB" rare-list))
(step t1.t197 (cl @p_18) :rule refl)
(step t1.t198 (cl @p_24) :rule rare_rewrite :args ("evaluate"))
(step t1.t199 (cl (= @p_23 (! (+ @p_4 6) :named @p_21))) :rule cong :premises (t1.t197 t1.t198))
(step t1.t200 (cl (= @p_12 @p_21)) :rule trans :premises (t1.t196 t1.t199))
(step t1.t201 (cl (= @p_21 (! (+ 6 @p_4) :named @p_19))) :rule rare_rewrite :args ("arith-poly-norm"))
(step t1.t202 (cl (= @p_12 @p_19)) :rule trans :premises (t1.t200 t1.t201))
(step t1.t203 (cl (= @p_13 (! (+ -6 @p_19) :named @p_20))) :rule cong :premises (t1.t188 t1.t202))
(step t1.t204 (cl (= @p_20 @p_4)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t1.t205 (cl (= @p_13 @p_4)) :rule trans :premises (t1.t203 t1.t204))
(step t1.t206 (cl (= @p_14 @p_18)) :rule cong :premises (t1.t187 t1.t205))
(step t1.t207 (cl (= @p_18 true)) :rule rare_rewrite :args ("eq-refl" @p_4))
(step t1.t208 (cl (= @p_14 true)) :rule trans :premises (t1.t206 t1.t207))
(step t1.t209 (cl (= @p_15 @p_17)) :rule cong :premises (t1.t195 t1.t208))
(step t1.t210 (cl @p_16) :rule trans :premises (t1.t209 t1.t94))
(step t1.t211 (cl @p_16) :rule trans :premises (t1.t184 t1.t192 t1.t210))
(step t1.t212 (cl @p_15) :rule resolution :premises (t1.t183 t1.t211))
(step t1.t213 (cl @p_14) :rule and :premises (t1.t212) :args (1))
(step t1.t214 (cl @p_34) :rule and :premises (t1.t166) :args (1))
(step t1.t215 (cl (not (! (= (! (or (! (and (= @p_31 0) @p_7) :named @p_78) (! (> @p_31 0) :named @p_81)) :named @p_82) (! (or @p_78 @p_77) :named @p_80)) :named @p_83)) (not @p_82) @p_80) :rule equiv_pos2)
(step t1.t216 (cl (= @p_78 @p_78)) :rule refl)
(step t1.t217 (cl (= @p_81 (! (not (! (<= @p_31 0) :named @p_84)) :named @p_85))) :rule rare_rewrite :args ("arith-elim-gt" @p_31 0))
(step t1.t218 (cl (= @p_84 (! (not (! (>= @p_31 (! (+ 0 1) :named @p_88)) :named @p_89)) :named @p_90))) :rule rare_rewrite :args ("arith-leq-norm" @p_31 0))
(step t1.t219 (cl @p_52) :rule refl)
(step t1.t220 (cl (! (= @p_88 1) :named @p_91)) :rule rare_rewrite :args ("evaluate"))
(step t1.t221 (cl (= @p_89 @p_77)) :rule cong :premises (t1.t219 t1.t220))
(step t1.t222 (cl (= @p_90 @p_86)) :rule cong :premises (t1.t221))
(step t1.t223 (cl (= @p_84 @p_86)) :rule trans :premises (t1.t218 t1.t222))
(step t1.t224 (cl (= @p_85 (! (not @p_86) :named @p_87))) :rule cong :premises (t1.t223))
(step t1.t225 (cl (= @p_87 @p_77)) :rule rare_rewrite :args ("bool-double-not-elim" @p_77))
(step t1.t226 (cl (= @p_85 @p_77)) :rule trans :premises (t1.t224 t1.t225))
(step t1.t227 (cl (= @p_81 @p_77)) :rule trans :premises (t1.t217 t1.t226))
(step t1.t228 (cl @p_83) :rule cong :premises (t1.t216 t1.t227))
(step t1.t229 (cl @p_82) :rule hole :args ("STRING_LENGTH_POS" w))
(step t1.t230 (cl @p_80) :rule resolution :premises (t1.t215 t1.t228 t1.t229))
(step t1.t231 (cl @p_78 @p_77) :rule or :premises (t1.t230))
(step t1.t232 (cl (! (not @p_78) :named @p_79) @p_7) :rule and_pos :args (1))
(step t1.t233 (cl @p_7 @p_79) :rule reordering :premises (t1.t232))
(step t1.t234 (cl @p_79) :rule resolution :premises (t1.t233 a2))
(step t1.t235 (cl @p_77) :rule resolution :premises (t1.t231 t1.t234))
(step t1.t236 (cl @p_251) :rule resolution :premises (t1.t0 t1.t100 t1.t101 t1.t169 t1.t181 t1.t213 t1.t214 t1.t235 t1.a7))
(step t1 (cl @p_113 @p_71 (! (not @p_11) :named @p_244) @p_157 @p_86 (! (not @p_27) :named @p_245) @p_158 @p_246 (! (not @p_111) :named @p_247) (! (not @p_95) :named @p_248) @p_160 @p_251) :rule subproof :discharge (t1.a0 t1.a1 t1.a2 t1.a3 t1.a4 t1.a5 t1.a6 t1.a7 t1.a8 t1.a9 t1.a10))
(step t2 (cl (! (not @p_249) :named @p_250) @p_3) :rule and_pos :args (0))
(step t3 (cl @p_250 @p_67) :rule and_pos :args (1))
(step t4 (cl @p_250 @p_11) :rule and_pos :args (2))
(step t5 (cl @p_250 @p_14) :rule and_pos :args (3))
(step t6 (cl @p_250 @p_77) :rule and_pos :args (4))
(step t7 (cl @p_250 @p_27) :rule and_pos :args (5))
(step t8 (cl @p_250 @p_34) :rule and_pos :args (6))
(step t9 (cl @p_250 @p_149) :rule and_pos :args (7))
(step t10 (cl @p_250 @p_111) :rule and_pos :args (8))
(step t11 (cl @p_250 @p_95) :rule and_pos :args (9))
(step t12 (cl @p_250 @p_99) :rule and_pos :args (10))
(step t13 (cl @p_251 @p_250 @p_250 @p_250 @p_250 @p_250 @p_250 @p_250 @p_250 @p_250 @p_250 @p_250) :rule resolution :premises (t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12))
(step t14 (cl @p_250 @p_250 @p_250 @p_250 @p_250 @p_250 @p_250 @p_250 @p_250 @p_250 @p_250 @p_251) :rule reordering :premises (t13))
(step t15 (cl @p_250 @p_251) :rule contraction :premises (t14))
(step t16 (cl @p_266 @p_251) :rule resolution :premises (t0 t15))
(step t17 (cl @p_266 (! (not @p_251) :named @p_252)) :rule implies_neg2)
(step t18 (cl @p_266 @p_266) :rule resolution :premises (t16 t17))
(step t19 (cl @p_266) :rule contraction :premises (t18))
(step t20 (cl @p_250 @p_251) :rule implies :premises (t19))
(step t21 (cl (! (=> @p_251 false) :named @p_253) @p_251) :rule implies_neg1)
(anchor :step t22)
(assume t22.a0 @p_154)
(assume t22.a1 @p_99)
(assume t22.a2 @p_155)
(assume t22.a3 @p_67)
(assume t22.a4 @p_14)
(assume t22.a5 @p_34)
(assume t22.a6 @p_77)
(assume t22.a7 @p_149)
(step t22.t0 (cl (! (=> @p_149 false) :named @p_254) @p_149) :rule implies_neg1)
(anchor :step t22.t1)
(assume t22.t1.a0 @p_149)
(step t22.t1.t0 (cl (not (! (= (! (<= (! (+ (! (* -1 @p_98) :named @p_182) @p_32 (! (+ @p_5 @p_31 @p_29 (! (* -1 @p_28) :named @p_172)) :named @p_179) (! (* -1 (! (+ @p_4 (! (* -1 @p_12) :named @p_176)) :named @p_177)) :named @p_178) (! (* -1 @p_66) :named @p_175) (! (* -1 (! (+ @p_12 @p_172) :named @p_173)) :named @p_174) (! (+ @p_98 (! (* -1 @p_96) :named @p_170)) :named @p_171) (! (* -1 (! (+ @p_29 @p_170) :named @p_180)) :named @p_181)) :named @p_256) (! (+ (! (* -1 0) :named @p_166) (! (* -1 1) :named @p_167) -2 (! (* -1 -6) :named @p_168) @p_167 @p_166 -5 @p_166) :named @p_255)) :named @p_257) false) :named @p_261)) (not @p_257) false) :rule equiv_pos2)
(step t22.t1.t1 (cl (= @p_256 (! (+ @p_182 @p_32 @p_5 @p_31 @p_29 @p_172 @p_178 @p_175 @p_174 @p_98 @p_170 @p_181) :named @p_264))) :rule rare_rewrite :args ("arith-poly-norm"))
(step t22.t1.t2 (cl (= @p_182 @p_182)) :rule refl)
(step t22.t1.t3 (cl (= @p_32 @p_32)) :rule refl)
(step t22.t1.t4 (cl @p_37) :rule refl)
(step t22.t1.t5 (cl @p_52) :rule refl)
(step t22.t1.t6 (cl @p_51) :rule refl)
(step t22.t1.t7 (cl (= @p_172 @p_172)) :rule refl)
(step t22.t1.t8 (cl (= @p_178 (! (+ @p_65 @p_12) :named @p_229))) :rule rare_rewrite :args ("arith-poly-norm"))
(step t22.t1.t9 (cl (= @p_175 (! (+ (* -1 @p_5) @p_4) :named @p_228))) :rule rare_rewrite :args ("arith-poly-norm"))
(step t22.t1.t10 (cl (= @p_174 (! (+ @p_176 @p_28) :named @p_227))) :rule rare_rewrite :args ("arith-poly-norm"))
(step t22.t1.t11 (cl @p_102) :rule refl)
(step t22.t1.t12 (cl (= @p_170 @p_170)) :rule refl)
(step t22.t1.t13 (cl (= @p_181 (! (+ @p_30 @p_96) :named @p_230))) :rule rare_rewrite :args ("arith-poly-norm"))
(step t22.t1.t14 (cl (= @p_264 (! (+ @p_182 @p_32 @p_5 @p_31 @p_29 @p_172 @p_229 @p_228 @p_227 @p_98 @p_170 @p_230) :named @p_265))) :rule cong :premises (t22.t1.t2 t22.t1.t3 t22.t1.t4 t22.t1.t5 t22.t1.t6 t22.t1.t7 t22.t1.t8 t22.t1.t9 t22.t1.t10 t22.t1.t11 t22.t1.t12 t22.t1.t13))
(step t22.t1.t15 (cl (= @p_265 0)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t22.t1.t16 (cl (= @p_264 0)) :rule trans :premises (t22.t1.t14 t22.t1.t15))
(step t22.t1.t17 (cl (= @p_256 0)) :rule trans :premises (t22.t1.t1 t22.t1.t16))
(step t22.t1.t18 (cl (= @p_166 0)) :rule rare_rewrite :args ("evaluate"))
(step t22.t1.t19 (cl (= @p_167 -1)) :rule rare_rewrite :args ("evaluate"))
(step t22.t1.t20 (cl (= -2 -2)) :rule refl)
(step t22.t1.t21 (cl (= @p_168 6)) :rule rare_rewrite :args ("evaluate"))
(step t22.t1.t22 (cl (= -5 -5)) :rule refl)
(step t22.t1.t23 (cl (= @p_255 (! (+ 0 -1 -2 6 -1 0 -5 0) :named @p_263))) :rule cong :premises (t22.t1.t18 t22.t1.t19 t22.t1.t20 t22.t1.t21 t22.t1.t19 t22.t1.t18 t22.t1.t22 t22.t1.t18))
(step t22.t1.t24 (cl (= @p_263 -3)) :rule rare_rewrite :args ("evaluate"))
(step t22.t1.t25 (cl (= @p_255 -3)) :rule trans :premises (t22.t1.t23 t22.t1.t24))
(step t22.t1.t26 (cl (= @p_257 (! (<= 0 -3) :named @p_262))) :rule cong :premises (t22.t1.t17 t22.t1.t25))
(step t22.t1.t27 (cl (= @p_262 false)) :rule rare_rewrite :args ("evaluate"))
(step t22.t1.t28 (cl @p_261) :rule trans :premises (t22.t1.t26 t22.t1.t27))
(step t22.t1.t29 (cl (not (! (= @p_182 @p_166) :named @p_258)) (! (not (! (<= @p_32 @p_167) :named @p_206)) :named @p_217) (! (not (! (= @p_179 -2) :named @p_203)) :named @p_218) (! (not (! (= @p_178 @p_168) :named @p_198)) :named @p_219) (! (not (! (<= @p_175 @p_167) :named @p_196)) :named @p_220) (! (not (! (= @p_174 @p_166) :named @p_188)) :named @p_221) (! (not (! (= @p_171 -5) :named @p_185)) :named @p_222) (! (not (! (= @p_181 @p_166) :named @p_208)) :named @p_216) @p_257) :rule la_generic :args (-1/1 1/1 -1/1 -1/1 1/1 -1/1 -1/1 -1/1 1/1))
(step t22.t1.t30 (cl (=> (! (and (! (< -1 0) :named @p_190) @p_149) :named @p_259) @p_258)) :rule la_mult_neg)
(step t22.t1.t31 (cl (not @p_259) @p_258) :rule implies :premises (t22.t1.t30))
(step t22.t1.t32 (cl @p_259 (! (not @p_190) :named @p_195) @p_246) :rule and_neg)
(step t22.t1.t33 (cl (= (! (= @p_190 true) :named @p_194) @p_190)) :rule equiv_simplify)
(step t22.t1.t34 (cl (not @p_194) @p_190) :rule equiv1 :premises (t22.t1.t33))
(step t22.t1.t35 (cl @p_194) :rule rare_rewrite :args ("evaluate"))
(step t22.t1.t36 (cl @p_190) :rule resolution :premises (t22.t1.t34 t22.t1.t35))
(step t22.t1.t37 (cl @p_259) :rule resolution :premises (t22.t1.t32 t22.t1.t36 t22.t1.a0))
(step t22.t1.t38 (cl @p_258) :rule resolution :premises (t22.t1.t31 t22.t1.t37))
(step t22.t1.t39 (cl (=> (! (and @p_190 @p_77) :named @p_207) @p_206)) :rule la_mult_neg)
(step t22.t1.t40 (cl (not @p_207) @p_206) :rule implies :premises (t22.t1.t39))
(step t22.t1.t41 (cl @p_207 @p_195 @p_86) :rule and_neg)
(step t22.t1.t42 (cl (not @p_83) (not @p_82) @p_80) :rule equiv_pos2)
(step t22.t1.t43 (cl (= @p_78 @p_78)) :rule refl)
(step t22.t1.t44 (cl (= @p_81 @p_85)) :rule rare_rewrite :args ("arith-elim-gt" @p_31 0))
(step t22.t1.t45 (cl (= @p_84 @p_90)) :rule rare_rewrite :args ("arith-leq-norm" @p_31 0))
(step t22.t1.t46 (cl @p_52) :rule refl)
(step t22.t1.t47 (cl @p_91) :rule rare_rewrite :args ("evaluate"))
(step t22.t1.t48 (cl (= @p_89 @p_77)) :rule cong :premises (t22.t1.t46 t22.t1.t47))
(step t22.t1.t49 (cl (= @p_90 @p_86)) :rule cong :premises (t22.t1.t48))
(step t22.t1.t50 (cl (= @p_84 @p_86)) :rule trans :premises (t22.t1.t45 t22.t1.t49))
(step t22.t1.t51 (cl (= @p_85 @p_87)) :rule cong :premises (t22.t1.t50))
(step t22.t1.t52 (cl (= @p_87 @p_77)) :rule rare_rewrite :args ("bool-double-not-elim" @p_77))
(step t22.t1.t53 (cl (= @p_85 @p_77)) :rule trans :premises (t22.t1.t51 t22.t1.t52))
(step t22.t1.t54 (cl (= @p_81 @p_77)) :rule trans :premises (t22.t1.t44 t22.t1.t53))
(step t22.t1.t55 (cl @p_83) :rule cong :premises (t22.t1.t43 t22.t1.t54))
(step t22.t1.t56 (cl @p_82) :rule hole :args ("STRING_LENGTH_POS" w))
(step t22.t1.t57 (cl @p_80) :rule resolution :premises (t22.t1.t42 t22.t1.t55 t22.t1.t56))
(step t22.t1.t58 (cl @p_78 @p_77) :rule or :premises (t22.t1.t57))
(step t22.t1.t59 (cl @p_79 @p_7) :rule and_pos :args (1))
(step t22.t1.t60 (cl @p_7 @p_79) :rule reordering :premises (t22.t1.t59))
(step t22.t1.t61 (cl @p_79) :rule resolution :premises (t22.t1.t60 a2))
(step t22.t1.t62 (cl @p_77) :rule resolution :premises (t22.t1.t58 t22.t1.t61))
(step t22.t1.t63 (cl @p_207) :rule resolution :premises (t22.t1.t41 t22.t1.t36 t22.t1.t62))
(step t22.t1.t64 (cl @p_206) :rule resolution :premises (t22.t1.t40 t22.t1.t63))
(step t22.t1.t65 (cl (not (! (= @p_34 @p_203) :named @p_204)) @p_158 @p_203) :rule equiv_pos2)
(step t22.t1.t66 (cl (= (* 2 (- @p_179 -2)) (* 2 (- @p_5 @p_33)))) :rule rare_rewrite :args ("arith-poly-norm"))
(step t22.t1.t67 (cl (! (= @p_203 @p_34) :named @p_205)) :rule hole :premises (t22.t1.t66) :args ("ARITH_POLY_NORM_REL" @p_205))
(step t22.t1.t68 (cl @p_204) :rule symm :premises (t22.t1.t67))
(step t22.t1.t69 (cl (= @p_36 @p_35)) :rule equiv_simplify)
(step t22.t1.t70 (cl (not @p_36) @p_35) :rule equiv1 :premises (t22.t1.t69))
(step t22.t1.t71 (cl @p_64) :rule refl)
(step t22.t1.t72 (cl @p_27) :rule refl)
(step t22.t1.t73 (cl @p_27) :rule refl)
(step t22.t1.t74 (cl (= @p_27 @p_27)) :rule cong :premises (t22.t1.t72 t22.t1.t73))
(step t22.t1.t75 (cl (= @p_30 @p_30)) :rule refl)
(step t22.t1.t76 (cl (= @p_28 @p_28)) :rule cong :premises (t22.t1.t73))
(step t22.t1.t77 (cl (= @p_33 @p_33)) :rule cong :premises (t22.t1.t20 t22.t1.t3 t22.t1.t75 t22.t1.t76))
(step t22.t1.t78 (cl (= @p_34 @p_34)) :rule cong :premises (t22.t1.t4 t22.t1.t77))
(step t22.t1.t79 (cl @p_64) :rule cong :premises (t22.t1.t74 t22.t1.t78))
(step t22.t1.t80 (cl (= @p_27 @p_63)) :rule rare_rewrite :args ("str-concat-unify-rev" x y (rare-list w "A:") y (rare-list w "A:")))
(step t22.t1.t81 (cl (= @p_63 @p_61)) :rule rare_rewrite :args ("str-concat-unify-rev" "A:" y (rare-list w) y (rare-list w)))
(step t22.t1.t82 (cl (= @p_61 @p_59)) :rule rare_rewrite :args ("str-concat-unify-rev" w y rare-list y rare-list))
(step t22.t1.t83 (cl (= @p_27 @p_59)) :rule trans :premises (t22.t1.t80 t22.t1.t81 t22.t1.t82))
(step t22.t1.t84 (cl (= @p_59 true)) :rule rare_rewrite :args ("eq-refl" y))
(step t22.t1.t85 (cl (= @p_27 true)) :rule trans :premises (t22.t1.t83 t22.t1.t84))
(step t22.t1.t86 (cl (= @p_42 @p_41)) :rule equiv_simplify)
(step t22.t1.t87 (cl (not @p_42) @p_41) :rule equiv1 :premises (t22.t1.t86))
(step t22.t1.t88 (cl (not @p_45) (not @p_44) @p_42) :rule equiv_pos2)
(step t22.t1.t89 (cl (= @p_28 @p_58)) :rule rare_rewrite :args ("str-len-concat-rec" y w (rare-list "A:" x)))
(step t22.t1.t90 (cl @p_37) :rule refl)
(step t22.t1.t91 (cl (= @p_57 @p_55)) :rule rare_rewrite :args ("str-len-concat-rec" w "A:" (rare-list x)))
(step t22.t1.t92 (cl (= @p_58 @p_56)) :rule cong :premises (t22.t1.t90 t22.t1.t91))
(step t22.t1.t93 (cl @p_52) :rule refl)
(step t22.t1.t94 (cl (= @p_54 @p_47)) :rule rare_rewrite :args ("str-len-concat-rec" "A:" x rare-list))
(step t22.t1.t95 (cl (= @p_55 @p_48)) :rule cong :premises (t22.t1.t93 t22.t1.t94))
(step t22.t1.t96 (cl (= @p_56 @p_49)) :rule cong :premises (t22.t1.t90 t22.t1.t95))
(step t22.t1.t97 (cl (= @p_28 @p_49)) :rule trans :premises (t22.t1.t89 t22.t1.t92 t22.t1.t96))
(step t22.t1.t98 (cl (= @p_49 @p_53)) :rule rare_rewrite :args ("arith-plus-flatten" (rare-list @p_5) @p_31 (rare-list @p_47) rare-list))
(step t22.t1.t99 (cl (= @p_53 @p_50)) :rule rare_rewrite :args ("arith-plus-flatten" (rare-list @p_5 @p_31) @p_46 (rare-list @p_29) rare-list))
(step t22.t1.t100 (cl (= @p_49 @p_50)) :rule trans :premises (t22.t1.t98 t22.t1.t99))
(step t22.t1.t101 (cl (= @p_46 2)) :rule rare_rewrite :args ("evaluate"))
(step t22.t1.t102 (cl @p_51) :rule refl)
(step t22.t1.t103 (cl (= @p_50 @p_40)) :rule cong :premises (t22.t1.t90 t22.t1.t93 t22.t1.t101 t22.t1.t102))
(step t22.t1.t104 (cl (= @p_49 @p_40)) :rule trans :premises (t22.t1.t100 t22.t1.t103))
(step t22.t1.t105 (cl @p_41) :rule trans :premises (t22.t1.t97 t22.t1.t104))
(step t22.t1.t106 (cl @p_43) :rule refl)
(step t22.t1.t107 (cl (= @p_41 @p_43)) :rule cong :premises (t22.t1.t105 t22.t1.t106))
(step t22.t1.t108 (cl (= true true)) :rule refl)
(step t22.t1.t109 (cl (= @p_42 @p_44)) :rule cong :premises (t22.t1.t107 t22.t1.t108))
(step t22.t1.t110 (cl @p_45) :rule symm :premises (t22.t1.t109))
(step t22.t1.t111 (cl (= @p_44 @p_43)) :rule equiv_simplify)
(step t22.t1.t112 (cl @p_44 (not @p_43)) :rule equiv2 :premises (t22.t1.t111))
(step t22.t1.t113 (cl @p_43) :rule refl)
(step t22.t1.t114 (cl @p_44) :rule resolution :premises (t22.t1.t112 t22.t1.t113))
(step t22.t1.t115 (cl @p_42) :rule resolution :premises (t22.t1.t88 t22.t1.t110 t22.t1.t114))
(step t22.t1.t116 (cl @p_41) :rule resolution :premises (t22.t1.t87 t22.t1.t115))
(step t22.t1.t117 (cl (= @p_40 @p_38)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t22.t1.t118 (cl (= @p_28 @p_38)) :rule trans :premises (t22.t1.t116 t22.t1.t117))
(step t22.t1.t119 (cl (= @p_33 @p_39)) :rule cong :premises (t22.t1.t20 t22.t1.t3 t22.t1.t75 t22.t1.t118))
(step t22.t1.t120 (cl (= @p_39 @p_5)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t22.t1.t121 (cl (= @p_33 @p_5)) :rule trans :premises (t22.t1.t119 t22.t1.t120))
(step t22.t1.t122 (cl (= @p_34 @p_37)) :rule cong :premises (t22.t1.t4 t22.t1.t121))
(step t22.t1.t123 (cl (= @p_37 true)) :rule rare_rewrite :args ("eq-refl" @p_5))
(step t22.t1.t124 (cl (= @p_34 true)) :rule trans :premises (t22.t1.t122 t22.t1.t123))
(step t22.t1.t125 (cl (= @p_35 @p_17)) :rule cong :premises (t22.t1.t85 t22.t1.t124))
(step t22.t1.t126 (cl (= @p_17 true)) :rule rare_rewrite :args ("evaluate"))
(step t22.t1.t127 (cl @p_36) :rule trans :premises (t22.t1.t125 t22.t1.t126))
(step t22.t1.t128 (cl @p_36) :rule trans :premises (t22.t1.t71 t22.t1.t79 t22.t1.t127))
(step t22.t1.t129 (cl @p_35) :rule resolution :premises (t22.t1.t70 t22.t1.t128))
(step t22.t1.t130 (cl @p_34) :rule and :premises (t22.t1.t129) :args (1))
(step t22.t1.t131 (cl @p_203) :rule resolution :premises (t22.t1.t65 t22.t1.t68 t22.t1.t130))
(step t22.t1.t132 (cl (=> (! (and @p_190 (! (= @p_177 -6) :named @p_199)) :named @p_200) @p_198)) :rule la_mult_neg)
(step t22.t1.t133 (cl (not @p_200) @p_198) :rule implies :premises (t22.t1.t132))
(step t22.t1.t134 (cl @p_200 @p_195 (not @p_199)) :rule and_neg)
(step t22.t1.t135 (cl (not (! (= @p_14 @p_199) :named @p_201)) @p_157 @p_199) :rule equiv_pos2)
(step t22.t1.t136 (cl (= (* 6 (- @p_177 -6)) (* 6 (- @p_4 @p_13)))) :rule rare_rewrite :args ("arith-poly-norm"))
(step t22.t1.t137 (cl (! (= @p_199 @p_14) :named @p_202)) :rule hole :premises (t22.t1.t136) :args ("ARITH_POLY_NORM_REL" @p_202))
(step t22.t1.t138 (cl @p_201) :rule symm :premises (t22.t1.t137))
(step t22.t1.t139 (cl (= @p_16 @p_15)) :rule equiv_simplify)
(step t22.t1.t140 (cl (not @p_16) @p_15) :rule equiv1 :premises (t22.t1.t139))
(step t22.t1.t141 (cl @p_26) :rule refl)
(step t22.t1.t142 (cl @p_11) :rule refl)
(step t22.t1.t143 (cl @p_11) :rule refl)
(step t22.t1.t144 (cl (= @p_11 @p_11)) :rule cong :premises (t22.t1.t142 t22.t1.t143))
(step t22.t1.t145 (cl @p_18) :rule refl)
(step t22.t1.t146 (cl (= -6 -6)) :rule refl)
(step t22.t1.t147 (cl (= @p_12 @p_12)) :rule cong :premises (t22.t1.t143))
(step t22.t1.t148 (cl (= @p_13 @p_13)) :rule cong :premises (t22.t1.t146 t22.t1.t147))
(step t22.t1.t149 (cl (= @p_14 @p_14)) :rule cong :premises (t22.t1.t145 t22.t1.t148))
(step t22.t1.t150 (cl @p_26) :rule cong :premises (t22.t1.t144 t22.t1.t149))
(step t22.t1.t151 (cl (= @p_11 @p_25)) :rule rare_rewrite :args ("str-concat-unify-rev" "::BBBB" z rare-list z rare-list))
(step t22.t1.t152 (cl (= @p_25 true)) :rule rare_rewrite :args ("eq-refl" z))
(step t22.t1.t153 (cl (= @p_11 true)) :rule trans :premises (t22.t1.t151 t22.t1.t152))
(step t22.t1.t154 (cl (= @p_12 @p_23)) :rule rare_rewrite :args ("str-len-concat-rec" z "::BBBB" rare-list))
(step t22.t1.t155 (cl @p_18) :rule refl)
(step t22.t1.t156 (cl @p_24) :rule rare_rewrite :args ("evaluate"))
(step t22.t1.t157 (cl (= @p_23 @p_21)) :rule cong :premises (t22.t1.t155 t22.t1.t156))
(step t22.t1.t158 (cl (= @p_12 @p_21)) :rule trans :premises (t22.t1.t154 t22.t1.t157))
(step t22.t1.t159 (cl (= @p_21 @p_19)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t22.t1.t160 (cl (= @p_12 @p_19)) :rule trans :premises (t22.t1.t158 t22.t1.t159))
(step t22.t1.t161 (cl (= @p_13 @p_20)) :rule cong :premises (t22.t1.t146 t22.t1.t160))
(step t22.t1.t162 (cl (= @p_20 @p_4)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t22.t1.t163 (cl (= @p_13 @p_4)) :rule trans :premises (t22.t1.t161 t22.t1.t162))
(step t22.t1.t164 (cl (= @p_14 @p_18)) :rule cong :premises (t22.t1.t145 t22.t1.t163))
(step t22.t1.t165 (cl (= @p_18 true)) :rule rare_rewrite :args ("eq-refl" @p_4))
(step t22.t1.t166 (cl (= @p_14 true)) :rule trans :premises (t22.t1.t164 t22.t1.t165))
(step t22.t1.t167 (cl (= @p_15 @p_17)) :rule cong :premises (t22.t1.t153 t22.t1.t166))
(step t22.t1.t168 (cl @p_16) :rule trans :premises (t22.t1.t167 t22.t1.t126))
(step t22.t1.t169 (cl @p_16) :rule trans :premises (t22.t1.t141 t22.t1.t150 t22.t1.t168))
(step t22.t1.t170 (cl @p_15) :rule resolution :premises (t22.t1.t140 t22.t1.t169))
(step t22.t1.t171 (cl @p_14) :rule and :premises (t22.t1.t170) :args (1))
(step t22.t1.t172 (cl @p_199) :rule resolution :premises (t22.t1.t135 t22.t1.t138 t22.t1.t171))
(step t22.t1.t173 (cl @p_200) :rule resolution :premises (t22.t1.t134 t22.t1.t36 t22.t1.t172))
(step t22.t1.t174 (cl @p_198) :rule resolution :premises (t22.t1.t133 t22.t1.t173))
(step t22.t1.t175 (cl (=> (! (and @p_190 @p_67) :named @p_197) @p_196)) :rule la_mult_neg)
(step t22.t1.t176 (cl (not @p_197) @p_196) :rule implies :premises (t22.t1.t175))
(step t22.t1.t177 (cl @p_197 @p_195 @p_71) :rule and_neg)
(step t22.t1.t178 (cl (not @p_68) (not @p_6) @p_67) :rule equiv_pos2)
(step t22.t1.t179 (cl (= @p_6 @p_70)) :rule rare_rewrite :args ("arith-elim-gt" @p_5 @p_4))
(step t22.t1.t180 (cl (= @p_69 @p_75)) :rule rare_rewrite :args ("arith-leq-norm" @p_5 @p_4))
(step t22.t1.t181 (cl (= (* -1 (- @p_5 @p_73)) (* -1 (- @p_66 1)))) :rule rare_rewrite :args ("arith-poly-norm"))
(step t22.t1.t182 (cl @p_76) :rule hole :premises (t22.t1.t181) :args ("ARITH_POLY_NORM_REL" @p_76))
(step t22.t1.t183 (cl (= @p_75 @p_71)) :rule cong :premises (t22.t1.t182))
(step t22.t1.t184 (cl (= @p_69 @p_71)) :rule trans :premises (t22.t1.t180 t22.t1.t183))
(step t22.t1.t185 (cl (= @p_70 @p_72)) :rule cong :premises (t22.t1.t184))
(step t22.t1.t186 (cl (= @p_72 @p_67)) :rule rare_rewrite :args ("bool-double-not-elim" @p_67))
(step t22.t1.t187 (cl (= @p_70 @p_67)) :rule trans :premises (t22.t1.t185 t22.t1.t186))
(step t22.t1.t188 (cl @p_68) :rule trans :premises (t22.t1.t179 t22.t1.t187))
(step t22.t1.t189 (cl @p_67) :rule resolution :premises (t22.t1.t178 t22.t1.t188 a1))
(step t22.t1.t190 (cl @p_197) :rule resolution :premises (t22.t1.t177 t22.t1.t36 t22.t1.t189))
(step t22.t1.t191 (cl @p_196) :rule resolution :premises (t22.t1.t176 t22.t1.t190))
(step t22.t1.t192 (cl (=> (! (and @p_190 (! (= @p_173 0) :named @p_189)) :named @p_191) @p_188)) :rule la_mult_neg)
(step t22.t1.t193 (cl (not @p_191) @p_188) :rule implies :premises (t22.t1.t192))
(step t22.t1.t194 (cl @p_191 @p_195 (not @p_189)) :rule and_neg)
(step t22.t1.t195 (cl (not (! (= @p_155 @p_189) :named @p_192)) @p_159 @p_189) :rule equiv_pos2)
(step t22.t1.t196 (cl (= (* 1 (- @p_173 0)) (* 1 (- @p_12 @p_28)))) :rule rare_rewrite :args ("arith-poly-norm"))
(step t22.t1.t197 (cl (! (= @p_189 @p_155) :named @p_193)) :rule hole :premises (t22.t1.t196) :args ("ARITH_POLY_NORM_REL" @p_193))
(step t22.t1.t198 (cl @p_192) :rule symm :premises (t22.t1.t197))
(step t22.t1.t199 (cl @p_156) :rule symm :premises (a0))
(step t22.t1.t200 (cl @p_27) :rule and :premises (t22.t1.t129) :args (0))
(step t22.t1.t201 (cl @p_156) :rule trans :premises (t22.t1.t143 t22.t1.t199 t22.t1.t200))
(step t22.t1.t202 (cl @p_155) :rule cong :premises (t22.t1.t201))
(step t22.t1.t203 (cl @p_189) :rule resolution :premises (t22.t1.t195 t22.t1.t198 t22.t1.t202))
(step t22.t1.t204 (cl @p_191) :rule resolution :premises (t22.t1.t194 t22.t1.t36 t22.t1.t203))
(step t22.t1.t205 (cl @p_188) :rule resolution :premises (t22.t1.t193 t22.t1.t204))
(step t22.t1.t206 (cl (not (! (= @p_99 @p_185) :named @p_186)) @p_160 @p_185) :rule equiv_pos2)
(step t22.t1.t207 (cl (= (* 5 (- @p_171 -5)) (* 5 (- @p_98 @p_97)))) :rule rare_rewrite :args ("arith-poly-norm"))
(step t22.t1.t208 (cl (! (= @p_185 @p_99) :named @p_187)) :rule hole :premises (t22.t1.t207) :args ("ARITH_POLY_NORM_REL" @p_187))
(step t22.t1.t209 (cl @p_186) :rule symm :premises (t22.t1.t208))
(step t22.t1.t210 (cl (= @p_101 @p_100)) :rule equiv_simplify)
(step t22.t1.t211 (cl (not @p_101) @p_100) :rule equiv1 :premises (t22.t1.t210))
(step t22.t1.t212 (cl @p_110) :rule refl)
(step t22.t1.t213 (cl @p_109) :rule refl)
(step t22.t1.t214 (cl (= ":BBBB" ":BBBB")) :rule refl)
(step t22.t1.t215 (cl @p_95) :rule cong :premises (t22.t1.t213 t22.t1.t214))
(step t22.t1.t216 (cl @p_95) :rule refl)
(step t22.t1.t217 (cl @p_95) :rule trans :premises (t22.t1.t216 t22.t1.t215))
(step t22.t1.t218 (cl (= @p_95 @p_95)) :rule cong :premises (t22.t1.t215 t22.t1.t217))
(step t22.t1.t219 (cl @p_102) :rule cong :premises (t22.t1.t213))
(step t22.t1.t220 (cl (= @p_96 @p_96)) :rule cong :premises (t22.t1.t217))
(step t22.t1.t221 (cl (= @p_97 @p_97)) :rule cong :premises (t22.t1.t22 t22.t1.t220))
(step t22.t1.t222 (cl (= @p_99 @p_99)) :rule cong :premises (t22.t1.t219 t22.t1.t221))
(step t22.t1.t223 (cl @p_110) :rule cong :premises (t22.t1.t218 t22.t1.t222))
(step t22.t1.t224 (cl (= @p_95 @p_109)) :rule rare_rewrite :args ("str-concat-unify-rev" ":BBBB" @p_93 rare-list @p_93 rare-list))
(step t22.t1.t225 (cl (= @p_109 true)) :rule rare_rewrite :args ("eq-refl" @p_93))
(step t22.t1.t226 (cl (= @p_95 true)) :rule trans :premises (t22.t1.t224 t22.t1.t225))
(step t22.t1.t227 (cl @p_102) :rule refl)
(step t22.t1.t228 (cl (= @p_96 @p_107)) :rule rare_rewrite :args ("str-len-concat-rec" @p_93 ":BBBB" rare-list))
(step t22.t1.t229 (cl @p_102) :rule refl)
(step t22.t1.t230 (cl @p_108) :rule rare_rewrite :args ("evaluate"))
(step t22.t1.t231 (cl (= @p_107 @p_105)) :rule cong :premises (t22.t1.t229 t22.t1.t230))
(step t22.t1.t232 (cl (= @p_96 @p_105)) :rule trans :premises (t22.t1.t228 t22.t1.t231))
(step t22.t1.t233 (cl (= @p_105 @p_103)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t22.t1.t234 (cl (= @p_96 @p_103)) :rule trans :premises (t22.t1.t232 t22.t1.t233))
(step t22.t1.t235 (cl (= @p_97 @p_104)) :rule cong :premises (t22.t1.t22 t22.t1.t234))
(step t22.t1.t236 (cl (= @p_104 @p_98)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t22.t1.t237 (cl (= @p_97 @p_98)) :rule trans :premises (t22.t1.t235 t22.t1.t236))
(step t22.t1.t238 (cl (= @p_99 @p_102)) :rule cong :premises (t22.t1.t227 t22.t1.t237))
(step t22.t1.t239 (cl (= @p_102 true)) :rule rare_rewrite :args ("eq-refl" @p_98))
(step t22.t1.t240 (cl (= @p_99 true)) :rule trans :premises (t22.t1.t238 t22.t1.t239))
(step t22.t1.t241 (cl (= @p_100 @p_17)) :rule cong :premises (t22.t1.t226 t22.t1.t240))
(step t22.t1.t242 (cl @p_101) :rule trans :premises (t22.t1.t241 t22.t1.t126))
(step t22.t1.t243 (cl @p_101) :rule trans :premises (t22.t1.t212 t22.t1.t223 t22.t1.t242))
(step t22.t1.t244 (cl @p_100) :rule resolution :premises (t22.t1.t211 t22.t1.t243))
(step t22.t1.t245 (cl @p_99) :rule and :premises (t22.t1.t244) :args (1))
(step t22.t1.t246 (cl @p_185) :rule resolution :premises (t22.t1.t206 t22.t1.t209 t22.t1.t245))
(step t22.t1.t247 (cl (=> (! (and @p_190 (! (= @p_180 0) :named @p_209)) :named @p_210) @p_208)) :rule la_mult_neg)
(step t22.t1.t248 (cl (not @p_210) @p_208) :rule implies :premises (t22.t1.t247))
(step t22.t1.t249 (cl @p_210 @p_195 (not @p_209)) :rule and_neg)
(step t22.t1.t250 (cl (not (! (= @p_154 @p_209) :named @p_211)) @p_161 @p_209) :rule equiv_pos2)
(step t22.t1.t251 (cl (= (* 1 (- @p_180 0)) (* 1 (- @p_29 @p_96)))) :rule rare_rewrite :args ("arith-poly-norm"))
(step t22.t1.t252 (cl (! (= @p_209 @p_154) :named @p_212)) :rule hole :premises (t22.t1.t251) :args ("ARITH_POLY_NORM_REL" @p_212))
(step t22.t1.t253 (cl @p_211) :rule symm :premises (t22.t1.t252))
(step t22.t1.t254 (cl (not @p_148) (not @p_128) @p_123) :rule equiv_pos2)
(step t22.t1.t255 (cl (= @p_112 @p_112)) :rule refl)
(step t22.t1.t256 (cl (= x x)) :rule refl)
(step t22.t1.t257 (cl @p_109) :rule refl)
(step t22.t1.t258 (cl (= "::BBBB" "::BBBB")) :rule refl)
(step t22.t1.t259 (cl @p_137) :rule rare_rewrite :args ("evaluate"))
(step t22.t1.t260 (cl @p_140) :rule rare_rewrite :args ("evaluate"))
(step t22.t1.t261 (cl (= 1 @p_139)) :rule symm :premises (t22.t1.t260))
(step t22.t1.t262 (cl (= @p_124 @p_139)) :rule trans :premises (t22.t1.t259 t22.t1.t261))
(step t22.t1.t263 (cl @p_24) :rule rare_rewrite :args ("evaluate"))
(step t22.t1.t264 (cl (= @p_138 -5)) :rule rare_rewrite :args ("evaluate"))
(step t22.t1.t265 (cl (= @p_139 @p_141)) :rule cong :premises (t22.t1.t263 t22.t1.t264))
(step t22.t1.t266 (cl (= @p_141 1)) :rule rare_rewrite :args ("evaluate"))
(step t22.t1.t267 (cl @p_140) :rule trans :premises (t22.t1.t265 t22.t1.t266))
(step t22.t1.t268 (cl @p_137) :rule trans :premises (t22.t1.t262 t22.t1.t267))
(step t22.t1.t269 (cl (= 5 5)) :rule refl)
(step t22.t1.t270 (cl (= @p_125 @p_136)) :rule cong :premises (t22.t1.t258 t22.t1.t268 t22.t1.t269))
(step t22.t1.t271 (cl (= @p_136 ":BBBB")) :rule rare_rewrite :args ("evaluate"))
(step t22.t1.t272 (cl (= @p_125 ":BBBB")) :rule trans :premises (t22.t1.t270 t22.t1.t271))
(step t22.t1.t273 (cl (= @p_126 @p_94)) :rule cong :premises (t22.t1.t257 t22.t1.t272))
(step t22.t1.t274 (cl @p_135) :rule cong :premises (t22.t1.t256 t22.t1.t273))
(step t22.t1.t275 (cl @p_148) :rule cong :premises (t22.t1.t255 t22.t1.t274))
(step t22.t1.t276 (cl @p_128 @p_112) :rule implies_neg1)
(anchor :step t22.t1.t277)
(assume t22.t1.t277.a0 @p_3)
(assume t22.t1.t277.a1 @p_10)
(step t22.t1.t277.t0 (cl (not @p_134) (not @p_133) @p_127) :rule equiv_pos2)
(step t22.t1.t277.t1 (cl @p_147) :rule refl)
(step t22.t1.t277.t2 (cl (= @p_132 @p_142)) :rule cong :premises (t22.t1.t277.t1 t22.t1.t272))
(step t22.t1.t277.t3 (cl (= @p_133 @p_143)) :rule cong :premises (t22.t1.t256 t22.t1.t277.t2))
(step t22.t1.t277.t4 (cl @p_147) :rule refl)
(step t22.t1.t277.t5 (cl (= @p_142 @p_142)) :rule cong :premises (t22.t1.t277.t4 t22.t1.t214))
(step t22.t1.t277.t6 (cl (= @p_143 @p_143)) :rule cong :premises (t22.t1.t256 t22.t1.t277.t5))
(step t22.t1.t277.t7 (cl (= 0 0)) :rule refl)
(step t22.t1.t277.t8 (cl (= @p_130 @p_145)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t22.t1.t277.t9 (cl (= -1 -1)) :rule refl)
(step t22.t1.t277.t10 (cl (= @p_129 @p_106)) :rule cong :premises (t22.t1.t272))
(step t22.t1.t277.t11 (cl @p_108) :rule rare_rewrite :args ("evaluate"))
(step t22.t1.t277.t12 (cl (= @p_129 5)) :rule trans :premises (t22.t1.t277.t10 t22.t1.t277.t11))
(step t22.t1.t277.t13 (cl (= @p_144 @p_138)) :rule cong :premises (t22.t1.t277.t9 t22.t1.t277.t12))
(step t22.t1.t277.t14 (cl (= @p_144 -5)) :rule trans :premises (t22.t1.t277.t13 t22.t1.t264))
(step t22.t1.t277.t15 (cl (= @p_145 @p_146)) :rule cong :premises (t22.t1.t6 t22.t1.t277.t14))
(step t22.t1.t277.t16 (cl (= @p_146 @p_92)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t22.t1.t277.t17 (cl (= @p_145 @p_92)) :rule trans :premises (t22.t1.t277.t15 t22.t1.t277.t16))
(step t22.t1.t277.t18 (cl (= @p_130 @p_92)) :rule trans :premises (t22.t1.t277.t8 t22.t1.t277.t17))
(step t22.t1.t277.t19 (cl (= @p_131 @p_93)) :rule cong :premises (t22.t1.t256 t22.t1.t277.t7 t22.t1.t277.t18))
(step t22.t1.t277.t20 (cl (= @p_142 @p_94)) :rule cong :premises (t22.t1.t277.t19 t22.t1.t214))
(step t22.t1.t277.t21 (cl (= @p_143 @p_111)) :rule cong :premises (t22.t1.t256 t22.t1.t277.t20))
(step t22.t1.t277.t22 (cl (= @p_111 @p_111)) :rule cong :premises (t22.t1.t256 t22.t1.t215))
(step t22.t1.t277.t23 (cl @p_135) :rule trans :premises (t22.t1.t274 t22.t1.t277.t22))
(step t22.t1.t277.t24 (cl (= @p_111 @p_127)) :rule symm :premises (t22.t1.t277.t23))
(step t22.t1.t277.t25 (cl @p_134) :rule trans :premises (t22.t1.t277.t3 t22.t1.t277.t6 t22.t1.t277.t21 t22.t1.t277.t24))
(step t22.t1.t277.t26 (cl (not (= @p_29 0))) :rule hole :premises (t22.t1.t277.a1) :args ("STRING_LENGTH_NON_EMPTY"))
(step t22.t1.t277.t27 (cl @p_133) :rule hole :premises (t22.t1.t277.a0 t22.t1.t277.t26) :args ("CONCAT_CPROP" true))
(step t22.t1.t277.t28 (cl @p_127) :rule resolution :premises (t22.t1.t277.t0 t22.t1.t277.t25 t22.t1.t277.t27))
(step t22.t1.t277 (cl @p_113 @p_115 @p_127) :rule subproof :discharge (t22.t1.t277.a0 t22.t1.t277.a1))
(step t22.t1.t278 (cl @p_117 @p_3) :rule and_pos :args (0))
(step t22.t1.t279 (cl @p_117 @p_10) :rule and_pos :args (1))
(step t22.t1.t280 (cl @p_127 @p_117 @p_117) :rule resolution :premises (t22.t1.t277 t22.t1.t278 t22.t1.t279))
(step t22.t1.t281 (cl @p_117 @p_117 @p_127) :rule reordering :premises (t22.t1.t280))
(step t22.t1.t282 (cl @p_117 @p_127) :rule contraction :premises (t22.t1.t281))
(step t22.t1.t283 (cl @p_128 @p_127) :rule resolution :premises (t22.t1.t276 t22.t1.t282))
(step t22.t1.t284 (cl @p_128 (not @p_127)) :rule implies_neg2)
(step t22.t1.t285 (cl @p_128 @p_128) :rule resolution :premises (t22.t1.t283 t22.t1.t284))
(step t22.t1.t286 (cl @p_128) :rule contraction :premises (t22.t1.t285))
(step t22.t1.t287 (cl @p_123) :rule resolution :premises (t22.t1.t254 t22.t1.t275 t22.t1.t286))
(step t22.t1.t288 (cl @p_117 @p_111) :rule implies :premises (t22.t1.t287))
(step t22.t1.t289 (cl @p_111 @p_117) :rule reordering :premises (t22.t1.t288))
(step t22.t1.t290 (cl (not @p_118) (not @p_116) @p_114) :rule equiv_pos2)
(step t22.t1.t291 (cl (= @p_113 @p_113)) :rule refl)
(step t22.t1.t292 (cl (= @p_120 @p_119)) :rule equiv_simplify)
(step t22.t1.t293 (cl (not @p_120) @p_119) :rule equiv1 :premises (t22.t1.t292))
(step t22.t1.t294 (cl (= @p_119 @p_121)) :rule rare_rewrite :args ("eq-symm" @p_115 @p_9))
(step t22.t1.t295 (cl @p_122) :rule refl)
(step t22.t1.t296 (cl @p_119) :rule rare_rewrite :args ("bool-double-not-elim" @p_9))
(step t22.t1.t297 (cl (= @p_121 @p_122)) :rule cong :premises (t22.t1.t295 t22.t1.t296))
(step t22.t1.t298 (cl (= @p_122 true)) :rule rare_rewrite :args ("eq-refl" @p_9))
(step t22.t1.t299 (cl (= @p_121 true)) :rule trans :premises (t22.t1.t297 t22.t1.t298))
(step t22.t1.t300 (cl @p_120) :rule trans :premises (t22.t1.t294 t22.t1.t299))
(step t22.t1.t301 (cl @p_119) :rule resolution :premises (t22.t1.t293 t22.t1.t300))
(step t22.t1.t302 (cl @p_118) :rule cong :premises (t22.t1.t255 t22.t1.t291 t22.t1.t301))
(step t22.t1.t303 (cl @p_112 @p_113 @p_115) :rule and_neg)
(step t22.t1.t304 (cl @p_116 @p_117) :rule or_neg :args (0))
(step t22.t1.t305 (cl @p_116 (not @p_113)) :rule or_neg :args (1))
(step t22.t1.t306 (cl @p_116 (not @p_115)) :rule or_neg :args (2))
(step t22.t1.t307 (cl @p_116 @p_116 @p_116) :rule resolution :premises (t22.t1.t303 t22.t1.t304 t22.t1.t305 t22.t1.t306))
(step t22.t1.t308 (cl @p_116) :rule contraction :premises (t22.t1.t307))
(step t22.t1.t309 (cl @p_114) :rule resolution :premises (t22.t1.t290 t22.t1.t302 t22.t1.t308))
(step t22.t1.t310 (cl @p_112 @p_113 @p_9) :rule or :premises (t22.t1.t309))
(step t22.t1.t311 (cl @p_9 @p_113 @p_112) :rule reordering :premises (t22.t1.t310))
(step t22.t1.t312 (cl @p_112) :rule resolution :premises (t22.t1.t311 a3 a0))
(step t22.t1.t313 (cl @p_111) :rule resolution :premises (t22.t1.t289 t22.t1.t312))
(step t22.t1.t314 (cl @p_95) :rule and :premises (t22.t1.t244) :args (0))
(step t22.t1.t315 (cl @p_111) :rule trans :premises (t22.t1.t313 t22.t1.t314))
(step t22.t1.t316 (cl @p_154) :rule cong :premises (t22.t1.t315))
(step t22.t1.t317 (cl @p_209) :rule resolution :premises (t22.t1.t250 t22.t1.t253 t22.t1.t316))
(step t22.t1.t318 (cl @p_210) :rule resolution :premises (t22.t1.t249 t22.t1.t36 t22.t1.t317))
(step t22.t1.t319 (cl @p_208) :rule resolution :premises (t22.t1.t248 t22.t1.t318))
(step t22.t1.t320 (cl @p_257) :rule resolution :premises (t22.t1.t29 t22.t1.t38 t22.t1.t64 t22.t1.t131 t22.t1.t174 t22.t1.t191 t22.t1.t205 t22.t1.t246 t22.t1.t319))
(step t22.t1.t321 (cl false) :rule resolution :premises (t22.t1.t0 t22.t1.t28 t22.t1.t320))
(step t22.t1 (cl @p_246 false) :rule subproof :discharge (t22.t1.a0))
(step t22.t2 (cl @p_254 false) :rule resolution :premises (t22.t0 t22.t1))
(step t22.t3 (cl @p_254 (! (not false) :named @p_165)) :rule implies_neg2)
(step t22.t4 (cl @p_254 @p_254) :rule resolution :premises (t22.t2 t22.t3))
(step t22.t5 (cl @p_254) :rule contraction :premises (t22.t4))
(step t22.t6 (cl (= @p_254 @p_246)) :rule implies_simplify)
(step t22.t7 (cl (not @p_254) @p_246) :rule equiv1 :premises (t22.t6))
(step t22.t8 (cl @p_246) :rule resolution :premises (t22.t5 t22.t7))
(step t22.t9 (cl) :rule resolution :premises (t22.a7 t22.t8))
(step t22 (cl @p_161 @p_160 @p_159 @p_71 @p_157 @p_158 @p_86 @p_246 false) :rule subproof :discharge (t22.a0 t22.a1 t22.a2 t22.a3 t22.a4 t22.a5 t22.a6 t22.a7))
(step t23 (cl @p_252 @p_154) :rule and_pos :args (0))
(step t24 (cl @p_252 @p_99) :rule and_pos :args (1))
(step t25 (cl @p_252 @p_155) :rule and_pos :args (2))
(step t26 (cl @p_252 @p_67) :rule and_pos :args (3))
(step t27 (cl @p_252 @p_14) :rule and_pos :args (4))
(step t28 (cl @p_252 @p_34) :rule and_pos :args (5))
(step t29 (cl @p_252 @p_77) :rule and_pos :args (6))
(step t30 (cl @p_252 @p_149) :rule and_pos :args (7))
(step t31 (cl false @p_252 @p_252 @p_252 @p_252 @p_252 @p_252 @p_252 @p_252) :rule resolution :premises (t22 t23 t24 t25 t26 t27 t28 t29 t30))
(step t32 (cl @p_252 @p_252 @p_252 @p_252 @p_252 @p_252 @p_252 @p_252 false) :rule reordering :premises (t31))
(step t33 (cl @p_252 false) :rule contraction :premises (t32))
(step t34 (cl @p_253 false) :rule resolution :premises (t21 t33))
(step t35 (cl @p_253 @p_165) :rule implies_neg2)
(step t36 (cl @p_253 @p_253) :rule resolution :premises (t34 t35))
(step t37 (cl @p_253) :rule contraction :premises (t36))
(step t38 (cl (= @p_253 @p_252)) :rule implies_simplify)
(step t39 (cl (not @p_253) @p_252) :rule equiv1 :premises (t38))
(step t40 (cl @p_252) :rule resolution :premises (t37 t39))
(step t41 (cl @p_250) :rule resolution :premises (t20 t40))
(step t42 (cl @p_113 @p_71 @p_244 @p_157 @p_86 @p_245 @p_158 @p_246 @p_247 @p_248 @p_160) :rule not_and :premises (t41))
(step t43 (cl @p_71 @p_113 @p_244 @p_157 @p_86 @p_245 @p_158 @p_246 @p_247 @p_248 @p_160) :rule reordering :premises (t42))
(step t44 (cl (! (not (! (and @p_149 (! (= "" @p_93) :named @p_150)) :named @p_151)) :named @p_243) @p_149) :rule and_pos :args (0))
(step t45 (cl @p_149 @p_243) :rule reordering :premises (t44))
(step t46 (cl (not (! (= (! (or (! (and @p_149 (! (= @p_93 "") :named @p_234)) :named @p_235) (! (> @p_98 0) :named @p_233)) :named @p_236) (! (or @p_151 (! (>= @p_98 1) :named @p_152)) :named @p_232)) :named @p_237)) (not @p_236) @p_232) :rule equiv_pos2)
(step t47 (cl (= @p_149 @p_149)) :rule refl)
(step t48 (cl (= @p_234 @p_150)) :rule rare_rewrite :args ("eq-symm" @p_93 ""))
(step t49 (cl (= @p_235 @p_151)) :rule cong :premises (t47 t48))
(step t50 (cl (= @p_233 (! (not (! (<= @p_98 0) :named @p_238)) :named @p_239))) :rule rare_rewrite :args ("arith-elim-gt" @p_98 0))
(step t51 (cl (= @p_238 (! (not (! (>= @p_98 @p_88) :named @p_241)) :named @p_242))) :rule rare_rewrite :args ("arith-leq-norm" @p_98 0))
(step t52 (cl @p_102) :rule refl)
(step t53 (cl @p_91) :rule rare_rewrite :args ("evaluate"))
(step t54 (cl (= @p_241 @p_152)) :rule cong :premises (t52 t53))
(step t55 (cl (= @p_242 (! (not @p_152) :named @p_153))) :rule cong :premises (t54))
(step t56 (cl (= @p_238 @p_153)) :rule trans :premises (t51 t55))
(step t57 (cl (= @p_239 (! (not @p_153) :named @p_240))) :rule cong :premises (t56))
(step t58 (cl (= @p_240 @p_152)) :rule rare_rewrite :args ("bool-double-not-elim" @p_152))
(step t59 (cl (= @p_239 @p_152)) :rule trans :premises (t57 t58))
(step t60 (cl (= @p_233 @p_152)) :rule trans :premises (t50 t59))
(step t61 (cl @p_237) :rule cong :premises (t49 t60))
(step t62 (cl @p_236) :rule hole :args ("STRING_LENGTH_POS" @p_93))
(step t63 (cl @p_232) :rule resolution :premises (t46 t61 t62))
(step t64 (cl @p_151 @p_152) :rule or :premises (t63))
(step t65 (cl (! (=> (! (and @p_154 @p_77 @p_34 @p_14 @p_67 @p_155 @p_99 @p_152) :named @p_162) false) :named @p_164) @p_162) :rule implies_neg1)
(anchor :step t66)
(assume t66.a0 @p_154)
(assume t66.a1 @p_77)
(assume t66.a2 @p_34)
(assume t66.a3 @p_14)
(assume t66.a4 @p_67)
(assume t66.a5 @p_155)
(assume t66.a6 @p_99)
(assume t66.a7 @p_152)
(step t66.t0 (cl (not (! (= (! (<= (! (+ @p_182 @p_181 @p_32 @p_179 @p_178 @p_175 @p_174 @p_171) :named @p_183) (! (+ @p_167 @p_166 @p_167 -2 @p_168 @p_167 @p_166 -5) :named @p_169)) :named @p_184) false) :named @p_223)) (not @p_184) false) :rule equiv_pos2)
(step t66.t1 (cl (= @p_183 (! (+ @p_182 @p_181 @p_32 @p_5 @p_31 @p_29 @p_172 @p_178 @p_175 @p_174 @p_98 @p_170) :named @p_226))) :rule rare_rewrite :args ("arith-poly-norm"))
(step t66.t2 (cl (= @p_182 @p_182)) :rule refl)
(step t66.t3 (cl (= @p_181 @p_230)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t66.t4 (cl (= @p_32 @p_32)) :rule refl)
(step t66.t5 (cl @p_37) :rule refl)
(step t66.t6 (cl @p_52) :rule refl)
(step t66.t7 (cl @p_51) :rule refl)
(step t66.t8 (cl (= @p_172 @p_172)) :rule refl)
(step t66.t9 (cl (= @p_178 @p_229)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t66.t10 (cl (= @p_175 @p_228)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t66.t11 (cl (= @p_174 @p_227)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t66.t12 (cl @p_102) :rule refl)
(step t66.t13 (cl (= @p_170 @p_170)) :rule refl)
(step t66.t14 (cl (= @p_226 (! (+ @p_182 @p_230 @p_32 @p_5 @p_31 @p_29 @p_172 @p_229 @p_228 @p_227 @p_98 @p_170) :named @p_231))) :rule cong :premises (t66.t2 t66.t3 t66.t4 t66.t5 t66.t6 t66.t7 t66.t8 t66.t9 t66.t10 t66.t11 t66.t12 t66.t13))
(step t66.t15 (cl (= @p_231 0)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t66.t16 (cl (= @p_226 0)) :rule trans :premises (t66.t14 t66.t15))
(step t66.t17 (cl (= @p_183 0)) :rule trans :premises (t66.t1 t66.t16))
(step t66.t18 (cl (= @p_167 -1)) :rule rare_rewrite :args ("evaluate"))
(step t66.t19 (cl (= @p_166 0)) :rule rare_rewrite :args ("evaluate"))
(step t66.t20 (cl (= -2 -2)) :rule refl)
(step t66.t21 (cl (= @p_168 6)) :rule rare_rewrite :args ("evaluate"))
(step t66.t22 (cl (= -5 -5)) :rule refl)
(step t66.t23 (cl (= @p_169 (! (+ -1 0 -1 -2 6 -1 0 -5) :named @p_225))) :rule cong :premises (t66.t18 t66.t19 t66.t18 t66.t20 t66.t21 t66.t18 t66.t19 t66.t22))
(step t66.t24 (cl (= @p_225 -4)) :rule rare_rewrite :args ("evaluate"))
(step t66.t25 (cl (= @p_169 -4)) :rule trans :premises (t66.t23 t66.t24))
(step t66.t26 (cl (= @p_184 (! (<= 0 -4) :named @p_224))) :rule cong :premises (t66.t17 t66.t25))
(step t66.t27 (cl (= @p_224 false)) :rule rare_rewrite :args ("evaluate"))
(step t66.t28 (cl @p_223) :rule trans :premises (t66.t26 t66.t27))
(step t66.t29 (cl (not (! (<= @p_182 @p_167) :named @p_213)) @p_216 @p_217 @p_218 @p_219 @p_220 @p_221 @p_222 @p_184) :rule la_generic :args (1/1 -1/1 1/1 -1/1 -1/1 1/1 -1/1 -1/1 1/1))
(step t66.t30 (cl (=> (! (and @p_190 @p_152) :named @p_214) @p_213)) :rule la_mult_neg)
(step t66.t31 (cl (not @p_214) @p_213) :rule implies :premises (t66.t30))
(step t66.t32 (cl @p_214 @p_195 @p_153) :rule and_neg)
(step t66.t33 (cl (= @p_194 @p_190)) :rule equiv_simplify)
(step t66.t34 (cl (not @p_194) @p_190) :rule equiv1 :premises (t66.t33))
(step t66.t35 (cl @p_194) :rule rare_rewrite :args ("evaluate"))
(step t66.t36 (cl @p_190) :rule resolution :premises (t66.t34 t66.t35))
(step t66.t37 (cl @p_214) :rule resolution :premises (t66.t32 t66.t36 t66.a7))
(step t66.t38 (cl @p_213) :rule resolution :premises (t66.t31 t66.t37))
(step t66.t39 (cl (=> @p_210 @p_208)) :rule la_mult_neg)
(step t66.t40 (cl (not @p_210) @p_208) :rule implies :premises (t66.t39))
(step t66.t41 (cl @p_210 @p_195 (not @p_209)) :rule and_neg)
(step t66.t42 (cl (not @p_211) @p_161 @p_209) :rule equiv_pos2)
(step t66.t43 (cl (= (* 1 (- @p_180 0)) (* 1 (- @p_29 @p_96)))) :rule rare_rewrite :args ("arith-poly-norm"))
(step t66.t44 (cl @p_212) :rule hole :premises (t66.t43) :args ("ARITH_POLY_NORM_REL" @p_212))
(step t66.t45 (cl @p_211) :rule symm :premises (t66.t44))
(step t66.t46 (cl (not @p_148) (not @p_128) @p_123) :rule equiv_pos2)
(step t66.t47 (cl (= @p_112 @p_112)) :rule refl)
(step t66.t48 (cl (= x x)) :rule refl)
(step t66.t49 (cl @p_109) :rule refl)
(step t66.t50 (cl (= "::BBBB" "::BBBB")) :rule refl)
(step t66.t51 (cl @p_137) :rule rare_rewrite :args ("evaluate"))
(step t66.t52 (cl @p_140) :rule rare_rewrite :args ("evaluate"))
(step t66.t53 (cl (= 1 @p_139)) :rule symm :premises (t66.t52))
(step t66.t54 (cl (= @p_124 @p_139)) :rule trans :premises (t66.t51 t66.t53))
(step t66.t55 (cl @p_24) :rule rare_rewrite :args ("evaluate"))
(step t66.t56 (cl (= @p_138 -5)) :rule rare_rewrite :args ("evaluate"))
(step t66.t57 (cl (= @p_139 @p_141)) :rule cong :premises (t66.t55 t66.t56))
(step t66.t58 (cl (= @p_141 1)) :rule rare_rewrite :args ("evaluate"))
(step t66.t59 (cl @p_140) :rule trans :premises (t66.t57 t66.t58))
(step t66.t60 (cl @p_137) :rule trans :premises (t66.t54 t66.t59))
(step t66.t61 (cl (= 5 5)) :rule refl)
(step t66.t62 (cl (= @p_125 @p_136)) :rule cong :premises (t66.t50 t66.t60 t66.t61))
(step t66.t63 (cl (= @p_136 ":BBBB")) :rule rare_rewrite :args ("evaluate"))
(step t66.t64 (cl (= @p_125 ":BBBB")) :rule trans :premises (t66.t62 t66.t63))
(step t66.t65 (cl (= @p_126 @p_94)) :rule cong :premises (t66.t49 t66.t64))
(step t66.t66 (cl @p_135) :rule cong :premises (t66.t48 t66.t65))
(step t66.t67 (cl @p_148) :rule cong :premises (t66.t47 t66.t66))
(step t66.t68 (cl @p_128 @p_112) :rule implies_neg1)
(anchor :step t66.t69)
(assume t66.t69.a0 @p_3)
(assume t66.t69.a1 @p_10)
(step t66.t69.t0 (cl (not @p_134) (not @p_133) @p_127) :rule equiv_pos2)
(step t66.t69.t1 (cl @p_147) :rule refl)
(step t66.t69.t2 (cl (= @p_132 @p_142)) :rule cong :premises (t66.t69.t1 t66.t64))
(step t66.t69.t3 (cl (= @p_133 @p_143)) :rule cong :premises (t66.t48 t66.t69.t2))
(step t66.t69.t4 (cl @p_147) :rule refl)
(step t66.t69.t5 (cl (= ":BBBB" ":BBBB")) :rule refl)
(step t66.t69.t6 (cl (= @p_142 @p_142)) :rule cong :premises (t66.t69.t4 t66.t69.t5))
(step t66.t69.t7 (cl (= @p_143 @p_143)) :rule cong :premises (t66.t48 t66.t69.t6))
(step t66.t69.t8 (cl (= 0 0)) :rule refl)
(step t66.t69.t9 (cl (= @p_130 @p_145)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t66.t69.t10 (cl (= -1 -1)) :rule refl)
(step t66.t69.t11 (cl (= @p_129 @p_106)) :rule cong :premises (t66.t64))
(step t66.t69.t12 (cl @p_108) :rule rare_rewrite :args ("evaluate"))
(step t66.t69.t13 (cl (= @p_129 5)) :rule trans :premises (t66.t69.t11 t66.t69.t12))
(step t66.t69.t14 (cl (= @p_144 @p_138)) :rule cong :premises (t66.t69.t10 t66.t69.t13))
(step t66.t69.t15 (cl (= @p_144 -5)) :rule trans :premises (t66.t69.t14 t66.t56))
(step t66.t69.t16 (cl (= @p_145 @p_146)) :rule cong :premises (t66.t7 t66.t69.t15))
(step t66.t69.t17 (cl (= @p_146 @p_92)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t66.t69.t18 (cl (= @p_145 @p_92)) :rule trans :premises (t66.t69.t16 t66.t69.t17))
(step t66.t69.t19 (cl (= @p_130 @p_92)) :rule trans :premises (t66.t69.t9 t66.t69.t18))
(step t66.t69.t20 (cl (= @p_131 @p_93)) :rule cong :premises (t66.t48 t66.t69.t8 t66.t69.t19))
(step t66.t69.t21 (cl (= @p_142 @p_94)) :rule cong :premises (t66.t69.t20 t66.t69.t5))
(step t66.t69.t22 (cl (= @p_143 @p_111)) :rule cong :premises (t66.t48 t66.t69.t21))
(step t66.t69.t23 (cl @p_109) :rule refl)
(step t66.t69.t24 (cl @p_95) :rule cong :premises (t66.t69.t23 t66.t69.t5))
(step t66.t69.t25 (cl (= @p_111 @p_111)) :rule cong :premises (t66.t48 t66.t69.t24))
(step t66.t69.t26 (cl @p_135) :rule trans :premises (t66.t66 t66.t69.t25))
(step t66.t69.t27 (cl (= @p_111 @p_127)) :rule symm :premises (t66.t69.t26))
(step t66.t69.t28 (cl @p_134) :rule trans :premises (t66.t69.t3 t66.t69.t7 t66.t69.t22 t66.t69.t27))
(step t66.t69.t29 (cl (not (= @p_29 0))) :rule hole :premises (t66.t69.a1) :args ("STRING_LENGTH_NON_EMPTY"))
(step t66.t69.t30 (cl @p_133) :rule hole :premises (t66.t69.a0 t66.t69.t29) :args ("CONCAT_CPROP" true))
(step t66.t69.t31 (cl @p_127) :rule resolution :premises (t66.t69.t0 t66.t69.t28 t66.t69.t30))
(step t66.t69 (cl @p_113 @p_115 @p_127) :rule subproof :discharge (t66.t69.a0 t66.t69.a1))
(step t66.t70 (cl @p_117 @p_3) :rule and_pos :args (0))
(step t66.t71 (cl @p_117 @p_10) :rule and_pos :args (1))
(step t66.t72 (cl @p_127 @p_117 @p_117) :rule resolution :premises (t66.t69 t66.t70 t66.t71))
(step t66.t73 (cl @p_117 @p_117 @p_127) :rule reordering :premises (t66.t72))
(step t66.t74 (cl @p_117 @p_127) :rule contraction :premises (t66.t73))
(step t66.t75 (cl @p_128 @p_127) :rule resolution :premises (t66.t68 t66.t74))
(step t66.t76 (cl @p_128 (not @p_127)) :rule implies_neg2)
(step t66.t77 (cl @p_128 @p_128) :rule resolution :premises (t66.t75 t66.t76))
(step t66.t78 (cl @p_128) :rule contraction :premises (t66.t77))
(step t66.t79 (cl @p_123) :rule resolution :premises (t66.t46 t66.t67 t66.t78))
(step t66.t80 (cl @p_117 @p_111) :rule implies :premises (t66.t79))
(step t66.t81 (cl @p_111 @p_117) :rule reordering :premises (t66.t80))
(step t66.t82 (cl (not @p_118) (not @p_116) @p_114) :rule equiv_pos2)
(step t66.t83 (cl (= @p_113 @p_113)) :rule refl)
(step t66.t84 (cl (= @p_120 @p_119)) :rule equiv_simplify)
(step t66.t85 (cl (not @p_120) @p_119) :rule equiv1 :premises (t66.t84))
(step t66.t86 (cl (= @p_119 @p_121)) :rule rare_rewrite :args ("eq-symm" @p_115 @p_9))
(step t66.t87 (cl @p_122) :rule refl)
(step t66.t88 (cl @p_119) :rule rare_rewrite :args ("bool-double-not-elim" @p_9))
(step t66.t89 (cl (= @p_121 @p_122)) :rule cong :premises (t66.t87 t66.t88))
(step t66.t90 (cl (= @p_122 true)) :rule rare_rewrite :args ("eq-refl" @p_9))
(step t66.t91 (cl (= @p_121 true)) :rule trans :premises (t66.t89 t66.t90))
(step t66.t92 (cl @p_120) :rule trans :premises (t66.t86 t66.t91))
(step t66.t93 (cl @p_119) :rule resolution :premises (t66.t85 t66.t92))
(step t66.t94 (cl @p_118) :rule cong :premises (t66.t47 t66.t83 t66.t93))
(step t66.t95 (cl @p_112 @p_113 @p_115) :rule and_neg)
(step t66.t96 (cl @p_116 @p_117) :rule or_neg :args (0))
(step t66.t97 (cl @p_116 (not @p_113)) :rule or_neg :args (1))
(step t66.t98 (cl @p_116 (not @p_115)) :rule or_neg :args (2))
(step t66.t99 (cl @p_116 @p_116 @p_116) :rule resolution :premises (t66.t95 t66.t96 t66.t97 t66.t98))
(step t66.t100 (cl @p_116) :rule contraction :premises (t66.t99))
(step t66.t101 (cl @p_114) :rule resolution :premises (t66.t82 t66.t94 t66.t100))
(step t66.t102 (cl @p_112 @p_113 @p_9) :rule or :premises (t66.t101))
(step t66.t103 (cl @p_9 @p_113 @p_112) :rule reordering :premises (t66.t102))
(step t66.t104 (cl @p_112) :rule resolution :premises (t66.t103 a3 a0))
(step t66.t105 (cl @p_111) :rule resolution :premises (t66.t81 t66.t104))
(step t66.t106 (cl (= @p_101 @p_100)) :rule equiv_simplify)
(step t66.t107 (cl (not @p_101) @p_100) :rule equiv1 :premises (t66.t106))
(step t66.t108 (cl @p_110) :rule refl)
(step t66.t109 (cl @p_109) :rule refl)
(step t66.t110 (cl (= ":BBBB" ":BBBB")) :rule refl)
(step t66.t111 (cl @p_95) :rule cong :premises (t66.t109 t66.t110))
(step t66.t112 (cl @p_95) :rule refl)
(step t66.t113 (cl @p_95) :rule trans :premises (t66.t112 t66.t111))
(step t66.t114 (cl (= @p_95 @p_95)) :rule cong :premises (t66.t111 t66.t113))
(step t66.t115 (cl @p_102) :rule cong :premises (t66.t109))
(step t66.t116 (cl (= @p_96 @p_96)) :rule cong :premises (t66.t113))
(step t66.t117 (cl (= @p_97 @p_97)) :rule cong :premises (t66.t22 t66.t116))
(step t66.t118 (cl (= @p_99 @p_99)) :rule cong :premises (t66.t115 t66.t117))
(step t66.t119 (cl @p_110) :rule cong :premises (t66.t114 t66.t118))
(step t66.t120 (cl (= @p_95 @p_109)) :rule rare_rewrite :args ("str-concat-unify-rev" ":BBBB" @p_93 rare-list @p_93 rare-list))
(step t66.t121 (cl (= @p_109 true)) :rule rare_rewrite :args ("eq-refl" @p_93))
(step t66.t122 (cl (= @p_95 true)) :rule trans :premises (t66.t120 t66.t121))
(step t66.t123 (cl @p_102) :rule refl)
(step t66.t124 (cl (= @p_96 @p_107)) :rule rare_rewrite :args ("str-len-concat-rec" @p_93 ":BBBB" rare-list))
(step t66.t125 (cl @p_102) :rule refl)
(step t66.t126 (cl @p_108) :rule rare_rewrite :args ("evaluate"))
(step t66.t127 (cl (= @p_107 @p_105)) :rule cong :premises (t66.t125 t66.t126))
(step t66.t128 (cl (= @p_96 @p_105)) :rule trans :premises (t66.t124 t66.t127))
(step t66.t129 (cl (= @p_105 @p_103)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t66.t130 (cl (= @p_96 @p_103)) :rule trans :premises (t66.t128 t66.t129))
(step t66.t131 (cl (= @p_97 @p_104)) :rule cong :premises (t66.t22 t66.t130))
(step t66.t132 (cl (= @p_104 @p_98)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t66.t133 (cl (= @p_97 @p_98)) :rule trans :premises (t66.t131 t66.t132))
(step t66.t134 (cl (= @p_99 @p_102)) :rule cong :premises (t66.t123 t66.t133))
(step t66.t135 (cl (= @p_102 true)) :rule rare_rewrite :args ("eq-refl" @p_98))
(step t66.t136 (cl (= @p_99 true)) :rule trans :premises (t66.t134 t66.t135))
(step t66.t137 (cl (= @p_100 @p_17)) :rule cong :premises (t66.t122 t66.t136))
(step t66.t138 (cl (= @p_17 true)) :rule rare_rewrite :args ("evaluate"))
(step t66.t139 (cl @p_101) :rule trans :premises (t66.t137 t66.t138))
(step t66.t140 (cl @p_101) :rule trans :premises (t66.t108 t66.t119 t66.t139))
(step t66.t141 (cl @p_100) :rule resolution :premises (t66.t107 t66.t140))
(step t66.t142 (cl @p_95) :rule and :premises (t66.t141) :args (0))
(step t66.t143 (cl @p_111) :rule trans :premises (t66.t105 t66.t142))
(step t66.t144 (cl @p_154) :rule cong :premises (t66.t143))
(step t66.t145 (cl @p_209) :rule resolution :premises (t66.t42 t66.t45 t66.t144))
(step t66.t146 (cl @p_210) :rule resolution :premises (t66.t41 t66.t36 t66.t145))
(step t66.t147 (cl @p_208) :rule resolution :premises (t66.t40 t66.t146))
(step t66.t148 (cl (=> @p_207 @p_206)) :rule la_mult_neg)
(step t66.t149 (cl (not @p_207) @p_206) :rule implies :premises (t66.t148))
(step t66.t150 (cl @p_207 @p_195 @p_86) :rule and_neg)
(step t66.t151 (cl (not @p_83) (not @p_82) @p_80) :rule equiv_pos2)
(step t66.t152 (cl (= @p_78 @p_78)) :rule refl)
(step t66.t153 (cl (= @p_81 @p_85)) :rule rare_rewrite :args ("arith-elim-gt" @p_31 0))
(step t66.t154 (cl (= @p_84 @p_90)) :rule rare_rewrite :args ("arith-leq-norm" @p_31 0))
(step t66.t155 (cl @p_52) :rule refl)
(step t66.t156 (cl @p_91) :rule rare_rewrite :args ("evaluate"))
(step t66.t157 (cl (= @p_89 @p_77)) :rule cong :premises (t66.t155 t66.t156))
(step t66.t158 (cl (= @p_90 @p_86)) :rule cong :premises (t66.t157))
(step t66.t159 (cl (= @p_84 @p_86)) :rule trans :premises (t66.t154 t66.t158))
(step t66.t160 (cl (= @p_85 @p_87)) :rule cong :premises (t66.t159))
(step t66.t161 (cl (= @p_87 @p_77)) :rule rare_rewrite :args ("bool-double-not-elim" @p_77))
(step t66.t162 (cl (= @p_85 @p_77)) :rule trans :premises (t66.t160 t66.t161))
(step t66.t163 (cl (= @p_81 @p_77)) :rule trans :premises (t66.t153 t66.t162))
(step t66.t164 (cl @p_83) :rule cong :premises (t66.t152 t66.t163))
(step t66.t165 (cl @p_82) :rule hole :args ("STRING_LENGTH_POS" w))
(step t66.t166 (cl @p_80) :rule resolution :premises (t66.t151 t66.t164 t66.t165))
(step t66.t167 (cl @p_78 @p_77) :rule or :premises (t66.t166))
(step t66.t168 (cl @p_79 @p_7) :rule and_pos :args (1))
(step t66.t169 (cl @p_7 @p_79) :rule reordering :premises (t66.t168))
(step t66.t170 (cl @p_79) :rule resolution :premises (t66.t169 a2))
(step t66.t171 (cl @p_77) :rule resolution :premises (t66.t167 t66.t170))
(step t66.t172 (cl @p_207) :rule resolution :premises (t66.t150 t66.t36 t66.t171))
(step t66.t173 (cl @p_206) :rule resolution :premises (t66.t149 t66.t172))
(step t66.t174 (cl (not @p_204) @p_158 @p_203) :rule equiv_pos2)
(step t66.t175 (cl (= (* 2 (- @p_179 -2)) (* 2 (- @p_5 @p_33)))) :rule rare_rewrite :args ("arith-poly-norm"))
(step t66.t176 (cl @p_205) :rule hole :premises (t66.t175) :args ("ARITH_POLY_NORM_REL" @p_205))
(step t66.t177 (cl @p_204) :rule symm :premises (t66.t176))
(step t66.t178 (cl (= @p_36 @p_35)) :rule equiv_simplify)
(step t66.t179 (cl (not @p_36) @p_35) :rule equiv1 :premises (t66.t178))
(step t66.t180 (cl @p_64) :rule refl)
(step t66.t181 (cl @p_27) :rule refl)
(step t66.t182 (cl @p_27) :rule refl)
(step t66.t183 (cl (= @p_27 @p_27)) :rule cong :premises (t66.t181 t66.t182))
(step t66.t184 (cl (= @p_30 @p_30)) :rule refl)
(step t66.t185 (cl (= @p_28 @p_28)) :rule cong :premises (t66.t182))
(step t66.t186 (cl (= @p_33 @p_33)) :rule cong :premises (t66.t20 t66.t4 t66.t184 t66.t185))
(step t66.t187 (cl (= @p_34 @p_34)) :rule cong :premises (t66.t5 t66.t186))
(step t66.t188 (cl @p_64) :rule cong :premises (t66.t183 t66.t187))
(step t66.t189 (cl (= @p_27 @p_63)) :rule rare_rewrite :args ("str-concat-unify-rev" x y (rare-list w "A:") y (rare-list w "A:")))
(step t66.t190 (cl (= @p_63 @p_61)) :rule rare_rewrite :args ("str-concat-unify-rev" "A:" y (rare-list w) y (rare-list w)))
(step t66.t191 (cl (= @p_61 @p_59)) :rule rare_rewrite :args ("str-concat-unify-rev" w y rare-list y rare-list))
(step t66.t192 (cl (= @p_27 @p_59)) :rule trans :premises (t66.t189 t66.t190 t66.t191))
(step t66.t193 (cl (= @p_59 true)) :rule rare_rewrite :args ("eq-refl" y))
(step t66.t194 (cl (= @p_27 true)) :rule trans :premises (t66.t192 t66.t193))
(step t66.t195 (cl (= @p_42 @p_41)) :rule equiv_simplify)
(step t66.t196 (cl (not @p_42) @p_41) :rule equiv1 :premises (t66.t195))
(step t66.t197 (cl (not @p_45) (not @p_44) @p_42) :rule equiv_pos2)
(step t66.t198 (cl (= @p_28 @p_58)) :rule rare_rewrite :args ("str-len-concat-rec" y w (rare-list "A:" x)))
(step t66.t199 (cl @p_37) :rule refl)
(step t66.t200 (cl (= @p_57 @p_55)) :rule rare_rewrite :args ("str-len-concat-rec" w "A:" (rare-list x)))
(step t66.t201 (cl (= @p_58 @p_56)) :rule cong :premises (t66.t199 t66.t200))
(step t66.t202 (cl @p_52) :rule refl)
(step t66.t203 (cl (= @p_54 @p_47)) :rule rare_rewrite :args ("str-len-concat-rec" "A:" x rare-list))
(step t66.t204 (cl (= @p_55 @p_48)) :rule cong :premises (t66.t202 t66.t203))
(step t66.t205 (cl (= @p_56 @p_49)) :rule cong :premises (t66.t199 t66.t204))
(step t66.t206 (cl (= @p_28 @p_49)) :rule trans :premises (t66.t198 t66.t201 t66.t205))
(step t66.t207 (cl (= @p_49 @p_53)) :rule rare_rewrite :args ("arith-plus-flatten" (rare-list @p_5) @p_31 (rare-list @p_47) rare-list))
(step t66.t208 (cl (= @p_53 @p_50)) :rule rare_rewrite :args ("arith-plus-flatten" (rare-list @p_5 @p_31) @p_46 (rare-list @p_29) rare-list))
(step t66.t209 (cl (= @p_49 @p_50)) :rule trans :premises (t66.t207 t66.t208))
(step t66.t210 (cl (= @p_46 2)) :rule rare_rewrite :args ("evaluate"))
(step t66.t211 (cl @p_51) :rule refl)
(step t66.t212 (cl (= @p_50 @p_40)) :rule cong :premises (t66.t199 t66.t202 t66.t210 t66.t211))
(step t66.t213 (cl (= @p_49 @p_40)) :rule trans :premises (t66.t209 t66.t212))
(step t66.t214 (cl @p_41) :rule trans :premises (t66.t206 t66.t213))
(step t66.t215 (cl @p_43) :rule refl)
(step t66.t216 (cl (= @p_41 @p_43)) :rule cong :premises (t66.t214 t66.t215))
(step t66.t217 (cl (= true true)) :rule refl)
(step t66.t218 (cl (= @p_42 @p_44)) :rule cong :premises (t66.t216 t66.t217))
(step t66.t219 (cl @p_45) :rule symm :premises (t66.t218))
(step t66.t220 (cl (= @p_44 @p_43)) :rule equiv_simplify)
(step t66.t221 (cl @p_44 (not @p_43)) :rule equiv2 :premises (t66.t220))
(step t66.t222 (cl @p_43) :rule refl)
(step t66.t223 (cl @p_44) :rule resolution :premises (t66.t221 t66.t222))
(step t66.t224 (cl @p_42) :rule resolution :premises (t66.t197 t66.t219 t66.t223))
(step t66.t225 (cl @p_41) :rule resolution :premises (t66.t196 t66.t224))
(step t66.t226 (cl (= @p_40 @p_38)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t66.t227 (cl (= @p_28 @p_38)) :rule trans :premises (t66.t225 t66.t226))
(step t66.t228 (cl (= @p_33 @p_39)) :rule cong :premises (t66.t20 t66.t4 t66.t184 t66.t227))
(step t66.t229 (cl (= @p_39 @p_5)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t66.t230 (cl (= @p_33 @p_5)) :rule trans :premises (t66.t228 t66.t229))
(step t66.t231 (cl (= @p_34 @p_37)) :rule cong :premises (t66.t5 t66.t230))
(step t66.t232 (cl (= @p_37 true)) :rule rare_rewrite :args ("eq-refl" @p_5))
(step t66.t233 (cl (= @p_34 true)) :rule trans :premises (t66.t231 t66.t232))
(step t66.t234 (cl (= @p_35 @p_17)) :rule cong :premises (t66.t194 t66.t233))
(step t66.t235 (cl @p_36) :rule trans :premises (t66.t234 t66.t138))
(step t66.t236 (cl @p_36) :rule trans :premises (t66.t180 t66.t188 t66.t235))
(step t66.t237 (cl @p_35) :rule resolution :premises (t66.t179 t66.t236))
(step t66.t238 (cl @p_34) :rule and :premises (t66.t237) :args (1))
(step t66.t239 (cl @p_203) :rule resolution :premises (t66.t174 t66.t177 t66.t238))
(step t66.t240 (cl (=> @p_200 @p_198)) :rule la_mult_neg)
(step t66.t241 (cl (not @p_200) @p_198) :rule implies :premises (t66.t240))
(step t66.t242 (cl @p_200 @p_195 (not @p_199)) :rule and_neg)
(step t66.t243 (cl (not @p_201) @p_157 @p_199) :rule equiv_pos2)
(step t66.t244 (cl (= (* 6 (- @p_177 -6)) (* 6 (- @p_4 @p_13)))) :rule rare_rewrite :args ("arith-poly-norm"))
(step t66.t245 (cl @p_202) :rule hole :premises (t66.t244) :args ("ARITH_POLY_NORM_REL" @p_202))
(step t66.t246 (cl @p_201) :rule symm :premises (t66.t245))
(step t66.t247 (cl (= @p_16 @p_15)) :rule equiv_simplify)
(step t66.t248 (cl (not @p_16) @p_15) :rule equiv1 :premises (t66.t247))
(step t66.t249 (cl @p_26) :rule refl)
(step t66.t250 (cl @p_11) :rule refl)
(step t66.t251 (cl @p_11) :rule refl)
(step t66.t252 (cl (= @p_11 @p_11)) :rule cong :premises (t66.t250 t66.t251))
(step t66.t253 (cl @p_18) :rule refl)
(step t66.t254 (cl (= -6 -6)) :rule refl)
(step t66.t255 (cl (= @p_12 @p_12)) :rule cong :premises (t66.t251))
(step t66.t256 (cl (= @p_13 @p_13)) :rule cong :premises (t66.t254 t66.t255))
(step t66.t257 (cl (= @p_14 @p_14)) :rule cong :premises (t66.t253 t66.t256))
(step t66.t258 (cl @p_26) :rule cong :premises (t66.t252 t66.t257))
(step t66.t259 (cl (= @p_11 @p_25)) :rule rare_rewrite :args ("str-concat-unify-rev" "::BBBB" z rare-list z rare-list))
(step t66.t260 (cl (= @p_25 true)) :rule rare_rewrite :args ("eq-refl" z))
(step t66.t261 (cl (= @p_11 true)) :rule trans :premises (t66.t259 t66.t260))
(step t66.t262 (cl (= @p_12 @p_23)) :rule rare_rewrite :args ("str-len-concat-rec" z "::BBBB" rare-list))
(step t66.t263 (cl @p_18) :rule refl)
(step t66.t264 (cl @p_24) :rule rare_rewrite :args ("evaluate"))
(step t66.t265 (cl (= @p_23 @p_21)) :rule cong :premises (t66.t263 t66.t264))
(step t66.t266 (cl (= @p_12 @p_21)) :rule trans :premises (t66.t262 t66.t265))
(step t66.t267 (cl (= @p_21 @p_19)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t66.t268 (cl (= @p_12 @p_19)) :rule trans :premises (t66.t266 t66.t267))
(step t66.t269 (cl (= @p_13 @p_20)) :rule cong :premises (t66.t254 t66.t268))
(step t66.t270 (cl (= @p_20 @p_4)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t66.t271 (cl (= @p_13 @p_4)) :rule trans :premises (t66.t269 t66.t270))
(step t66.t272 (cl (= @p_14 @p_18)) :rule cong :premises (t66.t253 t66.t271))
(step t66.t273 (cl (= @p_18 true)) :rule rare_rewrite :args ("eq-refl" @p_4))
(step t66.t274 (cl (= @p_14 true)) :rule trans :premises (t66.t272 t66.t273))
(step t66.t275 (cl (= @p_15 @p_17)) :rule cong :premises (t66.t261 t66.t274))
(step t66.t276 (cl @p_16) :rule trans :premises (t66.t275 t66.t138))
(step t66.t277 (cl @p_16) :rule trans :premises (t66.t249 t66.t258 t66.t276))
(step t66.t278 (cl @p_15) :rule resolution :premises (t66.t248 t66.t277))
(step t66.t279 (cl @p_14) :rule and :premises (t66.t278) :args (1))
(step t66.t280 (cl @p_199) :rule resolution :premises (t66.t243 t66.t246 t66.t279))
(step t66.t281 (cl @p_200) :rule resolution :premises (t66.t242 t66.t36 t66.t280))
(step t66.t282 (cl @p_198) :rule resolution :premises (t66.t241 t66.t281))
(step t66.t283 (cl (=> @p_197 @p_196)) :rule la_mult_neg)
(step t66.t284 (cl (not @p_197) @p_196) :rule implies :premises (t66.t283))
(step t66.t285 (cl @p_197 @p_195 @p_71) :rule and_neg)
(step t66.t286 (cl (not @p_68) (not @p_6) @p_67) :rule equiv_pos2)
(step t66.t287 (cl (= @p_6 @p_70)) :rule rare_rewrite :args ("arith-elim-gt" @p_5 @p_4))
(step t66.t288 (cl (= @p_69 @p_75)) :rule rare_rewrite :args ("arith-leq-norm" @p_5 @p_4))
(step t66.t289 (cl (= (* -1 (- @p_5 @p_73)) (* -1 (- @p_66 1)))) :rule rare_rewrite :args ("arith-poly-norm"))
(step t66.t290 (cl @p_76) :rule hole :premises (t66.t289) :args ("ARITH_POLY_NORM_REL" @p_76))
(step t66.t291 (cl (= @p_75 @p_71)) :rule cong :premises (t66.t290))
(step t66.t292 (cl (= @p_69 @p_71)) :rule trans :premises (t66.t288 t66.t291))
(step t66.t293 (cl (= @p_70 @p_72)) :rule cong :premises (t66.t292))
(step t66.t294 (cl (= @p_72 @p_67)) :rule rare_rewrite :args ("bool-double-not-elim" @p_67))
(step t66.t295 (cl (= @p_70 @p_67)) :rule trans :premises (t66.t293 t66.t294))
(step t66.t296 (cl @p_68) :rule trans :premises (t66.t287 t66.t295))
(step t66.t297 (cl @p_67) :rule resolution :premises (t66.t286 t66.t296 a1))
(step t66.t298 (cl @p_197) :rule resolution :premises (t66.t285 t66.t36 t66.t297))
(step t66.t299 (cl @p_196) :rule resolution :premises (t66.t284 t66.t298))
(step t66.t300 (cl (=> @p_191 @p_188)) :rule la_mult_neg)
(step t66.t301 (cl (not @p_191) @p_188) :rule implies :premises (t66.t300))
(step t66.t302 (cl @p_191 @p_195 (not @p_189)) :rule and_neg)
(step t66.t303 (cl (not @p_192) @p_159 @p_189) :rule equiv_pos2)
(step t66.t304 (cl (= (* 1 (- @p_173 0)) (* 1 (- @p_12 @p_28)))) :rule rare_rewrite :args ("arith-poly-norm"))
(step t66.t305 (cl @p_193) :rule hole :premises (t66.t304) :args ("ARITH_POLY_NORM_REL" @p_193))
(step t66.t306 (cl @p_192) :rule symm :premises (t66.t305))
(step t66.t307 (cl @p_156) :rule symm :premises (a0))
(step t66.t308 (cl @p_27) :rule and :premises (t66.t237) :args (0))
(step t66.t309 (cl @p_156) :rule trans :premises (t66.t251 t66.t307 t66.t308))
(step t66.t310 (cl @p_155) :rule cong :premises (t66.t309))
(step t66.t311 (cl @p_189) :rule resolution :premises (t66.t303 t66.t306 t66.t310))
(step t66.t312 (cl @p_191) :rule resolution :premises (t66.t302 t66.t36 t66.t311))
(step t66.t313 (cl @p_188) :rule resolution :premises (t66.t301 t66.t312))
(step t66.t314 (cl (not @p_186) @p_160 @p_185) :rule equiv_pos2)
(step t66.t315 (cl (= (* 5 (- @p_171 -5)) (* 5 (- @p_98 @p_97)))) :rule rare_rewrite :args ("arith-poly-norm"))
(step t66.t316 (cl @p_187) :rule hole :premises (t66.t315) :args ("ARITH_POLY_NORM_REL" @p_187))
(step t66.t317 (cl @p_186) :rule symm :premises (t66.t316))
(step t66.t318 (cl @p_99) :rule and :premises (t66.t141) :args (1))
(step t66.t319 (cl @p_185) :rule resolution :premises (t66.t314 t66.t317 t66.t318))
(step t66.t320 (cl @p_184) :rule resolution :premises (t66.t29 t66.t38 t66.t147 t66.t173 t66.t239 t66.t282 t66.t299 t66.t313 t66.t319))
(step t66.t321 (cl false) :rule resolution :premises (t66.t0 t66.t28 t66.t320))
(step t66 (cl @p_161 @p_86 @p_158 @p_157 @p_71 @p_159 @p_160 @p_153 false) :rule subproof :discharge (t66.a0 t66.a1 t66.a2 t66.a3 t66.a4 t66.a5 t66.a6 t66.a7))
(step t67 (cl (! (not @p_162) :named @p_163) @p_154) :rule and_pos :args (0))
(step t68 (cl @p_163 @p_77) :rule and_pos :args (1))
(step t69 (cl @p_163 @p_34) :rule and_pos :args (2))
(step t70 (cl @p_163 @p_14) :rule and_pos :args (3))
(step t71 (cl @p_163 @p_67) :rule and_pos :args (4))
(step t72 (cl @p_163 @p_155) :rule and_pos :args (5))
(step t73 (cl @p_163 @p_99) :rule and_pos :args (6))
(step t74 (cl @p_163 @p_152) :rule and_pos :args (7))
(step t75 (cl false @p_163 @p_163 @p_163 @p_163 @p_163 @p_163 @p_163 @p_163) :rule resolution :premises (t66 t67 t68 t69 t70 t71 t72 t73 t74))
(step t76 (cl @p_163 @p_163 @p_163 @p_163 @p_163 @p_163 @p_163 @p_163 false) :rule reordering :premises (t75))
(step t77 (cl @p_163 false) :rule contraction :premises (t76))
(step t78 (cl @p_164 false) :rule resolution :premises (t65 t77))
(step t79 (cl @p_164 @p_165) :rule implies_neg2)
(step t80 (cl @p_164 @p_164) :rule resolution :premises (t78 t79))
(step t81 (cl @p_164) :rule contraction :premises (t80))
(step t82 (cl (= @p_164 @p_163)) :rule implies_simplify)
(step t83 (cl (not @p_164) @p_163) :rule equiv1 :premises (t82))
(step t84 (cl @p_163) :rule resolution :premises (t81 t83))
(step t85 (cl @p_161 @p_86 @p_158 @p_157 @p_71 @p_159 @p_160 @p_153) :rule not_and :premises (t84))
(step t86 (cl @p_71 @p_157 @p_86 @p_158 @p_159 @p_153 @p_160 @p_161) :rule reordering :premises (t85))
(step t87 (cl (not @p_68) (not @p_6) @p_67) :rule equiv_pos2)
(step t88 (cl (= @p_6 @p_70)) :rule rare_rewrite :args ("arith-elim-gt" @p_5 @p_4))
(step t89 (cl (= @p_69 @p_75)) :rule rare_rewrite :args ("arith-leq-norm" @p_5 @p_4))
(step t90 (cl (= (* -1 (- @p_5 @p_73)) (* -1 (- @p_66 1)))) :rule rare_rewrite :args ("arith-poly-norm"))
(step t91 (cl @p_76) :rule hole :premises (t90) :args ("ARITH_POLY_NORM_REL" @p_76))
(step t92 (cl (= @p_75 @p_71)) :rule cong :premises (t91))
(step t93 (cl (= @p_69 @p_71)) :rule trans :premises (t89 t92))
(step t94 (cl (= @p_70 @p_72)) :rule cong :premises (t93))
(step t95 (cl (= @p_72 @p_67)) :rule rare_rewrite :args ("bool-double-not-elim" @p_67))
(step t96 (cl (= @p_70 @p_67)) :rule trans :premises (t94 t95))
(step t97 (cl @p_68) :rule trans :premises (t88 t96))
(step t98 (cl @p_67) :rule resolution :premises (t87 t97 a1))
(step t99 (cl (= @p_16 @p_15)) :rule equiv_simplify)
(step t100 (cl (not @p_16) @p_15) :rule equiv1 :premises (t99))
(step t101 (cl @p_26) :rule refl)
(step t102 (cl @p_11) :rule refl)
(step t103 (cl @p_11) :rule refl)
(step t104 (cl (= @p_11 @p_11)) :rule cong :premises (t102 t103))
(step t105 (cl @p_18) :rule refl)
(step t106 (cl (= -6 -6)) :rule refl)
(step t107 (cl (= @p_12 @p_12)) :rule cong :premises (t103))
(step t108 (cl (= @p_13 @p_13)) :rule cong :premises (t106 t107))
(step t109 (cl (= @p_14 @p_14)) :rule cong :premises (t105 t108))
(step t110 (cl @p_26) :rule cong :premises (t104 t109))
(step t111 (cl (= @p_11 @p_25)) :rule rare_rewrite :args ("str-concat-unify-rev" "::BBBB" z rare-list z rare-list))
(step t112 (cl (= @p_25 true)) :rule rare_rewrite :args ("eq-refl" z))
(step t113 (cl (= @p_11 true)) :rule trans :premises (t111 t112))
(step t114 (cl (= @p_12 @p_23)) :rule rare_rewrite :args ("str-len-concat-rec" z "::BBBB" rare-list))
(step t115 (cl @p_18) :rule refl)
(step t116 (cl @p_24) :rule rare_rewrite :args ("evaluate"))
(step t117 (cl (= @p_23 @p_21)) :rule cong :premises (t115 t116))
(step t118 (cl (= @p_12 @p_21)) :rule trans :premises (t114 t117))
(step t119 (cl (= @p_21 @p_19)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t120 (cl (= @p_12 @p_19)) :rule trans :premises (t118 t119))
(step t121 (cl (= @p_13 @p_20)) :rule cong :premises (t106 t120))
(step t122 (cl (= @p_20 @p_4)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t123 (cl (= @p_13 @p_4)) :rule trans :premises (t121 t122))
(step t124 (cl (= @p_14 @p_18)) :rule cong :premises (t105 t123))
(step t125 (cl (= @p_18 true)) :rule rare_rewrite :args ("eq-refl" @p_4))
(step t126 (cl (= @p_14 true)) :rule trans :premises (t124 t125))
(step t127 (cl (= @p_15 @p_17)) :rule cong :premises (t113 t126))
(step t128 (cl (= @p_17 true)) :rule rare_rewrite :args ("evaluate"))
(step t129 (cl @p_16) :rule trans :premises (t127 t128))
(step t130 (cl @p_16) :rule trans :premises (t101 t110 t129))
(step t131 (cl @p_15) :rule resolution :premises (t100 t130))
(step t132 (cl @p_14) :rule and :premises (t131) :args (1))
(step t133 (cl (not @p_83) (not @p_82) @p_80) :rule equiv_pos2)
(step t134 (cl (= @p_78 @p_78)) :rule refl)
(step t135 (cl (= @p_81 @p_85)) :rule rare_rewrite :args ("arith-elim-gt" @p_31 0))
(step t136 (cl (= @p_84 @p_90)) :rule rare_rewrite :args ("arith-leq-norm" @p_31 0))
(step t137 (cl @p_52) :rule refl)
(step t138 (cl @p_91) :rule rare_rewrite :args ("evaluate"))
(step t139 (cl (= @p_89 @p_77)) :rule cong :premises (t137 t138))
(step t140 (cl (= @p_90 @p_86)) :rule cong :premises (t139))
(step t141 (cl (= @p_84 @p_86)) :rule trans :premises (t136 t140))
(step t142 (cl (= @p_85 @p_87)) :rule cong :premises (t141))
(step t143 (cl (= @p_87 @p_77)) :rule rare_rewrite :args ("bool-double-not-elim" @p_77))
(step t144 (cl (= @p_85 @p_77)) :rule trans :premises (t142 t143))
(step t145 (cl (= @p_81 @p_77)) :rule trans :premises (t135 t144))
(step t146 (cl @p_83) :rule cong :premises (t134 t145))
(step t147 (cl @p_82) :rule hole :args ("STRING_LENGTH_POS" w))
(step t148 (cl @p_80) :rule resolution :premises (t133 t146 t147))
(step t149 (cl @p_78 @p_77) :rule or :premises (t148))
(step t150 (cl @p_79 @p_7) :rule and_pos :args (1))
(step t151 (cl @p_7 @p_79) :rule reordering :premises (t150))
(step t152 (cl @p_79) :rule resolution :premises (t151 a2))
(step t153 (cl @p_77) :rule resolution :premises (t149 t152))
(step t154 (cl (= @p_36 @p_35)) :rule equiv_simplify)
(step t155 (cl (not @p_36) @p_35) :rule equiv1 :premises (t154))
(step t156 (cl @p_64) :rule refl)
(step t157 (cl @p_27) :rule refl)
(step t158 (cl @p_27) :rule refl)
(step t159 (cl (= @p_27 @p_27)) :rule cong :premises (t157 t158))
(step t160 (cl @p_37) :rule refl)
(step t161 (cl (= -2 -2)) :rule refl)
(step t162 (cl (= @p_32 @p_32)) :rule refl)
(step t163 (cl (= @p_30 @p_30)) :rule refl)
(step t164 (cl (= @p_28 @p_28)) :rule cong :premises (t158))
(step t165 (cl (= @p_33 @p_33)) :rule cong :premises (t161 t162 t163 t164))
(step t166 (cl (= @p_34 @p_34)) :rule cong :premises (t160 t165))
(step t167 (cl @p_64) :rule cong :premises (t159 t166))
(step t168 (cl (= @p_27 @p_63)) :rule rare_rewrite :args ("str-concat-unify-rev" x y (rare-list w "A:") y (rare-list w "A:")))
(step t169 (cl (= @p_63 @p_61)) :rule rare_rewrite :args ("str-concat-unify-rev" "A:" y (rare-list w) y (rare-list w)))
(step t170 (cl (= @p_61 @p_59)) :rule rare_rewrite :args ("str-concat-unify-rev" w y rare-list y rare-list))
(step t171 (cl (= @p_27 @p_59)) :rule trans :premises (t168 t169 t170))
(step t172 (cl (= @p_59 true)) :rule rare_rewrite :args ("eq-refl" y))
(step t173 (cl (= @p_27 true)) :rule trans :premises (t171 t172))
(step t174 (cl (= @p_42 @p_41)) :rule equiv_simplify)
(step t175 (cl (not @p_42) @p_41) :rule equiv1 :premises (t174))
(step t176 (cl (not @p_45) (not @p_44) @p_42) :rule equiv_pos2)
(step t177 (cl (= @p_28 @p_58)) :rule rare_rewrite :args ("str-len-concat-rec" y w (rare-list "A:" x)))
(step t178 (cl @p_37) :rule refl)
(step t179 (cl (= @p_57 @p_55)) :rule rare_rewrite :args ("str-len-concat-rec" w "A:" (rare-list x)))
(step t180 (cl (= @p_58 @p_56)) :rule cong :premises (t178 t179))
(step t181 (cl @p_52) :rule refl)
(step t182 (cl (= @p_54 @p_47)) :rule rare_rewrite :args ("str-len-concat-rec" "A:" x rare-list))
(step t183 (cl (= @p_55 @p_48)) :rule cong :premises (t181 t182))
(step t184 (cl (= @p_56 @p_49)) :rule cong :premises (t178 t183))
(step t185 (cl (= @p_28 @p_49)) :rule trans :premises (t177 t180 t184))
(step t186 (cl (= @p_49 @p_53)) :rule rare_rewrite :args ("arith-plus-flatten" (rare-list @p_5) @p_31 (rare-list @p_47) rare-list))
(step t187 (cl (= @p_53 @p_50)) :rule rare_rewrite :args ("arith-plus-flatten" (rare-list @p_5 @p_31) @p_46 (rare-list @p_29) rare-list))
(step t188 (cl (= @p_49 @p_50)) :rule trans :premises (t186 t187))
(step t189 (cl (= @p_46 2)) :rule rare_rewrite :args ("evaluate"))
(step t190 (cl @p_51) :rule refl)
(step t191 (cl (= @p_50 @p_40)) :rule cong :premises (t178 t181 t189 t190))
(step t192 (cl (= @p_49 @p_40)) :rule trans :premises (t188 t191))
(step t193 (cl @p_41) :rule trans :premises (t185 t192))
(step t194 (cl @p_43) :rule refl)
(step t195 (cl (= @p_41 @p_43)) :rule cong :premises (t193 t194))
(step t196 (cl (= true true)) :rule refl)
(step t197 (cl (= @p_42 @p_44)) :rule cong :premises (t195 t196))
(step t198 (cl @p_45) :rule symm :premises (t197))
(step t199 (cl (= @p_44 @p_43)) :rule equiv_simplify)
(step t200 (cl @p_44 (not @p_43)) :rule equiv2 :premises (t199))
(step t201 (cl @p_43) :rule refl)
(step t202 (cl @p_44) :rule resolution :premises (t200 t201))
(step t203 (cl @p_42) :rule resolution :premises (t176 t198 t202))
(step t204 (cl @p_41) :rule resolution :premises (t175 t203))
(step t205 (cl (= @p_40 @p_38)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t206 (cl (= @p_28 @p_38)) :rule trans :premises (t204 t205))
(step t207 (cl (= @p_33 @p_39)) :rule cong :premises (t161 t162 t163 t206))
(step t208 (cl (= @p_39 @p_5)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t209 (cl (= @p_33 @p_5)) :rule trans :premises (t207 t208))
(step t210 (cl (= @p_34 @p_37)) :rule cong :premises (t160 t209))
(step t211 (cl (= @p_37 true)) :rule rare_rewrite :args ("eq-refl" @p_5))
(step t212 (cl (= @p_34 true)) :rule trans :premises (t210 t211))
(step t213 (cl (= @p_35 @p_17)) :rule cong :premises (t173 t212))
(step t214 (cl @p_36) :rule trans :premises (t213 t128))
(step t215 (cl @p_36) :rule trans :premises (t156 t167 t214))
(step t216 (cl @p_35) :rule resolution :premises (t155 t215))
(step t217 (cl @p_34) :rule and :premises (t216) :args (1))
(step t218 (cl @p_156) :rule symm :premises (a0))
(step t219 (cl @p_27) :rule and :premises (t216) :args (0))
(step t220 (cl @p_156) :rule trans :premises (t103 t218 t219))
(step t221 (cl @p_155) :rule cong :premises (t220))
(step t222 (cl (= @p_101 @p_100)) :rule equiv_simplify)
(step t223 (cl (not @p_101) @p_100) :rule equiv1 :premises (t222))
(step t224 (cl @p_110) :rule refl)
(step t225 (cl @p_109) :rule refl)
(step t226 (cl (= ":BBBB" ":BBBB")) :rule refl)
(step t227 (cl @p_95) :rule cong :premises (t225 t226))
(step t228 (cl @p_95) :rule refl)
(step t229 (cl @p_95) :rule trans :premises (t228 t227))
(step t230 (cl (= @p_95 @p_95)) :rule cong :premises (t227 t229))
(step t231 (cl @p_102) :rule cong :premises (t225))
(step t232 (cl (= -5 -5)) :rule refl)
(step t233 (cl (= @p_96 @p_96)) :rule cong :premises (t229))
(step t234 (cl (= @p_97 @p_97)) :rule cong :premises (t232 t233))
(step t235 (cl (= @p_99 @p_99)) :rule cong :premises (t231 t234))
(step t236 (cl @p_110) :rule cong :premises (t230 t235))
(step t237 (cl (= @p_95 @p_109)) :rule rare_rewrite :args ("str-concat-unify-rev" ":BBBB" @p_93 rare-list @p_93 rare-list))
(step t238 (cl (= @p_109 true)) :rule rare_rewrite :args ("eq-refl" @p_93))
(step t239 (cl (= @p_95 true)) :rule trans :premises (t237 t238))
(step t240 (cl @p_102) :rule refl)
(step t241 (cl (= @p_96 @p_107)) :rule rare_rewrite :args ("str-len-concat-rec" @p_93 ":BBBB" rare-list))
(step t242 (cl @p_102) :rule refl)
(step t243 (cl @p_108) :rule rare_rewrite :args ("evaluate"))
(step t244 (cl (= @p_107 @p_105)) :rule cong :premises (t242 t243))
(step t245 (cl (= @p_96 @p_105)) :rule trans :premises (t241 t244))
(step t246 (cl (= @p_105 @p_103)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t247 (cl (= @p_96 @p_103)) :rule trans :premises (t245 t246))
(step t248 (cl (= @p_97 @p_104)) :rule cong :premises (t232 t247))
(step t249 (cl (= @p_104 @p_98)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t250 (cl (= @p_97 @p_98)) :rule trans :premises (t248 t249))
(step t251 (cl (= @p_99 @p_102)) :rule cong :premises (t240 t250))
(step t252 (cl (= @p_102 true)) :rule rare_rewrite :args ("eq-refl" @p_98))
(step t253 (cl (= @p_99 true)) :rule trans :premises (t251 t252))
(step t254 (cl (= @p_100 @p_17)) :rule cong :premises (t239 t253))
(step t255 (cl @p_101) :rule trans :premises (t254 t128))
(step t256 (cl @p_101) :rule trans :premises (t224 t236 t255))
(step t257 (cl @p_100) :rule resolution :premises (t223 t256))
(step t258 (cl @p_99) :rule and :premises (t257) :args (1))
(step t259 (cl (not @p_148) (not @p_128) @p_123) :rule equiv_pos2)
(step t260 (cl (= @p_112 @p_112)) :rule refl)
(step t261 (cl (= x x)) :rule refl)
(step t262 (cl @p_109) :rule refl)
(step t263 (cl (= "::BBBB" "::BBBB")) :rule refl)
(step t264 (cl @p_137) :rule rare_rewrite :args ("evaluate"))
(step t265 (cl @p_140) :rule rare_rewrite :args ("evaluate"))
(step t266 (cl (= 1 @p_139)) :rule symm :premises (t265))
(step t267 (cl (= @p_124 @p_139)) :rule trans :premises (t264 t266))
(step t268 (cl @p_24) :rule rare_rewrite :args ("evaluate"))
(step t269 (cl (= @p_138 -5)) :rule rare_rewrite :args ("evaluate"))
(step t270 (cl (= @p_139 @p_141)) :rule cong :premises (t268 t269))
(step t271 (cl (= @p_141 1)) :rule rare_rewrite :args ("evaluate"))
(step t272 (cl @p_140) :rule trans :premises (t270 t271))
(step t273 (cl @p_137) :rule trans :premises (t267 t272))
(step t274 (cl (= 5 5)) :rule refl)
(step t275 (cl (= @p_125 @p_136)) :rule cong :premises (t263 t273 t274))
(step t276 (cl (= @p_136 ":BBBB")) :rule rare_rewrite :args ("evaluate"))
(step t277 (cl (= @p_125 ":BBBB")) :rule trans :premises (t275 t276))
(step t278 (cl (= @p_126 @p_94)) :rule cong :premises (t262 t277))
(step t279 (cl @p_135) :rule cong :premises (t261 t278))
(step t280 (cl @p_148) :rule cong :premises (t260 t279))
(step t281 (cl @p_128 @p_112) :rule implies_neg1)
(anchor :step t282)
(assume t282.a0 @p_3)
(assume t282.a1 @p_10)
(step t282.t0 (cl (not @p_134) (not @p_133) @p_127) :rule equiv_pos2)
(step t282.t1 (cl @p_147) :rule refl)
(step t282.t2 (cl (= @p_132 @p_142)) :rule cong :premises (t282.t1 t277))
(step t282.t3 (cl (= @p_133 @p_143)) :rule cong :premises (t261 t282.t2))
(step t282.t4 (cl @p_147) :rule refl)
(step t282.t5 (cl (= @p_142 @p_142)) :rule cong :premises (t282.t4 t226))
(step t282.t6 (cl (= @p_143 @p_143)) :rule cong :premises (t261 t282.t5))
(step t282.t7 (cl (= 0 0)) :rule refl)
(step t282.t8 (cl (= @p_130 @p_145)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t282.t9 (cl @p_51) :rule refl)
(step t282.t10 (cl (= -1 -1)) :rule refl)
(step t282.t11 (cl (= @p_129 @p_106)) :rule cong :premises (t277))
(step t282.t12 (cl @p_108) :rule rare_rewrite :args ("evaluate"))
(step t282.t13 (cl (= @p_129 5)) :rule trans :premises (t282.t11 t282.t12))
(step t282.t14 (cl (= @p_144 @p_138)) :rule cong :premises (t282.t10 t282.t13))
(step t282.t15 (cl (= @p_144 -5)) :rule trans :premises (t282.t14 t269))
(step t282.t16 (cl (= @p_145 @p_146)) :rule cong :premises (t282.t9 t282.t15))
(step t282.t17 (cl (= @p_146 @p_92)) :rule rare_rewrite :args ("arith-poly-norm"))
(step t282.t18 (cl (= @p_145 @p_92)) :rule trans :premises (t282.t16 t282.t17))
(step t282.t19 (cl (= @p_130 @p_92)) :rule trans :premises (t282.t8 t282.t18))
(step t282.t20 (cl (= @p_131 @p_93)) :rule cong :premises (t261 t282.t7 t282.t19))
(step t282.t21 (cl (= @p_142 @p_94)) :rule cong :premises (t282.t20 t226))
(step t282.t22 (cl (= @p_143 @p_111)) :rule cong :premises (t261 t282.t21))
(step t282.t23 (cl (= @p_111 @p_111)) :rule cong :premises (t261 t227))
(step t282.t24 (cl @p_135) :rule trans :premises (t279 t282.t23))
(step t282.t25 (cl (= @p_111 @p_127)) :rule symm :premises (t282.t24))
(step t282.t26 (cl @p_134) :rule trans :premises (t282.t3 t282.t6 t282.t22 t282.t25))
(step t282.t27 (cl (not (= @p_29 0))) :rule hole :premises (t282.a1) :args ("STRING_LENGTH_NON_EMPTY"))
(step t282.t28 (cl @p_133) :rule hole :premises (t282.a0 t282.t27) :args ("CONCAT_CPROP" true))
(step t282.t29 (cl @p_127) :rule resolution :premises (t282.t0 t282.t26 t282.t28))
(step t282 (cl @p_113 @p_115 @p_127) :rule subproof :discharge (t282.a0 t282.a1))
(step t283 (cl @p_117 @p_3) :rule and_pos :args (0))
(step t284 (cl @p_117 @p_10) :rule and_pos :args (1))
(step t285 (cl @p_127 @p_117 @p_117) :rule resolution :premises (t282 t283 t284))
(step t286 (cl @p_117 @p_117 @p_127) :rule reordering :premises (t285))
(step t287 (cl @p_117 @p_127) :rule contraction :premises (t286))
(step t288 (cl @p_128 @p_127) :rule resolution :premises (t281 t287))
(step t289 (cl @p_128 (not @p_127)) :rule implies_neg2)
(step t290 (cl @p_128 @p_128) :rule resolution :premises (t288 t289))
(step t291 (cl @p_128) :rule contraction :premises (t290))
(step t292 (cl @p_123) :rule resolution :premises (t259 t280 t291))
(step t293 (cl @p_117 @p_111) :rule implies :premises (t292))
(step t294 (cl @p_111 @p_117) :rule reordering :premises (t293))
(step t295 (cl (not @p_118) (not @p_116) @p_114) :rule equiv_pos2)
(step t296 (cl (= @p_113 @p_113)) :rule refl)
(step t297 (cl (= @p_120 @p_119)) :rule equiv_simplify)
(step t298 (cl (not @p_120) @p_119) :rule equiv1 :premises (t297))
(step t299 (cl (= @p_119 @p_121)) :rule rare_rewrite :args ("eq-symm" @p_115 @p_9))
(step t300 (cl @p_122) :rule refl)
(step t301 (cl @p_119) :rule rare_rewrite :args ("bool-double-not-elim" @p_9))
(step t302 (cl (= @p_121 @p_122)) :rule cong :premises (t300 t301))
(step t303 (cl (= @p_122 true)) :rule rare_rewrite :args ("eq-refl" @p_9))
(step t304 (cl (= @p_121 true)) :rule trans :premises (t302 t303))
(step t305 (cl @p_120) :rule trans :premises (t299 t304))
(step t306 (cl @p_119) :rule resolution :premises (t298 t305))
(step t307 (cl @p_118) :rule cong :premises (t260 t296 t306))
(step t308 (cl @p_112 @p_113 @p_115) :rule and_neg)
(step t309 (cl @p_116 @p_117) :rule or_neg :args (0))
(step t310 (cl @p_116 (not @p_113)) :rule or_neg :args (1))
(step t311 (cl @p_116 (not @p_115)) :rule or_neg :args (2))
(step t312 (cl @p_116 @p_116 @p_116) :rule resolution :premises (t308 t309 t310 t311))
(step t313 (cl @p_116) :rule contraction :premises (t312))
(step t314 (cl @p_114) :rule resolution :premises (t295 t307 t313))
(step t315 (cl @p_112 @p_113 @p_9) :rule or :premises (t314))
(step t316 (cl @p_9 @p_113 @p_112) :rule reordering :premises (t315))
(step t317 (cl @p_112) :rule resolution :premises (t316 a3 a0))
(step t318 (cl @p_111) :rule resolution :premises (t294 t317))
(step t319 (cl @p_95) :rule and :premises (t257) :args (0))
(step t320 (cl @p_111) :rule trans :premises (t318 t319))
(step t321 (cl @p_154) :rule cong :premises (t320))
(step t322 (cl @p_153) :rule resolution :premises (t86 t98 t132 t153 t217 t221 t258 t321))
(step t323 (cl @p_151) :rule resolution :premises (t64 t322))
(step t324 (cl @p_149) :rule resolution :premises (t45 t323))
(step t325 (cl @p_11) :rule and :premises (t131) :args (0))
(step t326 (cl) :rule resolution :premises (t43 t324 t318 t258 t319 t153 t98 a0 t217 t219 t132 t325))

